<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">910</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Signup" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;stresstestcore${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}@getnada.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;,
    &quot;preferencesIds&quot;: [1,2]
  }
},&quot;query&quot;:&quot;mutation SignUp($signupInput: SignupInput) {\n  signUp(signupInput: $signupInput) {\n    userId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">routers.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SignUp($signupInput: SignupInput) {
  signUp(signupInput: $signupInput) {
    userId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;stresstestcore${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}@getnada.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;,
    &quot;preferencesIds&quot;: [1,2]
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjkxNzc0Mjk3LCJleHAiOjE2OTQzNjYyOTcsInBybSI6IjU4ZjliYzQ1NmUzOTVlMmVjNTY2OTkyNWNmZTUwNGYwIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJjb3JlLWFwcCIsImp0aSI6ImFlOWJlNjU2LTcxNjAtNGJlOC1iYThkLTcxZTRkY2QxZjdmMSJ9.Rj1uMVU7SNUBRXMNTIZF2qWS9vvpuLlECXmLfczmM1hIZje4o1FyAvK7LBJIjVDvdcolziSEdAaJ9v66BoQoQMd3pTd5LkQPD3VwUY94DCb5FOow1nGSULFapwcNX_5OfKS_W42OmlnaA7Qao0O9Y4WSKIZGXZ9IM0P54q5Zd_qto89lO2nAxluEv7xnmLEKysx6G8hNoUOG7A1MmQBNU3IrL6yyJNf3kzM3NdNBVZxoL8OJ79vk7LRDTS0BJUQQ9aBqw40gQkOiME7aTbs5mUcGQ0SZ35h5Jg1MVES2quN_aXBm_76pQtn620TtHgmgSoJBBNMEwjkZhq9FGuCXmQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">1000</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
