<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MARKETPLCAE_STAGING" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">marketplace.staging.nxlvl.app</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">o733402.ingest.sentry.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">api.gleap.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">routers.staging.nxlvl.app</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">data-tr-uat.azureedge.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">api-js.mixpanel.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MarketPlace_HomePage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.staging.nxlvl.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-07-11T10:55:37.854Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;e0c5da1a638b451c9a3dba76e0e5d693&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-07-11T10:55:37.854Z&quot;,&quot;timestamp&quot;:&quot;2023-07-11T10:55:37.854Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;environment&quot;:&quot;uat&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:20,&quot;activity&quot;:[],&quot;type&quot;:&quot;Trending&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:6,&quot;activity&quot;:[],&quot;type&quot;:&quot;ForYou&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopPick&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;LatestDrop&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFeaturedCreators&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:6,&quot;userId&quot;:0},&quot;query&quot;:&quot;query getFeaturedCreators($cursor: Int!, $take: Int!, $userId: Int!, $activityId: [Int]) {\n  getFeaturedCreators(cursor: $cursor, take: $take, activityId: $activityId) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          backgroundImage\n          backgroundVideoData\n          isFollowing(userId: $userId)\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopSales&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;categories&quot;,&quot;variables&quot;:{&quot;ids&quot;:[2]},&quot;query&quot;:&quot;query categories($ids: [Int]) {\n  getCategory(ids: $ids) {\n    id\n    name\n    iconURL\n    activities {\n      id\n      name\n      iconURL\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:1,&quot;events&quot;:[{&quot;name&quot;:&quot;sessionStarted&quot;,&quot;date&quot;:&quot;2023-07-11T10:55:38.744Z&quot;},{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-07-11T10:55:38.744Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.staging.nxlvl.app/&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGroupedUserActivities&quot;,&quot;variables&quot;:{&quot;isUserActivity&quot;:false},&quot;query&quot;:&quot;query getGroupedUserActivities($isUserActivity: Boolean) {\n  getGroupedUserActivities(isUserActivity: $isUserActivity) {\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;searchNFT&quot;,&quot;variables&quot;:{&quot;searchNFTArgs&quot;:{&quot;pageNo&quot;:0,&quot;take&quot;:12,&quot;activity&quot;:[],&quot;editions&quot;:[],&quot;isForSale&quot;:false}},&quot;query&quot;:&quot;query searchNFT($searchNFTArgs: SearchNFTArgs!) {\n  searchNFT(searchNFTArgs: $searchNFTArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        tier\n        userId\n        user {\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        firstname\n        lastname\n        imageURL\n        isNFTBookmarked\n        isLiked\n        likeCount\n        playbackId\n        editions {\n          id\n          tier\n          __typename\n        }\n        activity {\n          id\n          name\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.staging.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getTopTraders&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:3},&quot;query&quot;:&quot;query getTopTraders($cursor: Int!, $take: Int!) {\n  getTopTraders(cursor: $cursor, take: $take) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          username\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg5MDcyNzQwLCJleHAiOjE2OTE2NjQ3NDAsInBybSI6IjE3NjZjYWViMmM5ZWRjMjQ3MWZhZDM0YWQwNDU1ZjVmIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5MzdhZTIxZi0yMWUwLTRiZjYtYWU1Yi1iNWEzYTBiN2EzNzIifQ.Xup1XgfJ9_lysIfDj-XZ0qVruRF9Z7GUnV5Dt9V3KPyTVsQyhQKnADH0P2pA_YOuRZsietGUUbzvleWChxm0hVnzSYHzVtsa3uCLbQ4Ijk2Sxxwy7Wg6MVXPretea2Qs6cluS38WseH8LR7K-G-4akxdVWmqasMBkPnXu2PW19ENNMUZ2KxgnZftBZw0lMMKSz85GCvPb31Dscn8VT46VyC5l8iqMmsGmmI5PzfGO3X9qY9WzXuSyGFL1MMMocPJiA_MaxwsgNDBLF90nIJd_EAUbQAstq8y8-cYJnpcPWHhStWo7-ZQ6OulbtquiyXXNE9_12s5KhYSZLrtofa2xw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-07-11T10:55:39.556Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;e0c5da1a638b451c9a3dba76e0e5d693&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-07-11T10:55:37.854Z&quot;,&quot;timestamp&quot;:&quot;2023-07-11T10:55:39.556Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;environment&quot;:&quot;uat&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;event_id&quot;:&quot;9ff0405e6dc746fabee10bf9e005cd93&quot;,&quot;sent_at&quot;:&quot;2023-07-11T10:55:39.557Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;uat&quot;,&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xd;
{&quot;type&quot;:&quot;event&quot;}&#xd;
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;app:///assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;9ff0405e6dc746fabee10bf9e005cd93&quot;,&quot;timestamp&quot;:1689072939.554,&quot;environment&quot;:&quot;uat&quot;,&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689072938.033,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1689072938.404,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1689072938.743,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689072939.426,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689072939.522,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.staging.nxlvl.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">nftcategorycontainer/Sports.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://marketplace.staging.nxlvl.app/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;197830bcb22a44459af25b66806b8be8&quot;,&quot;sent_at&quot;:&quot;2023-07-11T10:55:42.590Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;uat&quot;,&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.element&quot;:&quot;img#dashboard-trending-card-6500-media.nx-nft-img.[alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;197830bcb22a44459af25b66806b8be8&quot;,&quot;sent_at&quot;:&quot;2023-07-11T10:55:42.590Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;uat&quot;,&quot;release&quot;:&quot;PWE5QQH_P9BFg4uKMUKuh&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.element&quot;:&quot;img#dashboard-trending-card-6500-media.nx-nft-img.[alt</stringProp>
                  <stringProp name="Argument.value">\&quot;dashboard-trending-card-6500-media-nft-image\&quot;]&quot;,&quot;lcp.id&quot;:&quot;dashboard-trending-card-6500-media&quot;,&quot;lcp.url&quot;:&quot;https://marketplace.staging.nxlvl.app/_next/image?url=https://data-tr-uat.azureedge.net/nft-images-uat/0a68d3de-be0b-4fd1-b24a-a7bad5fdf1a9_thumbnail.avif</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dp</stringProp>
                  <stringProp name="Argument.value">/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gaz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_gaz</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-1E97CZXBK0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;113.0.5672.64|Chromium;113.0.5672.64|Not-A.Brand;24.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1689072846</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Marketplace</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="slf_rd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">slf_rd</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1366x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je37a0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">10.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">swap&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9334f0aeb54cddbe&quot;,&quot;start_timestamp&quot;:1689072935.2212,&quot;timestamp&quot;:1689072935.3221,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1774,&quot;http.response_content_length&quot;:1474,&quot;http.decoded_response_content_length&quot;:4326,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/PWE5QQH_P9BFg4uKMUKuh/_buildManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;91a914537ba814ff&quot;,&quot;start_timestamp&quot;:1689072935.2212,&quot;timestamp&quot;:1689072936.449,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:377,&quot;http.response_content_length&quot;:77,&quot;http.decoded_response_content_length&quot;:77,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/PWE5QQH_P9BFg4uKMUKuh/_ssgManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;aa8fe37f4e3761d7&quot;,&quot;start_timestamp&quot;:1689072935.2212,&quot;timestamp&quot;:1689072936.5535,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;first-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9d327662236d54f0&quot;,&quot;start_timestamp&quot;:1689072935.7001,&quot;timestamp&quot;:1689072935.7001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;first-contentful-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b7fec37e308afb52&quot;,&quot;start_timestamp&quot;:1689072935.7001,&quot;timestamp&quot;:1689072935.7001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;sentry-tracing-init&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;845b8a5b427fd3a0&quot;,&quot;start_timestamp&quot;:1689072937.815,&quot;timestamp&quot;:1689072937.815,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Next.js-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;bc70d354d49db948&quot;,&quot;start_timestamp&quot;:1689072938.0339,&quot;timestamp&quot;:1689072938.1465,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1900,&quot;http.response_content_length&quot;:1600,&quot;http.decoded_response_content_length&quot;:3626,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/7805.184bf9ea8bdc86c2.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a26feac8eb103fca&quot;,&quot;start_timestamp&quot;:1689072938.1326,&quot;timestamp&quot;:1689072938.4222,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1944,&quot;http.response_content_length&quot;:1644,&quot;http.decoded_response_content_length&quot;:5268,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2206.cd19a51cec080027.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8e3eff5ac206ca5d&quot;,&quot;start_timestamp&quot;:1689072938.1343,&quot;timestamp&quot;:1689072938.4225,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://accounts.google.com/gsi/client&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;92c579aac48cd058&quot;,&quot;start_timestamp&quot;:1689072938.1546001,&quot;timestamp&quot;:1689072938.6191,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1987,&quot;http.response_content_length&quot;:1687,&quot;http.decoded_response_content_length&quot;:3093,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;be2822b32385d8e5&quot;,&quot;start_timestamp&quot;:1689072938.1558,&quot;timestamp&quot;:1689072938.1704001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://www.googletagmanager.com/gtag/js?id=G-1E97CZXBK0&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;bd14aef89508a7fd&quot;,&quot;start_timestamp&quot;:1689072938.1561,&quot;timestamp&quot;:1689072938.3297,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8d3000228f330568&quot;,&quot;start_timestamp&quot;:1689072938.1581001,&quot;timestamp&quot;:1689072938.1927001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2844,&quot;http.response_content_length&quot;:2544,&quot;http.decoded_response_content_length&quot;:6548,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9247.f76d5e4be1377f43.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a120aca6a948e685&quot;,&quot;start_timestamp&quot;:1689072938.2016,&quot;timestamp&quot;:1689072938.4839,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2915,&quot;http.response_content_length&quot;:2615,&quot;http.decoded_response_content_length&quot;:7870,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3071.12ca6b3fc01a82b5.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;ac2ee417fae3e025&quot;,&quot;start_timestamp&quot;:1689072938.2129,&quot;timestamp&quot;:1689072938.4903,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2258,&quot;http.response_content_length&quot;:1958,&quot;http.decoded_response_content_length&quot;:5479,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2626.a187f05ae4ba5475.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;ad913075c50e92b9&quot;,&quot;start_timestamp&quot;:1689072938.2385,&quot;timestamp&quot;:1689072938.5129,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;beforeRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9694da596a347036&quot;,&quot;start_timestamp&quot;:1689072938.4054,&quot;timestamp&quot;:1689072938.4054,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;afterRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a1ef6021de70b685&quot;,&quot;start_timestamp&quot;:1689072938.5106,&quot;timestamp&quot;:1689072938.5106,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://trdatauat.blob.core.windows.net/marketplace-static-images/nx-connect-vertical-bg.webp&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;813f7dfbb4125960&quot;,&quot;start_timestamp&quot;:1689072938.8745,&quot;timestamp&quot;:1689072939.1571,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:89040,&quot;http.response_content_length&quot;:88740,&quot;http.decoded_response_content_length&quot;:314125,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js?hash=047cf1c9c3cc09b43f124ef925f2ab8c&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a7614211d3027ca6&quot;,&quot;start_timestamp&quot;:1689072939.1887,&quot;timestamp&quot;:1689072939.3654,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://analytics.google.com/g/collect?v=2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">page_view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;lcp.size&quot;:104355,&quot;cls.source.1&quot;:&quot;div.MuiBox-root.css-70qvj9 &gt; div.MuiListItemText-root.nx-menu-text.css-1tsvksn&quot;},&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b278cb05630326d0&quot;,&quot;start_timestamp&quot;:1689072938.1668,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1689072938.7433999,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a148f2961192377d&quot;,&quot;start_timestamp&quot;:1689072938.3463001,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.2096,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9a52649939c5703d&quot;,&quot;start_timestamp&quot;:1689072938.3488,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.5765998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b67b34722685c598&quot;,&quot;start_timestamp&quot;:1689072938.3543,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.5769,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a8bf528f91324488&quot;,&quot;start_timestamp&quot;:1689072938.3758998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.4290998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;aa28bc4b0532f2af&quot;,&quot;start_timestamp&quot;:1689072938.3776999,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.8800998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;839747ff8327b930&quot;,&quot;start_timestamp&quot;:1689072938.3790998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.5763001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b8c63c58beca3234&quot;,&quot;start_timestamp&quot;:1689072938.4,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072941.2580998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;bd8957d40ab38dde&quot;,&quot;start_timestamp&quot;:1689072937.8091002,&quot;timestamp&quot;:1689072938.5531,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;acb38ae40665ec13&quot;,&quot;start_timestamp&quot;:1689072938.5533001,&quot;timestamp&quot;:1689072938.6403,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b0b7ff97d8fed554&quot;,&quot;start_timestamp&quot;:1689072938.6948998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072939.4265,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;af4553fb64fa4056&quot;,&quot;start_timestamp&quot;:1689072938.6461,&quot;timestamp&quot;:1689072938.6991,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a96e28bc22b494be&quot;,&quot;start_timestamp&quot;:1689072938.7445998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072939.5224,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a756a816f755b923&quot;,&quot;start_timestamp&quot;:1689072938.9048,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072941.1698,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;98c87ba2e7849751&quot;,&quot;start_timestamp&quot;:1689072938.9062,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072940.8795998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;adbb6ec8cf168494&quot;,&quot;start_timestamp&quot;:1689072938.762,&quot;timestamp&quot;:1689072938.907,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;98a04f9b9f26a874&quot;,&quot;start_timestamp&quot;:1689072938.9256,&quot;timestamp&quot;:1689072938.9846,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9eb503043770e50f&quot;,&quot;start_timestamp&quot;:1689072938.985,&quot;timestamp&quot;:1689072939.05,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;85c050afd79d8108&quot;,&quot;start_timestamp&quot;:1689072939.0501,&quot;timestamp&quot;:1689072939.1291,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.staging.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.staging.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a2f2d91a95d402ad&quot;,&quot;start_timestamp&quot;:1689072939.3312,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072941.1701999,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;918c642f532cffcf&quot;,&quot;start_timestamp&quot;:1689072939.281,&quot;timestamp&quot;:1689072939.332,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;953e3b6ea0a5a05a&quot;,&quot;start_timestamp&quot;:1689072939.632,&quot;timestamp&quot;:1689072939.703,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;adb293e028bd0610&quot;,&quot;start_timestamp&quot;:1689072939.7041001,&quot;timestamp&quot;:1689072939.7641,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b009fbc1c28fcd77&quot;,&quot;start_timestamp&quot;:1689072939.8525,&quot;timestamp&quot;:1689072939.9125,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;89d496dbf60b5333&quot;,&quot;start_timestamp&quot;:1689072939.9134002,&quot;timestamp&quot;:1689072939.9874,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;89164ce2ee9411f7&quot;,&quot;start_timestamp&quot;:1689072939.9875,&quot;timestamp&quot;:1689072940.0655,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;81079746b15982ed&quot;,&quot;start_timestamp&quot;:1689072940.2555,&quot;timestamp&quot;:1689072940.4045,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;92e891156f3c8d56&quot;,&quot;start_timestamp&quot;:1689072940.4398,&quot;timestamp&quot;:1689072940.5378,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9606c7473a203885&quot;,&quot;start_timestamp&quot;:1689072940.5774002,&quot;timestamp&quot;:1689072940.6524003,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9962e2944c4fdee0&quot;,&quot;start_timestamp&quot;:1689072940.666,&quot;timestamp&quot;:1689072940.7719998,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a47b2a23af5c93aa&quot;,&quot;start_timestamp&quot;:1689072940.8806999,&quot;timestamp&quot;:1689072941.0707,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8560afb644ed4a71&quot;,&quot;start_timestamp&quot;:1689072941.0892,&quot;timestamp&quot;:1689072941.1482,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:776},&quot;description&quot;:&quot;GET https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;99ee131f90e44500&quot;,&quot;start_timestamp&quot;:1689072941.3157,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689072941.5845,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8f65dabd61411411&quot;,&quot;start_timestamp&quot;:1689072941.2599,&quot;timestamp&quot;:1689072941.3579001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;95fb1eb6c28d60e0&quot;,&quot;start_timestamp&quot;:1689072938.511,&quot;timestamp&quot;:1689072938.5112,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;ab338437633ae9a2&quot;,&quot;start_timestamp&quot;:1689072939.6329,&quot;timestamp&quot;:1689072939.6986,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;81da893d314a3272&quot;,&quot;start_timestamp&quot;:1689072932.5141,&quot;timestamp&quot;:1689072932.5141,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;89fc19120bf054c4&quot;,&quot;start_timestamp&quot;:1689072932.5141,&quot;timestamp&quot;:1689072932.5141,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;9c607c16facae95b&quot;,&quot;start_timestamp&quot;:1689072932.5141,&quot;timestamp&quot;:1689072932.5141,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;99977e49ffae062c&quot;,&quot;start_timestamp&quot;:1689072932.5141,&quot;timestamp&quot;:1689072932.5141,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;bc2c71eef45528f7&quot;,&quot;start_timestamp&quot;:1689072934.9435,&quot;timestamp&quot;:1689072935.2141001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8e8e48828a69ee29&quot;,&quot;start_timestamp&quot;:1689072935.2133,&quot;timestamp&quot;:1689072935.2141001,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;8b1b365934a3ea54&quot;,&quot;start_timestamp&quot;:1689072932.5088,&quot;timestamp&quot;:1689072938.0339,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.dwolla.com/v2.1.8/dwolla-web.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;94d8d302cd529026&quot;,&quot;start_timestamp&quot;:1689072935.2202,&quot;timestamp&quot;:1689072935.2699,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1435,&quot;http.response_content_length&quot;:1135,&quot;http.decoded_response_content_length&quot;:3572,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/css/5674832e1468d24d.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;87c9f0373048aa6d&quot;,&quot;start_timestamp&quot;:1689072935.2206001,&quot;timestamp&quot;:1689072935.5279002,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2802,&quot;http.response_content_length&quot;:2502,&quot;http.decoded_response_content_length&quot;:5161,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/webpack-5de5c0ac272cc419.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a72dd3e10f642347&quot;,&quot;start_timestamp&quot;:1689072935.2208,&quot;timestamp&quot;:1689072935.5769,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:42470,&quot;http.response_content_length&quot;:42170,&quot;http.decoded_response_content_length&quot;:130002,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/framework-79bce4a3a540b080.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;acab086fc7f5d1d9&quot;,&quot;start_timestamp&quot;:1689072935.2209,&quot;timestamp&quot;:1689072936.0663002,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36132,&quot;http.response_content_length&quot;:35832,&quot;http.decoded_response_content_length&quot;:120654,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/main-0aec5a71f8114457.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a18f108293dd2416&quot;,&quot;start_timestamp&quot;:1689072935.2209,&quot;timestamp&quot;:1689072936.1199,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2645,&quot;http.response_content_length&quot;:2345,&quot;http.decoded_response_content_length&quot;:6470,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3824-d8743146c025c3d8.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;94dbf1f0cf9f671e&quot;,&quot;start_timestamp&quot;:1689072935.221,&quot;timestamp&quot;:1689072936.111,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5669,&quot;http.response_content_length&quot;:5369,&quot;http.decoded_response_content_length&quot;:19444,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/5365-7539905eac709c01.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;bf9ac0e704907ccd&quot;,&quot;start_timestamp&quot;:1689072935.221,&quot;timestamp&quot;:1689072936.274,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7588,&quot;http.response_content_length&quot;:7288,&quot;http.decoded_response_content_length&quot;:20238,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2873-d416bd9bffe62a04.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b6c3bdc8cbb2cd6d&quot;,&quot;start_timestamp&quot;:1689072935.221,&quot;timestamp&quot;:1689072936.3999,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:837921,&quot;http.response_content_length&quot;:837621,&quot;http.decoded_response_content_length&quot;:3015292,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/_app-9d4f308e6501e14d.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;b8a3224961dda171&quot;,&quot;start_timestamp&quot;:1689072935.221,&quot;timestamp&quot;:1689072937.7933,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6786,&quot;http.response_content_length&quot;:6486,&quot;http.decoded_response_content_length&quot;:25588,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/1204-a87b8ce0873f972b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;ab30f544079e5a38&quot;,&quot;start_timestamp&quot;:1689072935.2211,&quot;timestamp&quot;:1689072936.3539002,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1228,&quot;http.response_content_length&quot;:928,&quot;http.decoded_response_content_length&quot;:2311,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard-cd0bbde8993c840b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a5866886019e9978&quot;,&quot;start_timestamp&quot;:1689072935.2211,&quot;timestamp&quot;:1689072936.4489,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:6714,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">75923066</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">sr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">2123427537&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;aac8e7e6017c46ad&quot;,&quot;start_timestamp&quot;:1689072939.4848,&quot;timestamp&quot;:1689072939.5901,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://trdatauat.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;a525b6d852c81d3d&quot;,&quot;start_timestamp&quot;:1689072939.9132001,&quot;timestamp&quot;:1689072940.2002,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:168056,&quot;http.response_content_length&quot;:167756,&quot;http.decoded_response_content_length&quot;:167756,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-uat.azureedge.net/nft-images-uat/4174be57-5d34-43fa-8b15-e923b9fe1467_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ee" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_ee</stringProp>
                  <stringProp name="Argument.value">1&quot;,&quot;op&quot;:&quot;resource.beacon&quot;,&quot;parent_span_id&quot;:&quot;af3effd3e4c96eec&quot;,&quot;span_id&quot;:&quot;88fa59e138e59b1d&quot;,&quot;start_timestamp&quot;:1689072939.4827,&quot;timestamp&quot;:1689072939.582,&quot;trace_id&quot;:&quot;6c3194148175438faaea69b215b45886&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:342,&quot;http.response_content_length&quot;:42,&quot;http.decoded_response_content_length&quot;:42,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://www.google.co.in/ads/ga-audiences?v=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1704208512.1682059268</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1689072944228" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689072944228</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;Homepage&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.staging.nxlvl.app/&quot;,&quot;$browser_version&quot;: 113,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;qflmn594orihpk3q&quot;,&quot;time&quot;: 1689072939.225,&quot;distinct_id&quot;: 10,&quot;$device_id&quot;: &quot;18901401841602-0a00373140cdcf-26031a51-100200-18901401841602&quot;,&quot;$initial_referrer&quot;: &quot;https://marketplace.qa.nxlvl.app/my-nft/sold&quot;,&quot;$initial_referring_domain&quot;: &quot;marketplace.qa.nxlvl.app&quot;,&quot;ID&quot;: 10,&quot;First Name&quot;: &quot;Frank&quot;,&quot;Last Name&quot;: &quot;Marshall&quot;,&quot;User Name&quot;: &quot;fm&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Tuesday, July 4, 2023 06:34 PM&quot;,&quot;Signup Date&quot;: &quot;Friday, September 17, 2021 01:27 PM&quot;,&quot;List of Interests&quot;: &quot;Baseball,Basketball,Cycling,Lacrosse,Modern Pentathlon,Roller Derby,Rugby (League),Skateboarding,Skiing,Slap Boxing,Softball,Sumo Wrestling,Ultimate Frisbee,Volleyball&quot;,&quot;$user_id&quot;: 10,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:11,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:21,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:31,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">4ada0dd7-b0b1-49b0-adf1-a0628265749a</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">3f94a9cd7131e8516d651bbdc436624cddb97a644673976542c971e191662e48</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\NXLVL\Marketplace_QA\R1.1_MarketplcaeStaging_FrontPage_50Iterations.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\NXLVL\Marketplace_QA\R1.1_MarketplcaeStaging_FrontPage_50Iterations.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
