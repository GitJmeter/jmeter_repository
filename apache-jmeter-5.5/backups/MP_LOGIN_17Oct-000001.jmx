<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MP_LOGIN_17Oct" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;116&quot;, &quot;Not)A;Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;116&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">marketplace.stress.nxlvldev.app</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">o733402.ingest.sentry.io</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">routers.stress.nxlvldev.app</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">api.gleap.io</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">data-tr-uat.azureedge.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">api-js.mixpanel.com</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:22:17.419Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:17.419Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:22:17.419Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:17.419Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.stress.nxlvldev.app/api/club-version" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/club-version</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="from" elementType="Header">
                  <stringProp name="Header.name">from</stringProp>
                  <stringProp name="Header.value">marketplace</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:20,&quot;activity&quot;:[],&quot;type&quot;:&quot;Trending&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjk3NTM2NTc2LCJleHAiOjE3MDAxMjg1NzYsInBybSI6Ijk0MTk1NzE4ZDc3NGFmM2NlMWExYjdlZGU5ZDliNGMyIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5YWNkN2IwYS1jOTNjLTQxZGUtODU1Yy02Njg4NWI3ZDVhNDcifQ.Cd8UEkqSzfZJ9LVv8CAT9DL59iS3baRBPQ_kMbQ7qnDBqTy4RqreTzeJ9BzMb72MHjB8ZxVDIfGO5OwCuxTlEkT-3E3Yl18l7xarp0vyJubzY4mJ0BHcN3b9vMbAAWIwT9Sj8_SMtU3Qs-kNLQ43Cdh0z_gi8ym7TKAqQ9D3ZJz041xqgWjdr6w2QruMB9Msb7nx3saJOmIUhNxqzu4LMnOA8XrFWAdKQASDy91EZ7gKXWj3om5mxB5qgvujjzD9Ta0nhsq8jpg1I_HVz4D9LqKB-RtQo2Wg_9pD40kJZZjdEmekE5rb6Z66YPB8qg7jvcLYno6uRlcVzO7sr0kiNg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:6,&quot;activity&quot;:[],&quot;type&quot;:&quot;ForYou&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjk3NTM2NTc2LCJleHAiOjE3MDAxMjg1NzYsInBybSI6Ijk0MTk1NzE4ZDc3NGFmM2NlMWExYjdlZGU5ZDliNGMyIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5YWNkN2IwYS1jOTNjLTQxZGUtODU1Yy02Njg4NWI3ZDVhNDcifQ.Cd8UEkqSzfZJ9LVv8CAT9DL59iS3baRBPQ_kMbQ7qnDBqTy4RqreTzeJ9BzMb72MHjB8ZxVDIfGO5OwCuxTlEkT-3E3Yl18l7xarp0vyJubzY4mJ0BHcN3b9vMbAAWIwT9Sj8_SMtU3Qs-kNLQ43Cdh0z_gi8ym7TKAqQ9D3ZJz041xqgWjdr6w2QruMB9Msb7nx3saJOmIUhNxqzu4LMnOA8XrFWAdKQASDy91EZ7gKXWj3om5mxB5qgvujjzD9Ta0nhsq8jpg1I_HVz4D9LqKB-RtQo2Wg_9pD40kJZZjdEmekE5rb6Z66YPB8qg7jvcLYno6uRlcVzO7sr0kiNg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:22:18.951Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:18.951Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:22:18.951Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:18.951Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:18.953Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;timestamp&quot;:1697548938.946,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:18.953Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;timestamp&quot;:1697548938.946,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.stress.nxlvldev.app/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">_next/data/YSEcu1OE7NOs9pZknDYn4/index.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-nextjs-data" elementType="Header">
                  <stringProp name="Header.name">x-nextjs-data</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="baggage" elementType="Header">
                  <stringProp name="Header.name">baggage</stringProp>
                  <stringProp name="Header.value">sentry-environment=stress,sentry-release=YSEcu1OE7NOs9pZknDYn4,sentry-transaction=%2Fdashboard,sentry-public_key=2de207a5cb914c89a4097441301dbb57,sentry-trace_id=08f60057c5954b10aa18d47ba404467d,sentry-sample_rate=0.2</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">08f60057c5954b10aa18d47ba404467d-b34d39455e5589fb-1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;categories&quot;,&quot;variables&quot;:{&quot;ids&quot;:[2]},&quot;query&quot;:&quot;query categories($ids: [Int]) {\n  getCategory(ids: $ids) {\n    id\n    name\n    iconURL\n    activities {\n      id\n      name\n      iconURL\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjk3NTM2NTc2LCJleHAiOjE3MDAxMjg1NzYsInBybSI6Ijk0MTk1NzE4ZDc3NGFmM2NlMWExYjdlZGU5ZDliNGMyIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5YWNkN2IwYS1jOTNjLTQxZGUtODU1Yy02Njg4NWI3ZDVhNDcifQ.Cd8UEkqSzfZJ9LVv8CAT9DL59iS3baRBPQ_kMbQ7qnDBqTy4RqreTzeJ9BzMb72MHjB8ZxVDIfGO5OwCuxTlEkT-3E3Yl18l7xarp0vyJubzY4mJ0BHcN3b9vMbAAWIwT9Sj8_SMtU3Qs-kNLQ43Cdh0z_gi8ym7TKAqQ9D3ZJz041xqgWjdr6w2QruMB9Msb7nx3saJOmIUhNxqzu4LMnOA8XrFWAdKQASDy91EZ7gKXWj3om5mxB5qgvujjzD9Ta0nhsq8jpg1I_HVz4D9LqKB-RtQo2Wg_9pD40kJZZjdEmekE5rb6Z66YPB8qg7jvcLYno6uRlcVzO7sr0kiNg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getTopTraders&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:3},&quot;query&quot;:&quot;query getTopTraders($cursor: Int!, $take: Int!) {\n  getTopTraders(cursor: $cursor, take: $take) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          username\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjk3NTM2NTc2LCJleHAiOjE3MDAxMjg1NzYsInBybSI6Ijk0MTk1NzE4ZDc3NGFmM2NlMWExYjdlZGU5ZDliNGMyIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5YWNkN2IwYS1jOTNjLTQxZGUtODU1Yy02Njg4NWI3ZDVhNDcifQ.Cd8UEkqSzfZJ9LVv8CAT9DL59iS3baRBPQ_kMbQ7qnDBqTy4RqreTzeJ9BzMb72MHjB8ZxVDIfGO5OwCuxTlEkT-3E3Yl18l7xarp0vyJubzY4mJ0BHcN3b9vMbAAWIwT9Sj8_SMtU3Qs-kNLQ43Cdh0z_gi8ym7TKAqQ9D3ZJz041xqgWjdr6w2QruMB9Msb7nx3saJOmIUhNxqzu4LMnOA8XrFWAdKQASDy91EZ7gKXWj3om5mxB5qgvujjzD9Ta0nhsq8jpg1I_HVz4D9LqKB-RtQo2Wg_9pD40kJZZjdEmekE5rb6Z66YPB8qg7jvcLYno6uRlcVzO7sr0kiNg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:19.672Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;app:///assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;timestamp&quot;:1697548939.67,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548938.952,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;__span&quot;:&quot;a5a34990804b4d72&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;__span&quot;:&quot;b34d39455e5589fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:19.672Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;app:///assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;timestamp&quot;:1697548939.67,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548938.952,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;__span&quot;:&quot;a5a34990804b4d72&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;__span&quot;:&quot;b34d39455e5589fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:1,&quot;events&quot;:[{&quot;name&quot;:&quot;sessionStarted&quot;,&quot;date&quot;:&quot;2023-10-17T13:22:20.636Z&quot;},{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-10-17T13:22:20.636Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;b1fe50e4a7bb4369b1aba9ba2e062ff4&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:20.999Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;b1fe50e4a7bb4369b1aba9ba2e062ff4&quot;,&quot;timestamp&quot;:1697548940.997,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548938.952,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;__span&quot;:&quot;a5a34990804b4d72&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;__span&quot;:&quot;b34d39455e5589fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.672,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1697548939.695,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548939.704,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548939.72,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548939.775,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548940.635,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548940.784,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548940.785,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;b0b2a4b25fa791f3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;b1fe50e4a7bb4369b1aba9ba2e062ff4&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:20.999Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;b1fe50e4a7bb4369b1aba9ba2e062ff4&quot;,&quot;timestamp&quot;:1697548940.997,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548938.952,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;__span&quot;:&quot;a5a34990804b4d72&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;__span&quot;:&quot;b34d39455e5589fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.672,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1697548939.695,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548939.704,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548939.72,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548939.775,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548940.635,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548940.784,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548940.785,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;b0b2a4b25fa791f3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">nftcategorycontainer/Sports.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;443b84e209fa41f28c464313e47ba6e0&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:23.430Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.element&quot;:&quot;img#dashboard-trending-card-50789-media.nx-nft-img.[alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;443b84e209fa41f28c464313e47ba6e0&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:22:23.430Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;4g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.element&quot;:&quot;img#dashboard-trending-card-50789-media.nx-nft-img.[alt</stringProp>
                  <stringProp name="Argument.value">\&quot;NFT Stress1_zqdi\&quot;]&quot;,&quot;lcp.id&quot;:&quot;dashboard-trending-card-50789-media&quot;,&quot;lcp.url&quot;:&quot;https://marketplace.stress.nxlvldev.app/_next/image?url=https://data-tr-uat.azureedge.net/nft-images-stress/ab53cadf-c610-4bf6-b31d-e578a417d805_thumbnail.png</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">50&quot;,&quot;lcp.size&quot;:140715,&quot;cls.source.1&quot;:&quot;span.text-blue &gt; &quot;},&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9d4a58cdd6a0b8c4&quot;,&quot;start_timestamp&quot;:1697548935.3373,&quot;timestamp&quot;:1697548935.4263,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b30444d403110894&quot;,&quot;start_timestamp&quot;:1697548935.6004,&quot;timestamp&quot;:1697548935.7034,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a51fcce9001b8d21&quot;,&quot;start_timestamp&quot;:1697548935.7096999,&quot;timestamp&quot;:1697548935.7807,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;be2dafb835250e6a&quot;,&quot;start_timestamp&quot;:1697548936.4978,&quot;timestamp&quot;:1697548936.5658002,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8447e2ed57ef63c6&quot;,&quot;start_timestamp&quot;:1697548937.3668,&quot;timestamp&quot;:1697548937.5998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;baf4f97bd4350c98&quot;,&quot;start_timestamp&quot;:1697548937.6005,&quot;timestamp&quot;:1697548937.6675,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9cb50a557564d0b2&quot;,&quot;start_timestamp&quot;:1697548937.7031002,&quot;timestamp&quot;:1697548937.7991002,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:19},&quot;description&quot;:&quot;GET https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a5a34990804b4d72&quot;,&quot;start_timestamp&quot;:1697548938.4866002,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548939.1685,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.stress.nxlvldev.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b0b2a4b25fa791f3&quot;,&quot;start_timestamp&quot;:1697548938.767,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548940.7848,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.stress.nxlvldev.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b67f65c39c4df781&quot;,&quot;start_timestamp&quot;:1697548938.7743,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548941.0765,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;},&quot;description&quot;:&quot;GET /_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b34d39455e5589fb&quot;,&quot;start_timestamp&quot;:1697548938.9858,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548939.6674001,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a33824048c054207&quot;,&quot;start_timestamp&quot;:1697548937.833,&quot;timestamp&quot;:1697548938.804,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;92076cb622f76bdb&quot;,&quot;start_timestamp&quot;:1697548938.8045,&quot;timestamp&quot;:1697548938.9775002,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.stress.nxlvldev.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;88e8cc2b53ac3efd&quot;,&quot;start_timestamp&quot;:1697548939.2521,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548941.2046,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.stress.nxlvldev.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bd28f3002973603b&quot;,&quot;start_timestamp&quot;:1697548939.2547002,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548941.1511002,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8d91747c89236b2b&quot;,&quot;start_timestamp&quot;:1697548939.2015,&quot;timestamp&quot;:1697548939.2584999,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bd4431f5581a75bf&quot;,&quot;start_timestamp&quot;:1697548939.4123,&quot;timestamp&quot;:1697548939.4933002,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9a9718e33db475d3&quot;,&quot;start_timestamp&quot;:1697548939.4941,&quot;timestamp&quot;:1697548939.6041,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;96ddbb29335e5701&quot;,&quot;start_timestamp&quot;:1697548939.687,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1697548940.635,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a09967b387a13ea7&quot;,&quot;start_timestamp&quot;:1697548940.0261002,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548941.0202003,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9a176d3d0f24ec69&quot;,&quot;start_timestamp&quot;:1697548939.6995,&quot;timestamp&quot;:1697548939.9215,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b5e9d6bf6787dcb9&quot;,&quot;start_timestamp&quot;:1697548939.9218001,&quot;timestamp&quot;:1697548940.0318,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;af16fb676b218b84&quot;,&quot;start_timestamp&quot;:1697548940.2828,&quot;timestamp&quot;:1697548940.3458,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b6cb400e649c62bf&quot;,&quot;start_timestamp&quot;:1697548940.6372,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548941.2007003,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;94a7fa0bbaf218c3&quot;,&quot;start_timestamp&quot;:1697548940.7865,&quot;timestamp&quot;:1697548940.8485,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;be0822a046c847b8&quot;,&quot;start_timestamp&quot;:1697548940.8493998,&quot;timestamp&quot;:1697548941.0124,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:776},&quot;description&quot;:&quot;GET https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;964a6b93d3655633&quot;,&quot;start_timestamp&quot;:1697548941.267,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1697548942.415,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;982bd4ab6a243638&quot;,&quot;start_timestamp&quot;:1697548941.2061,&quot;timestamp&quot;:1697548941.2881,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b0aa4b1337671d7b&quot;,&quot;start_timestamp&quot;:1697548938.9884999,&quot;timestamp&quot;:1697548938.9894,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b226a3fbbc1b8026&quot;,&quot;start_timestamp&quot;:1697548940.0971,&quot;timestamp&quot;:1697548940.1267,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;afcdd787d7d307b8&quot;,&quot;start_timestamp&quot;:1697548933.7152998,&quot;timestamp&quot;:1697548933.7152998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;833ea351f2291e72&quot;,&quot;start_timestamp&quot;:1697548933.7152998,&quot;timestamp&quot;:1697548933.7152998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b923a6c43eaa3367&quot;,&quot;start_timestamp&quot;:1697548933.7152998,&quot;timestamp&quot;:1697548933.7152998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bcff9d791f30378a&quot;,&quot;start_timestamp&quot;:1697548933.7152998,&quot;timestamp&quot;:1697548933.7152998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9a86f6e7af0c9e56&quot;,&quot;start_timestamp&quot;:1697548935.0355,&quot;timestamp&quot;:1697548935.5534,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;ae186f1d321977ae&quot;,&quot;start_timestamp&quot;:1697548935.3030999,&quot;timestamp&quot;:1697548935.5534,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;98789e1c263e9edc&quot;,&quot;start_timestamp&quot;:1697548933.695,&quot;timestamp&quot;:1697548937.9449,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1998,&quot;http.response_content_length&quot;:1698,&quot;http.decoded_response_content_length&quot;:7859,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/css/80b2a1dfeca64b03.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bf3d35efa4b467fc&quot;,&quot;start_timestamp&quot;:1697548935.3156998,&quot;timestamp&quot;:1697548935.6160998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4570,&quot;http.response_content_length&quot;:4270,&quot;http.decoded_response_content_length&quot;:9006,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/webpack-96f8aa6669d4d9b1.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;87e0781baa03f023&quot;,&quot;start_timestamp&quot;:1697548935.3163,&quot;timestamp&quot;:1697548935.827,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:42470,&quot;http.response_content_length&quot;:42170,&quot;http.decoded_response_content_length&quot;:130002,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/framework-79bce4a3a540b080.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;990f0b717dfefac5&quot;,&quot;start_timestamp&quot;:1697548935.3167,&quot;timestamp&quot;:1697548936.4043999,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36142,&quot;http.response_content_length&quot;:35842,&quot;http.decoded_response_content_length&quot;:120667,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/main-7984009c4f4bcc16.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a7414d3c9d2d9a9c&quot;,&quot;start_timestamp&quot;:1697548935.3169,&quot;timestamp&quot;:1697548937.0339,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:319566,&quot;http.response_content_length&quot;:319266,&quot;http.decoded_response_content_length&quot;:1099381,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/_app-fbe67d095e6f2208.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bd670f1acd930897&quot;,&quot;start_timestamp&quot;:1697548935.317,&quot;timestamp&quot;:1697548937.3602,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:17341,&quot;http.response_content_length&quot;:17041,&quot;http.decoded_response_content_length&quot;:50049,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2922-e45c8d0f51fc34c1.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bce55e27f77c9a01&quot;,&quot;start_timestamp&quot;:1697548935.3172,&quot;timestamp&quot;:1697548936.3813,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3265,&quot;http.response_content_length&quot;:2965,&quot;http.decoded_response_content_length&quot;:8237,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3024-2586f7ee56c131bd.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b83437683511e0d2&quot;,&quot;start_timestamp&quot;:1697548935.3172,&quot;timestamp&quot;:1697548936.6008,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4890,&quot;http.response_content_length&quot;:4590,&quot;http.decoded_response_content_length&quot;:10880,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9482-619753e00fc42cc8.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a8a7196e647facfb&quot;,&quot;start_timestamp&quot;:1697548935.3172998,&quot;timestamp&quot;:1697548936.718,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:56432,&quot;http.response_content_length&quot;:56132,&quot;http.decoded_response_content_length&quot;:200620,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3791-3341b2c7326eab52.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b6bb04756e18fc42&quot;,&quot;start_timestamp&quot;:1697548935.3172998,&quot;timestamp&quot;:1697548936.9339998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:9546,&quot;http.response_content_length&quot;:9246,&quot;http.decoded_response_content_length&quot;:32592,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/1377-c4a3281fc9caf9bd.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a8434667a1b1b677&quot;,&quot;start_timestamp&quot;:1697548935.3174,&quot;timestamp&quot;:1697548936.7699,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3254,&quot;http.response_content_length&quot;:2954,&quot;http.decoded_response_content_length&quot;:10518,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/334-520371c2ef64dac4.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bcf9d5c11d5dc589&quot;,&quot;start_timestamp&quot;:1697548935.3176,&quot;timestamp&quot;:1697548936.8714,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:12768,&quot;http.response_content_length&quot;:12468,&quot;http.decoded_response_content_length&quot;:41000,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9202-dac7b8a11dd61215.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;969a09679d0e4fd2&quot;,&quot;start_timestamp&quot;:1697548935.3176,&quot;timestamp&quot;:1697548936.9851,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5607,&quot;http.response_content_length&quot;:5307,&quot;http.decoded_response_content_length&quot;:15226,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/7333-eb417f889a822809.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8fa4f7923a15af68&quot;,&quot;start_timestamp&quot;:1697548935.3176,&quot;timestamp&quot;:1697548937.0464,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8633,&quot;http.response_content_length&quot;:8333,&quot;http.decoded_response_content_length&quot;:22971,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3558-611e5ab85140c30d.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b96410ba7ca598b1&quot;,&quot;start_timestamp&quot;:1697548935.3177,&quot;timestamp&quot;:1697548937.1358,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:4990,&quot;http.response_content_length&quot;:4690,&quot;http.decoded_response_content_length&quot;:14195,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/8674-8cac5c0e02b09fdc.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a4b06075566804f6&quot;,&quot;start_timestamp&quot;:1697548935.3177,&quot;timestamp&quot;:1697548937.2022998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15996,&quot;http.response_content_length&quot;:15696,&quot;http.decoded_response_content_length&quot;:63587,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/5278-1368a71d74d1a1ba.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a32e166293e3be7a&quot;,&quot;start_timestamp&quot;:1697548935.3179,&quot;timestamp&quot;:1697548937.2536,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3043,&quot;http.response_content_length&quot;:2743,&quot;http.decoded_response_content_length&quot;:14977,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/8968-32bde97ade2c541a.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8574ce438cbbcfe8&quot;,&quot;start_timestamp&quot;:1697548935.3179,&quot;timestamp&quot;:1697548937.3004,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2236,&quot;http.response_content_length&quot;:1936,&quot;http.decoded_response_content_length&quot;:7778,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/643-ace46cc9e2a64e50.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8e5f6eff3eebc521&quot;,&quot;start_timestamp&quot;:1697548935.3181,&quot;timestamp&quot;:1697548937.3114,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7874,&quot;http.response_content_length&quot;:7574,&quot;http.decoded_response_content_length&quot;:30822,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2750-aa1b040a8e9d8114.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;931c696e042164e3&quot;,&quot;start_timestamp&quot;:1697548935.3181999,&quot;timestamp&quot;:1697548937.399,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2973,&quot;http.response_content_length&quot;:2673,&quot;http.decoded_response_content_length&quot;:7810,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9539-264dd67eae26dd6d.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;981d7a7fd71107b5&quot;,&quot;start_timestamp&quot;:1697548935.3183,&quot;timestamp&quot;:1697548937.4934,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5772,&quot;http.response_content_length&quot;:5472,&quot;http.decoded_response_content_length&quot;:18014,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard-08781af51204678c.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;af6fcb4e495e6300&quot;,&quot;start_timestamp&quot;:1697548935.3184,&quot;timestamp&quot;:1697548937.5131998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2519,&quot;http.response_content_length&quot;:2219,&quot;http.decoded_response_content_length&quot;:6801,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/YSEcu1OE7NOs9pZknDYn4/_buildManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b4a9d37df08c2bb1&quot;,&quot;start_timestamp&quot;:1697548935.3185,&quot;timestamp&quot;:1697548937.5685,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:377,&quot;http.response_content_length&quot;:77,&quot;http.decoded_response_content_length&quot;:77,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/YSEcu1OE7NOs9pZknDYn4/_ssgManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;9bd3c3a866f42eac&quot;,&quot;start_timestamp&quot;:1697548935.3186,&quot;timestamp&quot;:1697548937.5705,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8184,&quot;http.response_content_length&quot;:7884,&quot;http.decoded_response_content_length&quot;:7884,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/fonts/poppins-latin-regular.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;acf15a56bdb70acb&quot;,&quot;start_timestamp&quot;:1697548935.7138,&quot;timestamp&quot;:1697548936.0963,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:32088,&quot;http.response_content_length&quot;:31788,&quot;http.decoded_response_content_length&quot;:31788,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/fonts/nxlvl.woff2?t=6017225&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;90c8ce59dee20322&quot;,&quot;start_timestamp&quot;:1697548935.7326,&quot;timestamp&quot;:1697548936.4681,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8048,&quot;http.response_content_length&quot;:7748,&quot;http.decoded_response_content_length&quot;:7748,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/fonts/poppins-latin-medium.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a353084176b5026c&quot;,&quot;start_timestamp&quot;:1697548935.7338998,&quot;timestamp&quot;:1697548936.3324997,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;first-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b36238ea3ae4f013&quot;,&quot;start_timestamp&quot;:1697548935.8887,&quot;timestamp&quot;:1697548935.8887,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;first-contentful-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8de5241449945b01&quot;,&quot;start_timestamp&quot;:1697548935.8887,&quot;timestamp&quot;:1697548935.8887,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;sentry-tracing-init&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b432404b2818bbfd&quot;,&quot;start_timestamp&quot;:1697548937.3720999,&quot;timestamp&quot;:1697548937.3720999,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;Next.js-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a4c890cdc99ad5f8&quot;,&quot;start_timestamp&quot;:1697548937.9449,&quot;timestamp&quot;:1697548938.4336,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3986,&quot;http.response_content_length&quot;:3686,&quot;http.decoded_response_content_length&quot;:11600,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3071.e927134e269618ae.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b56584fce47adf70&quot;,&quot;start_timestamp&quot;:1697548938.1496,&quot;timestamp&quot;:1697548938.4327,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2377,&quot;http.response_content_length&quot;:2077,&quot;http.decoded_response_content_length&quot;:5375,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/672.96e13db617bc4598.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a3b9628ec9835100&quot;,&quot;start_timestamp&quot;:1697548938.1638,&quot;timestamp&quot;:1697548938.4408,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://static.hotjar.com/c/hotjar-undefined.js?sv=6&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b3cb40ac76088ade&quot;,&quot;start_timestamp&quot;:1697548938.4422,&quot;timestamp&quot;:1697548939.08,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:43429,&quot;http.response_content_length&quot;:43129,&quot;http.decoded_response_content_length&quot;:175722,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/4c7977fa.80166fd97e012d99.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;972500d56b0ca3e4&quot;,&quot;start_timestamp&quot;:1697548938.4538,&quot;timestamp&quot;:1697548939.6175,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://accounts.google.com/gsi/client&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a7747a0a17cb4884&quot;,&quot;start_timestamp&quot;:1697548938.4545999,&quot;timestamp&quot;:1697548939.0477,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1987,&quot;http.response_content_length&quot;:1687,&quot;http.decoded_response_content_length&quot;:3093,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;bdf3bd1cec68452c&quot;,&quot;start_timestamp&quot;:1697548938.4554,&quot;timestamp&quot;:1697548938.7037,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://www.googletagmanager.com/gtag/js?id=G-S1J112KFF8&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;a0eeaf417025f1d5&quot;,&quot;start_timestamp&quot;:1697548938.4699,&quot;timestamp&quot;:1697548938.8706,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;8f8e4a81fe859182&quot;,&quot;start_timestamp&quot;:1697548938.4747,&quot;timestamp&quot;:1697548938.8173,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:540,&quot;http.response_content_length&quot;:240,&quot;http.decoded_response_content_length&quot;:240,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/8835.6ae7bffe797de855.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b90d6677407820b4&quot;,&quot;start_timestamp&quot;:1697548939.1547,&quot;timestamp&quot;:1697548939.4353,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:87131,&quot;http.response_content_length&quot;:86831,&quot;http.decoded_response_content_length&quot;:303300,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js?hash=dab109c235a3604a0469f9a15dac7126&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;986ae12196814c5a&quot;,&quot;start_timestamp&quot;:1697548939.1676998,&quot;timestamp&quot;:1697548939.2139997,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:8300,&quot;http.response_content_length&quot;:8000,&quot;http.decoded_response_content_length&quot;:8000,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/fonts/poppins-latin-semiBold.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;b589e43a83f5bda2&quot;,&quot;start_timestamp&quot;:1697548939.1803,&quot;timestamp&quot;:1697548939.6154,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;beforeRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;86b58fcc8613f1b2&quot;,&quot;start_timestamp&quot;:1697548939.7087998,&quot;timestamp&quot;:1697548939.7087998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;description&quot;:&quot;afterRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;864c3c62f058c873&quot;,&quot;start_timestamp&quot;:1697548939.9213,&quot;timestamp&quot;:1697548939.9213,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://data-tr-uat.azureedge.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;9b19e49faeab5ef3&quot;,&quot;span_id&quot;:&quot;939ead5aea84ff2b&quot;,&quot;start_timestamp&quot;:1697548940.2475,&quot;timestamp&quot;:1697548940.7166998,&quot;trace_id&quot;:&quot;08f60057c5954b10aa18d47ba404467d&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10922,&quot;http.response_content_length&quot;:10622,&quot;http.decoded_response_content_length&quot;:10622,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-uat.azureedge.net/nft-images-stress/ab53cadf-c610-4bf6-b31d-e578a417d805_thumbnail.png</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1697548944280" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1697548944280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;Homepage&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;$browser_version&quot;: 116,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;3eu87mpzpmzihird&quot;,&quot;time&quot;: 1697548939.287,&quot;distinct_id&quot;: &quot;$device:18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$device_id&quot;: &quot;18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:11,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:21,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Click_On_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:31,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.stress.nxlvldev.app/_next/data/YSEcu1OE7NOs9pZknDYn4/login.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">_next/data/YSEcu1OE7NOs9pZknDYn4/login.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-nextjs-data" elementType="Header">
                  <stringProp name="Header.name">x-nextjs-data</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="baggage" elementType="Header">
                  <stringProp name="Header.name">baggage</stringProp>
                  <stringProp name="Header.value">sentry-environment=stress,sentry-release=YSEcu1OE7NOs9pZknDYn4,sentry-transaction=%2Flogin,sentry-public_key=2de207a5cb914c89a4097441301dbb57,sentry-trace_id=dff17413444b4af694aecc69b8003275,sentry-sample_rate=0.2</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">dff17413444b4af694aecc69b8003275-ae2bc373bf956f2a-0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:22:52.568Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:22:52.568Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;64e9a997cbe840a4a6196e69ff7e204a&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:17.418Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:22:52.569Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;5bfdc022d72c4294b6dd02e1cfe34a77&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:22:52.569Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;5bfdc022d72c4294b6dd02e1cfe34a77&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1697548974528" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1697548974528</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;Login Header&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.stress.nxlvldev.app/&quot;,&quot;$browser_version&quot;: 116,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;6hh2ozkom2glscc6&quot;,&quot;time&quot;: 1697548971.734,&quot;distinct_id&quot;: &quot;$device:18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$device_id&quot;: &quot;18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:41,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-10-17T13:22:53.030Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.stress.nxlvldev.app/login&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:51,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Enter_Details_and_Click_on_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{}&#xa;{&quot;type&quot;:&quot;client_report&quot;}&#xa;{&quot;timestamp&quot;:1697548995.837,&quot;discarded_events&quot;:[{&quot;reason&quot;:&quot;sample_rate&quot;,&quot;category&quot;:&quot;transaction&quot;,&quot;quantity&quot;:1}]}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{}
{&quot;type&quot;:&quot;client_report&quot;}
{&quot;timestamp&quot;:1697548995.837,&quot;discarded_events&quot;:[{&quot;reason&quot;:&quot;sample_rate&quot;,&quot;category&quot;:&quot;transaction&quot;,&quot;quantity&quot;:1}]}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:62,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:72,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;login&quot;,&quot;variables&quot;:{&quot;loginInput&quot;:{&quot;email&quot;:&quot;stresstestcore2@getnada.com&quot;,&quot;password&quot;:&quot;QWRtaW5AMTIz&quot;,&quot;checkEmailVerified&quot;:true}},&quot;query&quot;:&quot;mutation login($loginInput: LoginInput) {\n  login(loginInput: $loginInput) {\n    accessToken\n    userId\n    refreshToken\n    isOTPRequired\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjk3NTM2NTc2LCJleHAiOjE3MDAxMjg1NzYsInBybSI6Ijk0MTk1NzE4ZDc3NGFmM2NlMWExYjdlZGU5ZDliNGMyIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiI5YWNkN2IwYS1jOTNjLTQxZGUtODU1Yy02Njg4NWI3ZDVhNDcifQ.Cd8UEkqSzfZJ9LVv8CAT9DL59iS3baRBPQ_kMbQ7qnDBqTy4RqreTzeJ9BzMb72MHjB8ZxVDIfGO5OwCuxTlEkT-3E3Yl18l7xarp0vyJubzY4mJ0BHcN3b9vMbAAWIwT9Sj8_SMtU3Qs-kNLQ43Cdh0z_gi8ym7TKAqQ9D3ZJz041xqgWjdr6w2QruMB9Msb7nx3saJOmIUhNxqzu4LMnOA8XrFWAdKQASDy91EZ7gKXWj3om5mxB5qgvujjzD9Ta0nhsq8jpg1I_HVz4D9LqKB-RtQo2Wg_9pD40kJZZjdEmekE5rb6Z66YPB8qg7jvcLYno6uRlcVzO7sr0kiNg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUserById&quot;,&quot;variables&quot;:{&quot;id&quot;:9005},&quot;query&quot;:&quot;query getUserById($id: Int!) {\n  getUserById(id: $id) {\n    id\n    firstname\n    lastname\n    userType\n    email\n    birthDate\n    profileImage\n    dwollaCustomer {\n      status\n      url\n      __typename\n    }\n    username\n    createdAt\n    provider\n    preferences {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.stress.nxlvldev.app/_next/data/YSEcu1OE7NOs9pZknDYn4/dashboard.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">_next/data/YSEcu1OE7NOs9pZknDYn4/dashboard.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-nextjs-data" elementType="Header">
                  <stringProp name="Header.name">x-nextjs-data</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="baggage" elementType="Header">
                  <stringProp name="Header.name">baggage</stringProp>
                  <stringProp name="Header.value">sentry-environment=stress,sentry-release=YSEcu1OE7NOs9pZknDYn4,sentry-transaction=%2Fdashboard,sentry-public_key=2de207a5cb914c89a4097441301dbb57,sentry-trace_id=5d910b7df5634e7e8e1fc722ee3c64ce,sentry-sample_rate=0.2</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">5d910b7df5634e7e8e1fc722ee3c64ce-b938c41a0278540f-0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:23:36.997Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;5bfdc022d72c4294b6dd02e1cfe34a77&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:36.997Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:23:36.997Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;5bfdc022d72c4294b6dd02e1cfe34a77&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:22:52.567Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:36.997Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:23:36.998Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:23:36.998Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUserStatistic&quot;,&quot;variables&quot;:{&quot;userId&quot;:9005},&quot;query&quot;:&quot;query getUserStatistic($userId: Int!) {\n  getUserStatistic(userId: $userId) {\n    id\n    userId\n    firebaseNotificationCount\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFirebaseNotificationCount&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getFirebaseNotificationCount {\n  getFirebaseNotificationCount\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDwollaWalletBalance&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getDwollaWalletBalance {\n  getDwollaWalletBalance {\n    balance\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:23:37.411Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:37.411Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:23:37.411Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:23:37.411Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;0c419e9bf934485783f4a5b7a4d86f6c&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:23:37.413Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;5d910b7df5634e7e8e1fc722ee3c64ce&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///dashboard&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;0c419e9bf934485783f4a5b7a4d86f6c&quot;,&quot;timestamp&quot;:1697549017.408,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;user&quot;:{&quot;errorOwner&quot;:&quot;eyJpZCI6OTAwNSwidXNlcm5hbWUiOiJ1bmFtZV9fMjIxMjI2MTI0NTU0MjM0IiwidXNlclR5cGUiOiJQYWdlIiwiZmlyc3RuYW1lIjoiZm5hbWVfdXBkYXRlZF9fMjIxMjI2MTI0NTU0MjM0IiwibGFzdG5hbWUiOiJsbmFtZV91cGRhdGVkX18yMjEyMjYxMjQ1NTQyMzQiLCJlbWFpbCI6InN0cmVzc3Rlc3Rjb3JlMkBnZXRuYWRhLmNvbSIsImJpcnRoRGF0ZSI6IjIwMDctMTItMDNUMTA6MTU6MzAuMDAwWiIsInByb2ZpbGVJbWFnZSI6bnVsbCwiZHdvbGxhQ3VzdG9tZXIiOnsiX190eXBlbmFtZSI6IkR3b2xsYUN1c3RvbWVyIiwic3RhdHVzIjoidmVyaWZpZWQiLCJ1cmwiOiJodHRwczovL2FwaS1zYW5kYm94LmR3b2xsYS5jb20vY3VzdG9tZXJzLzI4ZTE0ZDk0LTgxNzItNGZhMS05YTZkLWJhZjMyMWUyNTNhYSJ9fQ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;0c419e9bf934485783f4a5b7a4d86f6c&quot;,&quot;sent_at&quot;:&quot;2023-10-17T13:23:37.413Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;5d910b7df5634e7e8e1fc722ee3c64ce&quot;,&quot;sample_rate&quot;:&quot;0.2&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;exception&quot;:{&quot;values&quot;:[{&quot;value&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;,&quot;type&quot;:&quot;Error&quot;,&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false,&quot;synthetic&quot;:true},&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:0,&quot;filename&quot;:&quot;app:///dashboard&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:0}]}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;0c419e9bf934485783f4a5b7a4d86f6c&quot;,&quot;timestamp&quot;:1697549017.408,&quot;environment&quot;:&quot;stress&quot;,&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;user&quot;:{&quot;errorOwner&quot;:&quot;eyJpZCI6OTAwNSwidXNlcm5hbWUiOiJ1bmFtZV9fMjIxMjI2MTI0NTU0MjM0IiwidXNlclR5cGUiOiJQYWdlIiwiZmlyc3RuYW1lIjoiZm5hbWVfdXBkYXRlZF9fMjIxMjI2MTI0NTU0MjM0IiwibGFzdG5hbWUiOiJsbmFtZV91cGRhdGVkX18yMjEyMjYxMjQ1NTQyMzQiLCJlbWFpbCI6InN0cmVzc3Rlc3Rjb3JlMkBnZXRuYWRhLmNvbSIsImJpcnRoRGF0ZSI6IjIwMDctMTItMDNUMTA6MTU6MzAuMDAwWiIsInByb2ZpbGVJbWFnZSI6bnVsbCwiZHdvbGxhQ3VzdG9tZXIiOnsiX190eXBlbmFtZSI6IkR3b2xsYUN1c3RvbWVyIiwic3RhdHVzIjoidmVyaWZpZWQiLCJ1cmwiOiJodHRwczovL2FwaS1zYW5kYm94LmR3b2xsYS5jb20vY3VzdG9tZXJzLzI4ZTE0ZDk0LTgxNzItNGZhMS05YTZkLWJhZjMyMWUyNTNhYSJ9fQ</stringProp>
                  <stringProp name="Argument.value">=&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;880cd7bf1f5457ff&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/login&quot;},&quot;trace_id&quot;:&quot;5d910b7df5634e7e8e1fc722ee3c64ce&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1697548937.941,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548938.004,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548938.952,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;8953a462541248eab488c7c664f82257&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.168,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://marketplace.stress.nxlvldev.app/api/club-version&quot;,&quot;__span&quot;:&quot;a5a34990804b4d72&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548939.667,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/index.json&quot;,&quot;__span&quot;:&quot;b34d39455e5589fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548939.672,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;56828838493a402aa71a339cfd792279&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1697548939.695,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548939.704,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1697548939.72,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548939.775,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[true],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;true&quot;},{&quot;timestamp&quot;:1697548940.635,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548940.784,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548940.785,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;b0b2a4b25fa791f3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548940.999,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;b1fe50e4a7bb4369b1aba9ba2e062ff4&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;ResizeObserver loop completed with undelivered notifications.&quot;},{&quot;timestamp&quot;:1697548941.02,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548941.075,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548941.076,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;b67f65c39c4df781&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548941.149,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548941.151,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;bd28f3002973603b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548941.2,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548941.204,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548941.204,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.stress.nxlvldev.app&quot;,&quot;__span&quot;:&quot;88e8cc2b53ac3efd&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548942.415,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548942.415,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://data-tr-uat.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;__span&quot;:&quot;964a6b93d3655633&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548943.43,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;443b84e209fa41f28c464313e47ba6e0&quot;,&quot;message&quot;:&quot;443b84e209fa41f28c464313e47ba6e0&quot;},{&quot;timestamp&quot;:1697548944.512,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1697548944280&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548951.036,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548961.051,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548971.037,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548971.731,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#header-main-login-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedSecondary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.MuiButton-root.MuiButton-contained.MuiButton-containedSecondary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.login-button.css-fxnoms[type=\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1697548972.269,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1697548972.269,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/YSEcu1OE7NOs9pZknDYn4/login.json&quot;,&quot;__span&quot;:&quot;ae2bc373bf956f2a&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1697548972.567,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/login&quot;}},{&quot;timestamp&quot;:1697548972.575,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;Cookies Disabled&quot;,false,false],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;Cookies Disabled false false&quot;},{&quot;timestamp&quot;:1697548974.665,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFirebaseNotifications&quot;,&quot;variables&quot;:{&quot;userId&quot;:9005,&quot;cursor&quot;:0,&quot;take&quot;:15},&quot;query&quot;:&quot;query getFirebaseNotifications($userId: Int!, $take: Int!, $cursor: Int!) {\n  getFirebaseNotifications(\n    notificationArgs: {userId: $userId, take: $take, cursor: $cursor}\n  ) {\n    pageEdges {\n      node {\n        id\n        isActionRequired\n        extraParameters\n        title\n        type\n        isRead\n        isViewed\n        receiverId\n        senderId\n        nftId\n        nftEditionId\n        nftEdition {\n          tier\n          price\n          seriesNumber\n          __typename\n        }\n        nft {\n          name\n          imageUrl\n          videoData\n          __typename\n        }\n        receiver {\n          firstname\n          lastname\n          profileImage\n          __typename\n        }\n        sender {\n          firstname\n          lastname\n          profileImage\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;bookmarkedUsers&quot;,&quot;variables&quot;:{&quot;userId&quot;:9005,&quot;cursor&quot;:0,&quot;take&quot;:3},&quot;query&quot;:&quot;query bookmarkedUsers($cursor: Int!, $take: Int!, $userId: Int!) {\n  getBookmarkedUsers(userId: $userId, cursor: $cursor, take: $take) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          username\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      totalCount\n      hasNextPage\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1697549020354" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1697549020354</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;$identify&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.stress.nxlvldev.app/login&quot;,&quot;$browser_version&quot;: 116,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;jetqfyusg1085vnd&quot;,&quot;time&quot;: 1697549016.452,&quot;distinct_id&quot;: 9005,&quot;$device_id&quot;: &quot;18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 9005,&quot;First Name&quot;: &quot;fname_updated__221226124554234&quot;,&quot;Last Name&quot;: &quot;lname_updated__221226124554234&quot;,&quot;User Name&quot;: &quot;uname__221226124554234&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Tuesday, October 17, 2023 06:53 PM&quot;,&quot;Signup Date&quot;: &quot;Monday, December 19, 2022 12:45 PM&quot;,&quot;List of Interests&quot;: &quot;Basketball,Swimming&quot;,&quot;$user_id&quot;: 9005,&quot;$anon_distinct_id&quot;: &quot;$device:18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}},
    {&quot;event&quot;: &quot;Login with Email&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.stress.nxlvldev.app/login&quot;,&quot;$browser_version&quot;: 116,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;j95ey8hkxcbfixlr&quot;,&quot;time&quot;: 1697549016.453,&quot;distinct_id&quot;: 9005,&quot;$device_id&quot;: &quot;18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 9005,&quot;First Name&quot;: &quot;fname_updated__221226124554234&quot;,&quot;Last Name&quot;: &quot;lname_updated__221226124554234&quot;,&quot;User Name&quot;: &quot;uname__221226124554234&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Tuesday, October 17, 2023 06:53 PM&quot;,&quot;Signup Date&quot;: &quot;Monday, December 19, 2022 12:45 PM&quot;,&quot;List of Interests&quot;: &quot;Basketball,Swimming&quot;,&quot;$user_id&quot;: 9005,&quot;Date&quot;: &quot;Tuesday, October 17, 2023 06:53 PM&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}},
    {&quot;event&quot;: &quot;Homepage&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.stress.nxlvldev.app/dashboard&quot;,&quot;$browser_version&quot;: 116,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;p6wryjmll8l604z2&quot;,&quot;time&quot;: 1697549017.675,&quot;distinct_id&quot;: 9005,&quot;$device_id&quot;: &quot;18b3db732f2a68d36-018c3601f1c68f-26031f51-100200-18b3db732f3a68d36&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 9005,&quot;First Name&quot;: &quot;fname_updated__221226124554234&quot;,&quot;Last Name&quot;: &quot;lname_updated__221226124554234&quot;,&quot;User Name&quot;: &quot;uname__221226124554234&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Tuesday, October 17, 2023 06:53 PM&quot;,&quot;Signup Date&quot;: &quot;Monday, December 19, 2022 12:45 PM&quot;,&quot;List of Interests&quot;: &quot;Basketball,Swimming&quot;,&quot;$user_id&quot;: 9005,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:82,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-10-17T13:23:37.427Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.stress.nxlvldev.app/dashboard&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:92,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:102,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopPick&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;LatestDrop&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopSales&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFeaturedCreators&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:6,&quot;userId&quot;:9005},&quot;query&quot;:&quot;query getFeaturedCreators($cursor: Int!, $take: Int!, $userId: Int!, $activityId: [Int]) {\n  getFeaturedCreators(cursor: $cursor, take: $take, activityId: $activityId) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          backgroundImage\n          backgroundVideoData\n          isFollowing(userId: $userId)\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;searchNFT&quot;,&quot;variables&quot;:{&quot;searchNFTArgs&quot;:{&quot;pageNo&quot;:0,&quot;take&quot;:12,&quot;activity&quot;:[],&quot;editions&quot;:[],&quot;isForSale&quot;:false}},&quot;query&quot;:&quot;query searchNFT($searchNFTArgs: SearchNFTArgs!) {\n  searchNFT(searchNFTArgs: $searchNFTArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        tier\n        userId\n        user {\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        firstname\n        lastname\n        imageURL\n        isNFTBookmarked\n        isLiked\n        likeCount\n        playbackId\n        editions {\n          id\n          tier\n          __typename\n        }\n        activity {\n          id\n          name\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGroupedUserActivities&quot;,&quot;variables&quot;:{&quot;isUserActivity&quot;:false},&quot;query&quot;:&quot;query getGroupedUserActivities($isUserActivity: Boolean) {\n  getGroupedUserActivities(isUserActivity: $isUserActivity) {\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:112,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Click_On_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:122,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">032dc8a6-4130-4a17-9a63-b33083831390</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">5299bf6f454c04e8aee6f9d3dcb70e43950dd721e3b82e28cfea5c1bc8a6351e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.stress.nxlvldev.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;Logout&quot;,&quot;variables&quot;:{&quot;deviceId&quot;:&quot;&quot;,&quot;logOutVia&quot;:&quot;Marketplace&quot;},&quot;query&quot;:&quot;mutation Logout($deviceId: String, $logOutVia: SignUpORLogoutType) {\n  logout(deviceId: $deviceId, logOutVia: $logOutVia)\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjkwMDUsInBlcm0iOiIiLCJpYXQiOjE2OTc1NDkwMDIsImV4cCI6MTcwMDE0MTAwMiwicHJtIjoiMWM0M2YyYzRjZWQ4ZDA4YjkwMjQ0NGIwZTEwNWYwYjciLCJqaWQiOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOUBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ1Z3B4Ymg1NDAwMzBrMms5dG9pdWpqOSIsInVrZXkiOiIyYWUyNWVmNy1hYzdmLTRlMTMtOTljNC0zMTRkYzU5MzNkYzAiLCJjbGllbnQiOiIiLCJqdGkiOiI2ODIwNGU3OS0yYTFjLTQwZjgtYmNlYi1jNmQzOGQ5OTcxYjkifQ.gkpNyXciU3DUTDcfoSUny7yPXSJviPwy6oriGOsIvceDJYOTnG-iJkiNL64MvWsW-6O1VX_mFnEadTz9oY20zpe4CoiKftRtsZuzjtvaoJrG1sA1_k59d1xy2Dbq2ty_dGZEGUe8ptzaXPPFC4o4Mlldd8wlm-H3AXfnD9sC2bXE6gzzxBcdLrnEEnFFdgRJa4BaV1k7-SU5Xs3azy8h8ojpqqwYEpszS_pB9R2VWEV98_fNB0Er7IWwff0Y8XTNZrbB7LCAglpRDa8ENxUp1-USrjgsShDt7lhdF2CXXRW0shCUYNrVgj6l5YMcocSacsi5EmCcxvZSOHcfD4oLWQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:24:23.915Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:24:23.915Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;b608fddcdaff425789115ce740830218&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-10-17T13:23:36.996Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;sent_at&quot;:&quot;2023-10-17T13:24:23.915Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xa;{&quot;type&quot;:&quot;session&quot;}&#xa;{&quot;sid&quot;:&quot;63b887a055744fb3bb3885887c7a6f65&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;sent_at&quot;:&quot;2023-10-17T13:24:23.915Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}
{&quot;type&quot;:&quot;session&quot;}
{&quot;sid&quot;:&quot;63b887a055744fb3bb3885887c7a6f65&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;timestamp&quot;:&quot;2023-10-17T13:24:23.914Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;YSEcu1OE7NOs9pZknDYn4&quot;,&quot;environment&quot;:&quot;stress&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
