<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="NXLVL_Login_Credentials" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">D:/NXLVL/CsvData/user-stress.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">id,email,username,contentid</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.di.jmeter.config.ExtendedCsvDataSet guiclass="TestBeanGUI" testclass="com.di.jmeter.config.ExtendedCsvDataSet" testname="Extended CSV Data Set Config" enabled="false">
          <boolProp name="autoAllocate">false</boolProp>
          <stringProp name="blockSize">1</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">D:/NXLVL/CsvData/user-stress - Copy.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="ooValue">recycle.continueCyclic</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <stringProp name="selectRow">selectRow.random</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="updateValue">updateValue.eachIteration</stringProp>
          <stringProp name="variableNames">id,email,username,contentid</stringProp>
        </com.di.jmeter.config.ExtendedCsvDataSet>
        <hashTree/>
        <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set ConfigB" enabled="true">
          <stringProp name="filename">D:\NXLVL\CsvData\user-stress.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">id,email,username,contentid</stringProp>
          <boolProp name="randomOrder">true</boolProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="rewindOnTheEndOfList">true</boolProp>
          <boolProp name="independentListPerThread">false</boolProp>
        </com.blazemeter.jmeter.RandomCSVDataSetConfig>
        <hashTree/>
        <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="false">
          <stringProp name="filename">D:\NXLVL\stress_userid.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">user_id</stringProp>
          <boolProp name="randomOrder">true</boolProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="rewindOnTheEndOfList">true</boolProp>
          <boolProp name="independentListPerThread">false</boolProp>
        </com.blazemeter.jmeter.RandomCSVDataSetConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation {\n  login(\n    loginInput: {\n      email: \&quot;${email}\&quot;\n      password: \&quot;QWRtaW5AMTIz\&quot;\n    }\n  ) {\n    accessToken\n    userId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation {
  login(
    loginInput: {
      email: &quot;${email}&quot;
      password: &quot;QWRtaW5AMTIz&quot;
    }
  ) {
    accessToken
    userId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">api.stress.nxlvldev.app</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjgyOTIyODE5LCJleHAiOjE2ODU1MTQ4MTksInBybSI6IjkzMDJiMTZkMWRmYzhkYmI3Zjc0Y2E3OTRkYTE0YjBiIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJjb3JlLWFwcCIsImp0aSI6IjU1MGI0MTQzLWJlMzQtNDU3ZS04ZGRiLTAwYmJlMGIwYmE5ZSJ9.T1SoJ9-1-J_sqz6R92Fnnjp_PzY-j10TSxZBLNRj1rKH-6CjcDsgsskNLgsF9Gee0EslfUAfgzARBgPWXqehvLC1usH9PeNr_nUKXf8k7GeUpNb-RK-z_KWNJSWwEZT8m8IhAvpH6yu4mby1tqGPN18RZYh9q2HWXgrIbyAZs4fhRTIjfzItAX9DASslRceutTpCY59gdkhwwgbsW0v2EaLSpZT2QXx_XXTtfO_bs_CN19TvB8yA0hudBTJJ3G38JG0T4R2bJorQeSYs2PbfAJMkzyCSVvJJzAHeLfOmxyu_1XLjnvdqMIe_uTiBPEJyeqHGEflBmbN_f5BEBr9FbQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">auth_token ; user_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken ; $..userId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">TokenNotFound ; useridnotfound</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">1000</stringProp>
        </TestAction>
        <hashTree/>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetForYouFeed" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetForYouFeed {\n  getForYouFeed(id: 1698, pageNo: 2)\n  {\n    pageEdges {\n      node {\n        activityCount\n        allowComments\n        allowRepost\n        allowSharing\n        commentCount\n        contentData\n        contentType\n        description\n        dateOfEvent\n        createdAt\n        contentWidth\n        displayTags\n        feedCategory\n        imageURL\n        isActive\n        isCommented\n        isCommitment\n        isPrimary\n        isPinned\n        isNxtag\n        isPublished\n        likeCount\n        repostParentId\n        repostDescription\n        reaction\n        publishToFeed\n        pinnedDate\n        taggedUserIds\n        taggedUsersCount\n        user {\n          email\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetForYouFeed {
  getForYouFeed(id: 1698, pageNo: 2)
  {
    pageEdges {
      node {
        activityCount
        allowComments
        allowRepost
        allowSharing
        commentCount
        contentData
        contentType
        description
        dateOfEvent
        createdAt
        contentWidth
        displayTags
        feedCategory
        imageURL
        isActive
        isCommented
        isCommitment
        isPrimary
        isPinned
        isNxtag
        isPublished
        likeCount
        repostParentId
        repostDescription
        reaction
        publishToFeed
        pinnedDate
        taggedUserIds
        taggedUsersCount
        user {
          email
        }
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUsersbyID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUsers {\n  getUserById(id: 995) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    birthDate\n    videoThumbnail\n    backgroundVideoData\n    isAdmin\n    xmppUsername\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.qa.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUsers {
  getUserById(id: 995) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    birthDate
    videoThumbnail
    backgroundVideoData
    isAdmin
    xmppUsername
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">email</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..email </stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">emailnotfound</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetLinkIconUploadSASUrl" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetLinkIconUploadSASUrl{\n  getLinkIconUploadSASUrl(extension: \&quot;jpg\&quot;) {\n    SASUrl\n    blobUrl\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetLinkIconUploadSASUrl{
  getLinkIconUploadSASUrl(extension: &quot;jpg&quot;) {
    SASUrl
    blobUrl
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserLinks" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserLinks {\n  getUserLinks(userId: 72894) {\n    pageEdges {\n      node {\n        userId\n        linkName\n        linkURL\n        description\n        companyIcon\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserLinks {
  getUserLinks(userId: 72894) {
    pageEdges {
      node {
        userId
        linkName
        linkURL
        description
        companyIcon
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetContents" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getContentsArgs&quot;: {
    &quot;userId&quot;: 5
  }
},&quot;query&quot;:&quot;query GetContents{\n  getContents(\n  \tgetContentsArgs: {\n  \t\tuserId: 72894\n  \t})\n  {  \t\n    pageEdges {\n      node {\n        id\n        userId\n        contentData\n        description\n        createdAt\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetContents{
  getContents(
  	getContentsArgs: {
  		userId: 72894
  	})
  {  	
    pageEdges {
      node {
        id
        userId
        contentData
        description
        createdAt
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getContentsArgs&quot;: {
    &quot;userId&quot;: 5
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">1000</stringProp>
        </TestAction>
        <hashTree/>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAllUserActivities" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetAllUserActivities {\n  getAllUserActivities(userId: 72894) {\n    id\n    userId\n    activityId\n    backgroundImage\n    createdAt\n    updatedAt\n    backgroundVideoData\n    videoThumbnail\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAllUserActivities {
  getAllUserActivities(userId: 72894) {
    id
    userId
    activityId
    backgroundImage
    createdAt
    updatedAt
    backgroundVideoData
    videoThumbnail
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUsersbyMail" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserByEmail {\n  getUserByEmail(email: \&quot;stresstestcore221220104709620_106@getnada.com\&quot;) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore    \n    bio    \n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate    \n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserByEmail {
  getUserByEmail(email: &quot;stresstestcore221220104709620_106@getnada.com&quot;) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore    
    bio    
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate    
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetLikesByContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetLikesByContent{\n  getLikesByContent(contentId: 3) {\n    pageEdges {\n      node {\n        id\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetLikesByContent{
  getLikesByContent(contentId: 3) {
    pageEdges {
      node {
        id
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserConnections" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserConnections {\n  getUserConnections(userId: ${id}) {\n    pageEdges {\n      node {\n        id\n        userId\n        user {\n          firstname\n          lastname\n        }\n        connectionUserId\n        createdAt\n        updatedAt\n      }\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserConnections {
  getUserConnections(userId: ${id}) {
    pageEdges {
      node {
        id
        userId
        user {
          firstname
          lastname
        }
        connectionUserId
        createdAt
        updatedAt
      }
    }
    pageInfo {
      hasNextPage
      totalCount
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetSuggestedUsers" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetSuggestedUsers {\n  getSuggestedUsers(searchString: \&quot;qatest\&quot;, userId: 1698) {\n    pageEdges {\n      node {\n        firstname\n        lastname\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.qa.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetSuggestedUsers {
  getSuggestedUsers(searchString: &quot;qatest&quot;, userId: 1698) {
    pageEdges {
      node {
        firstname
        lastname
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserActivitiesAndInterests" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserActivitiesAndInterests{\n  \tgetUserActivitiesAndInterests(userId:${id},searchString:\&quot;Badminton\&quot;){\n\t \tuserActivities {\n      \tactivityId\n      \tactivityName\n    \t}\n    \tadditionalActivities {\n      \tactivityId\n      \tactivityName\n    \t}\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserActivitiesAndInterests{
  	getUserActivitiesAndInterests(userId:${id},searchString:&quot;Badminton&quot;){
	 	userActivities {
      	activityId
      	activityName
    	}
    	additionalActivities {
      	activityId
      	activityName
    	}
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserActivityAttributeValue" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserActivityAttributeValue{\n  getUserActivityAttributeValue(userId:${id}){\n    userId\n    attributeValues {\n      name\n      type\n      value\n      dbUnit\n      userUnit\n      userValue\n      displayValue\n      id\n    }\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserActivityAttributeValue{
  getUserActivityAttributeValue(userId:${id}){
    userId
    attributeValues {
      name
      type
      value
      dbUnit
      userUnit
      userValue
      displayValue
      id
    }
    createdAt
    updatedAt
  }
}
 
  </stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetGroupedAttributes" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetGroupedAttributes{\n  getGroupedAttributes(\n  \tgroupedAttributesInput: {\n  \t\tactivityIds: 41\n  }) {\n    activityId\n    activityName\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetGroupedAttributes{
  getGroupedAttributes(
  	groupedAttributesInput: {
  		activityIds: 41
  }) {
    activityId
    activityName
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetGroupedUserActivities" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetGroupedUserActivities {\n  getGroupedUserActivities(userId: ${id}) {\n    userActivities {\n      activityId\n      activityName\n    }\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        users {\n          id\n          firstname\n          lastname\n          username\n          email\n          preferences {\n            userActivity {\n              activityId\n              \n            }\n            groupName\n            recruitmentStatus\n            activitiesOnContents {\n              id\n              contentId\n              content {\n                contentType\n                userId\n                imageURL\n                contentData\n              }\n              activityId\n            }\n          }\n          height\n          weight\n          gender\n          HSGraduationYear\n          bio\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetGroupedUserActivities {
  getGroupedUserActivities(userId: ${id}) {
    userActivities {
      activityId
      activityName
    }
    groupedUserActivities {
      name
      activities {
        id
        name
        users {
          id
          firstname
          lastname
          username
          email
          preferences {
            userActivity {
              activityId
              
            }
            groupName
            recruitmentStatus
            activitiesOnContents {
              id
              contentId
              content {
                contentType
                userId
                imageURL
                contentData
              }
              activityId
            }
          }
          height
          weight
          gender
          HSGraduationYear
          bio
        }
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserActivityTeams" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 180,
  &quot;activityId&quot;: 41
},&quot;query&quot;:&quot;query GetUserActivityTeams {\n  getUserActivityTeams(userId: ${id}, activityId: 41) {\n    id\n    name\n    institutionId\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n      zip\n      zip4\n      telephone\n      population\n      country\n      website\n    }\n    institutionName\n    city\n    state\n    activityId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserActivityTeams {
  getUserActivityTeams(userId: ${id}, activityId: 41) {
    id
    name
    institutionId
    institution {
      id
      name
      address
      address1
      city
      state
      zip
      zip4
      telephone
      population
      country
      website
    }
    institutionName
    city
    state
    activityId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 180,
  &quot;activityId&quot;: 41
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetRoles" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetRoles {\n  getRoles {\n    id\n    name\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetRoles {
  getRoles {
    id
    name
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetReportedUsers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetReportedUsers {\n  getReportedUsers(userId: ${id}) {\n    userId\n    blockedUserId\n    reason\n    createdAt\n    updatedAt\n    blockedUser {\n      firstname\n      lastname\n      id\n      username\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetReportedUsers {
  getReportedUsers(userId: ${id}) {
    userId
    blockedUserId
    reason
    createdAt
    updatedAt
    blockedUser {
      firstname
      lastname
      id
      username
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetPreferenceActivities" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetPreferenceActivities {\n  getPreferenceActivities(searchString: \&quot;Football\&quot;) {\n    id\n    name\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetPreferenceActivities {
  getPreferenceActivities(searchString: &quot;Football&quot;) {
    id
    name
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserActivity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserActivity {\n  getUserActivity(userActivityId: 713) {\n    id\n    userId\n    user {\n      firstname\n      lastname\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserActivity {
  getUserActivity(userActivityId: 713) {
    id
    userId
    user {
      firstname
      lastname
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjcyODk0LCJwZXJtIjoiIiwiaWF0IjoxNjc1ODQ4MTIxLCJleHAiOjE2Nzg0NDAxMjEsInBybSI6IjU1OTdiNjEwYTlmYzNkOTViZWU2MWQ4Mzc2ZjU1NjM5IiwiamlkIjoiY2xidzNxNnRzMDNieTI1MG5vazdvenB5ekBsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3M3E2dHMwM2J5MjUwbm9rN296cHl6IiwidWtleSI6ImIxOGE2ODJjLTJlZDUtNDVjMS1iYTkzLWVkODYwNmRiNmZjNSIsImNsaWVudCI6IiIsImp0aSI6ImY3NGRiZWFhLTU3NzUtNDRkMC05YmVkLTE4NjJmMmYxMmRmNCJ9.jHu8f9ObEFHRAPtWOFppsE83004ryt_PCpmZEUwaBtuNIPeF4VFu4CzEqoHoUguODwN9DyyuMoLTdWkgpLaW7zp6zCuD0DHrD70h44thXT7eJ2o6SLmC4WQNCO_nAqTHMS8ahNSmDAy8hgnkNTWy6UMFrsg2XA6DLN8tk6oMgf0DBz1y5QpNQPEyJAuQP4FYA4UGvgHLA1-T4UzwA-3xby2aZZR06pHdcDohd3KY5naDrcQabIUkAYv54WnSxYGNqdqDz2YQhyFOfpoCnvpJ3E3kl2gk6HfMjOYO9bXl3TKFJxGg2gQNQDHh1TG7JMUgi7gm_V73O1_i2kMRiFihGg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserSocialMedia" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserSocialMedia {\n  getUserSocialMedia(userId: ${id}) {\n    userId\n    instagramLink\n    twitterLink\n    facebookLink\n    tiktokLink\n    youtubeLink\n    linkedInLink\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserSocialMedia {
  getUserSocialMedia(userId: ${id}) {
    userId
    instagramLink
    twitterLink
    facebookLink
    tiktokLink
    youtubeLink
    linkedInLink
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserAchievements" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserAchievements {\n  getUserAchievements(userId: ${id}) {\n    id\n    userId\n    achievement\n    team\n    position\n    date\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserAchievements {
  getUserAchievements(userId: ${id}) {
    id
    userId
    achievement
    team
    position
    date
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetConnectionStatus" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetConnectionStatus {\n  getConnectionStatus(userId: ${id}, connectionId: 22) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n      username\n    }\n    connectionUserId\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetConnectionStatus {
  getConnectionStatus(userId: ${id}, connectionId: 22) {
    id
    userId
    user {
      id
      firstname
      lastname
      username
    }
    connectionUserId
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">72886</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">var connectionId;
connectionId = ${id};
vars.put(&apos;connectionId&apos;, connectionId+3);
log.info(&apos;user id is &apos; + connectionId);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserOffers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserOffers {\n  getUserOffers(userId: ${id}) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n      username\n    }\n    description\n    institutionId\n    institution {\n      address\n      name\n      id\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserOffers {
  getUserOffers(userId: ${id}) {
    id
    userId
    user {
      id
      firstname
      lastname
      username
    }
    description
    institutionId
    institution {
      address
      name
      id
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserOfferById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserOfferById {\n  getUserOfferById(offerId: 84) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n    }\n    description\n    institutionId\n    institution {\n      name\n      id\n      address\n      address1\n      city\n      state\n      zip\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserOfferById {
  getUserOfferById(offerId: 84) {
    id
    userId
    user {
      id
      firstname
      lastname
    }
    description
    institutionId
    institution {
      name
      id
      address
      address1
      city
      state
      zip
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserTeams" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserTeams {\n  getUserTeams(userId: ${id}) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n    }\n    institutionId\n    institution {\n      id\n      name\n      address\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserTeams {
  getUserTeams(userId: ${id}) {
    id
    userId
    user {
      id
      firstname
      lastname
    }
    institutionId
    institution {
      id
      name
      address
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserTeamById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserTeamById {\n  getUserTeamById(teamId: 202) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n      username\n    }\n    institutionId\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n      zip\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserTeamById {
  getUserTeamById(teamId: 202) {
    id
    userId
    user {
      id
      firstname
      lastname
      username
    }
    institutionId
    institution {
      id
      name
      address
      address1
      city
      state
      zip
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetNotifications" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetNotifications {\n  getNotifications(userId: 72909) {\n     pageInfo {\n      totalCount\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetNotifications {
  getNotifications(userId: 72909) {
     pageInfo {
      totalCount
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetNetworkStatus" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetNetworkStatus {\n  getNetworkStatus(userId: ${id}, networkUserId: 72911) {\n    isFollowing(userId: ${connectionId})\n    userConnection {\n      userId\n      user {\n        firstname\n        lastname\n      }\n      connectionUserId\n      createdAt\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetNetworkStatus {
  getNetworkStatus(userId: ${id}, networkUserId: 72911) {
    isFollowing(userId: ${connectionId})
    userConnection {
      userId
      user {
        firstname
        lastname
      }
      connectionUserId
      createdAt
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">var connectionId;
connectionId = ${id};
vars.put(&apos;connectionId&apos;, connectionId+3);
log.info(&apos;user id is &apos; + connectionId);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUniqueFeaturedMediaAttributes" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUniqueFeaturedMediaAttributes {\n  getUniqueFeaturedMediaAttributes(userId: ${id}) {\n    id\n    name\n    displayName\n    \n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUniqueFeaturedMediaAttributes {
  getUniqueFeaturedMediaAttributes(userId: ${id}) {
    id
    name
    displayName
    
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserInterestData" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserInterestData {\n  getUserInterestData(\n  \tuserId: ${id}) \n  \t{\n  \t\ttrendingActivities {\n  \t\t\tid\n      \t\tname\n      \t\trecruitmentStatus\n      \t\tshowTeams\n      \t\tusers {\n      \t\t\tbusinessEmail\n        \t\t\temail\n        \t\t\tfirstname\n        \t\t\tfollowerCount\n        \t\t\tid\n      \t\t}\n  \t\t}\n  \t\tuserInterests {\n  \t\t\tgroupName\n      \t\ticonURL\n      \t\tid\n      \t\tname\n      \t\trecruitmentStatus\n      \t\tshowTeams\n  \t\t}\n  \t}\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserInterestData {
  getUserInterestData(
  	userId: ${id}) 
  	{
  		trendingActivities {
  			id
      		name
      		recruitmentStatus
      		showTeams
      		users {
      			businessEmail
        			email
        			firstname
        			followerCount
        			id
      		}
  		}
  		userInterests {
  			groupName
      		iconURL
      		id
      		name
      		recruitmentStatus
      		showTeams
  		}
  	}
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAttributeById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetAttributeById{\n  getAttributeById(attributeId: ${id}) {\n    name\n    displayName\n    activities {\n      name\n      users {\n        firstname\n        lastname\n        username\n        email\n      }\n      recruitmentStatus\n    }\n    isActivity\n    isSeason\n    isMedia\n    showOnMainProfile\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAttributeById{
  getAttributeById(attributeId: ${id}) {
    name
    displayName
    activities {
      name
      users {
        firstname
        lastname
        username
        email
      }
      recruitmentStatus
    }
    isActivity
    isSeason
    isMedia
    showOnMainProfile
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserLinkById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userLinkId&quot;: 5
},&quot;query&quot;:&quot;query GetUserLinkById {\n  getUserLinkById(userLinkId: ${id}) {\n    userId\n    user {\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n      height\n      weight\n      gender\n      HSGraduationYear\n      SATScore\n    }\n    linkName\n    linkURL\n    description\n    companyIcon\n    orderIndex\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserLinkById {
  getUserLinkById(userLinkId: ${id}) {
    userId
    user {
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
      height
      weight
      gender
      HSGraduationYear
      SATScore
    }
    linkName
    linkURL
    description
    companyIcon
    orderIndex
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userLinkId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetContentById" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetContentById{\n  getContentById(id: 1698) {\n    contentType\n    userId\n    contentData\n    description\n    createdAt\n    updatedAt\n    likeCount\n    commentCount\n    visibility\n    isPublished\n    isLiked\n    isCommented\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.qa.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetContentById{
  getContentById(id: 1698) {
    contentType
    userId
    contentData
    description
    createdAt
    updatedAt
    likeCount
    commentCount
    visibility
    isPublished
    isLiked
    isCommented
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${contentid}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAllContentDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;query GetAllContentDraft{\n  getAllContentDraft(userId: ${id}) {\n    contentType\n    userId\n    contentData\n    createdAt\n    updatedAt\n    visibility\n    isPublished\n    description\n    allowRepost\n    allowComments\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAllContentDraft{
  getAllContentDraft(userId: ${id}) {
    contentType
    userId
    contentData
    createdAt
    updatedAt
    visibility
    isPublished
    description
    allowRepost
    allowComments
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetConnectionRequests" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;query GetConnectionRequests {\n  getConnectionRequests(userId: ${id}) {\n    id\n    userId\n    user {\n      id\n      firstname\n      lastname\n    }\n    connectionUserId\n    createdAt\n    status\n    connectionUser {\n      firstname\n      lastname\n      username\n    }\n    isRequest\n    mutualConnection\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetConnectionRequests {
  getConnectionRequests(userId: ${id}) {
    id
    userId
    user {
      id
      firstname
      lastname
    }
    connectionUserId
    createdAt
    status
    connectionUser {
      firstname
      lastname
      username
    }
    isRequest
    mutualConnection
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetNotificationSetting" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;query GetNotificationSetting{\n  getNotificationSetting(userId: ${id}) {\n    notificationBadge\n    advanceNotification\n    userId\n    pushNotifications\n    emailSetting\n    id\n    mutedWords\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetNotificationSetting{
  getNotificationSetting(userId: ${id}) {
    notificationBadge
    advanceNotification
    userId
    pushNotifications
    emailSetting
    id
    mutedWords
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserByUsername" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserByUsername{\n  getUserByUsername(\n  \tusername: \&quot;test_221220205310413_8918.account_221220205310413_22.4747\&quot;\n  ){\n  \tfirstname\n    \tid\n    \tlastname\n    \tusername\n    \temail\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserByUsername{
  getUserByUsername(
  	username: &quot;test_221220205310413_8918.account_221220205310413_22.4747&quot;
  ){
  	firstname
    	id
    	lastname
    	username
    	email
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAttributesWithContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5,
  &quot;activityId&quot;: 41
},&quot;query&quot;:&quot;query GetAttributesWithContent{\n  getAttributesWithContent(userId: ${id}, activityId: 41) {\n    id\n    name\n    displayName\n    isActivity\n    isSeason\n    showOnMainProfile\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAttributesWithContent{
  getAttributesWithContent(userId: ${id}, activityId: 41) {
    id
    name
    displayName
    isActivity
    isSeason
    showOnMainProfile
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5,
  &quot;activityId&quot;: 41
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetCommentsByContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetCommentsByContent {\n  getCommentsByContent(contentId: ${contentid}) {\n    pageEdges {\n      node {\n        id\n        commentText\n        commentedBy\n        commenter {\n          id\n          firstname\n          lastname\n          username\n          email\n        }\n        createdAt\n        parentId\n        likeCount\n        taggedUserIds\n        contentId\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetCommentsByContent {
  getCommentsByContent(contentId: ${contentid}) {
    pageEdges {
      node {
        id
        commentText
        commentedBy
        commenter {
          id
          firstname
          lastname
          username
          email
        }
        createdAt
        parentId
        likeCount
        taggedUserIds
        contentId
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetTagsByContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;contentId&quot;: 41
},&quot;query&quot;:&quot;query GetTagsByContent{\n  getTagsByContent(contentId: ${id}) {\n    id\n    contentId\n    content {\n      id\n      contentType\n      userId\n      contentData\n      description\n    }\n    tagId\n    createdAt\n    tag {\n      id\n      name\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetTagsByContent{
  getTagsByContent(contentId: ${id}) {
    id
    contentId
    content {
      id
      contentType
      userId
      contentData
      description
    }
    tagId
    createdAt
    tag {
      id
      name
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;contentId&quot;: 41
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetCommentLikesById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;commentId&quot;: 68852
},&quot;query&quot;:&quot;query GetCommentLikesById{\n  getCommentLikesById(commentId: 68852) {\n    pageEdges {\n      node {\n        id\n        commentId\n        likedBy\n        createdAt\n      }\n    }\n    pageInfo {\n      totalCount\n      hasNextPage\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetCommentLikesById{
  getCommentLikesById(commentId: 68852) {
    pageEdges {
      node {
        id
        commentId
        likedBy
        createdAt
      }
    }
    pageInfo {
      totalCount
      hasNextPage
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;commentId&quot;: 68852
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAllContentDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetAllContentDraft {\n  getAllContentDraft(userId: ${id}, activityId: 41) {\n    id\n    contentType\n    userId\n    contentData\n    createdAt\n    updatedAt\n    visibility\n    isPublished\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAllContentDraft {
  getAllContentDraft(userId: ${id}, activityId: 41) {
    id
    contentType
    userId
    contentData
    createdAt
    updatedAt
    visibility
    isPublished
  }
} </stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetContentDraftById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getContentDraftByIdId&quot;: 143
},&quot;query&quot;:&quot;query GetContentDraftById{\n  getContentDraftById(id: ${id}) {\n    id\n    contentType\n    userId\n    contentData\n    createdAt\n    updatedAt\n    visibility\n    isPublished\n    description\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetContentDraftById{
  getContentDraftById(id: ${id}) {
    id
    contentType
    userId
    contentData
    createdAt
    updatedAt
    visibility
    isPublished
    description
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getContentDraftByIdId&quot;: 143
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetForYouFeed" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getForYouFeedId&quot;: 5
},&quot;query&quot;:&quot;query GetForYouFeed {\n  getForYouFeed(id: ${id}) {\n    pageEdges {\n      node {\n        id\n        contentType\n        userId\n        contentData\n        description\n        likeCount\n        commentCount\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetForYouFeed {
  getForYouFeed(id: ${id}) {
    pageEdges {
      node {
        id
        contentType
        userId
        contentData
        description
        likeCount
        commentCount
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getForYouFeedId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetContentsFromTag" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;tagId&quot;: 14
},&quot;query&quot;:&quot;query GetContentsFromTag{\n  getContentsFromTag(tagId: ${id}) {\n    pageEdges {\n      node {\n        id\n        contentId\n        content {\n          id\n          contentType\n          userId\n          imageURL\n          contentData\n          description\n        }\n        tagId\n        tag {\n          id\n          name\n        }\n        createdAt\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetContentsFromTag{
  getContentsFromTag(tagId: ${id}) {
    pageEdges {
      node {
        id
        contentId
        content {
          id
          contentType
          userId
          imageURL
          contentData
          description
        }
        tagId
        tag {
          id
          name
        }
        createdAt
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;tagId&quot;: 14
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetChatVideos" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getChatVideosInput&quot;: {
    &quot;videoIds&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;
  }
},&quot;query&quot;:&quot;query GetChatVideos($getChatVideosInput: GetChatVideosInput) {\n  getChatVideos(getChatVideosInput: $getChatVideosInput) {\n    thumbnailURL\n    SASUrl\n    videoURL\n    videoData\n    isPublished\n    videoId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetChatVideos($getChatVideosInput: GetChatVideosInput) {
  getChatVideos(getChatVideosInput: $getChatVideosInput) {
    thumbnailURL
    SASUrl
    videoURL
    videoData
    isPublished
    videoId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getChatVideosInput&quot;: {
    &quot;videoIds&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetAttributesWithContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;query GetAttributesWithContent {\n  getAttributesWithContent(userId: ${id}) {\n    id\n    name\n    displayName\n    activities {\n      id\n      name\n      users {\n        id\n        firstname\n        lastname\n        username\n        email\n      }\n    }\n    isActivity\n    isSeason\n    isMedia\n    isFeatured\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetAttributesWithContent {
  getAttributesWithContent(userId: ${id}) {
    id
    name
    displayName
    activities {
      id
      name
      users {
        id
        firstname
        lastname
        username
        email
      }
    }
    isActivity
    isSeason
    isMedia
    isFeatured
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUsersByXMPPUsername" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;xmppUsernames&quot;: &quot;cl1ysnue700064dvjka0l9wpu&quot;
},&quot;query&quot;:&quot;query GetUsersByXMPPUsername($xmppUsernames: [String]) {\n  getUsersByXMPPUsername(xmppUsernames: $xmppUsernames) {\n    firstname\n    lastname\n    username\n    profileImage\n    email\n    id\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUsersByXMPPUsername($xmppUsernames: [String]) {
  getUsersByXMPPUsername(xmppUsernames: $xmppUsernames) {
    firstname
    lastname
    username
    profileImage
    email
    id
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;xmppUsernames&quot;: &quot;cl1ysnue700064dvjka0l9wpu&quot;
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserActivityTeamById" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivityTeamId&quot;: 9004
},&quot;query&quot;:&quot;query GetUserActivityTeamById($userActivityTeamId: Int!) {\n  getUserActivityTeamById(userActivityTeamId: $userActivityTeamId) {\n    id\n    name\n    institutionId\n    institutionName\n    city\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserActivityTeamById($userActivityTeamId: Int!) {
  getUserActivityTeamById(userActivityTeamId: $userActivityTeamId) {
    id
    name
    institutionId
    institutionName
    city
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivityTeamId&quot;: 9004
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetMyFeed" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getMyFeedId&quot;: 3,
  &quot;pageNo&quot;: 1
},&quot;query&quot;:&quot;query GetMyFeed($getMyFeedId: Int!, $pageNo: Int) {\n  getMyFeed(id: $getMyFeedId, pageNo: $pageNo) {\n    pageEdges {\n      node {\n        id\n        contentType\n        userId\n        likeCount\n        commentCount\n        isPublished\n        location\n      }\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetMyFeed($getMyFeedId: Int!, $pageNo: Int) {
  getMyFeed(id: $getMyFeedId, pageNo: $pageNo) {
    pageEdges {
      node {
        id
        contentType
        userId
        likeCount
        commentCount
        isPublished
        location
      }
    }
    pageInfo {
      hasNextPage
      totalCount
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getMyFeedId&quot;: 3,
  &quot;pageNo&quot;: 1
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CheckIfBlocked" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query CheckIfBlocked{\n  checkIfBlocked(userId: $userId, blockedUserId: 50973) {\n    message\n    status\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query CheckIfBlocked{
  checkIfBlocked(userId: $userId, blockedUserId: 50973) {
    message
    status
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">var connectionId;
connectionId = ${id};
vars.put(&apos;connectionId&apos;, connectionId+3);
log.info(&apos;user id is &apos; + connectionId);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetBlockedUsers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetBlockedUsers {\n  getBlockedUsers(userId: ${id}, searchString: \&quot;Stress\&quot;) {\n    pageEdges {\n      node {\n        bio\n        birthDate\n        backgroundImageThumbnail\n        backgroundImage\n        businessEmail\n        city\n        connectionStatus {\n          connectionUserId\n          createdAt\n          followerCount\n          id\n          isRequest\n          mutualConnection\n          status\n          updatedAt\n          userId\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetBlockedUsers {
  getBlockedUsers(userId: ${id}, searchString: &quot;Stress&quot;) {
    pageEdges {
      node {
        bio
        birthDate
        backgroundImageThumbnail
        backgroundImage
        businessEmail
        city
        connectionStatus {
          connectionUserId
          createdAt
          followerCount
          id
          isRequest
          mutualConnection
          status
          updatedAt
          userId
        }
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUsers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUsers {\n  getUsers {\n    bio\n    businessEmail\n    email\n    firstname\n    followerCount\n    id\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUsers {
  getUsers {
    bio
    businessEmail
    email
    firstname
    followerCount
    id
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczOTQ5MjIwLCJleHAiOjE2NzY1NDEyMjAsInBybSI6ImYwMjEyMjUzOGZjM2ZiY2I3NmVkNzA1OTc5MzQ5MmM3IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6ImY1NjMzM2FhLWM5OWItNGRkZS05ZGQ0LTczNzU4YTUzOGYyZiJ9.WyB9ygLrWzweAIv-hdiVJvW0L_eFWUkl9Oh1UiZhn3BROpgFEAgUG4OEI6BonQwJ-aviYKZxm3mkpgFAQx17iFQ2K44-FiuoehXhtotXVHW4iuhGwSwb7uj9ydIEX7Sxg790xsbMNN5Sh1GPJxBWnutaLDKG54YQB5EeS6u-slhPYJ6KDfbTk_Jz59mqe5NR7cErescPtaycILZbDBuayZEp4_rgF29c-AIlCSRsjAijFturLBeqrPe5y4SEyGqFKI_ML5BBQ26vsgRQ4NRUVoDk9u1dplRStEzdP71pjOrVH6A-LN1SmdVlghR55gzA-aSpC_IQ22Cm9Cei93snTQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddConnection" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddConnection {\n  addConnection(userId: ${id}, connectionId: 50078)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddConnection {
  addConnection(userId: ${id}, connectionId: 50078)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ChangeConnectionStatus" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ChangeConnectionStatus {\n  changeConnectionStatus(userId: ${id}, connectionId: 50078, status: Approved)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ChangeConnectionStatus {
  changeConnectionStatus(userId: ${id}, connectionId: 50078, status: Approved)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="RemoveConnection" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation RemoveConnection {\n  removeConnection(userId: ${id}, connectionId: 50078)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation RemoveConnection {
  removeConnection(userId: ${id}, connectionId: 50078)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddFollowers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddFollowers {\n  addFollowers(userId: ${id}\n, followingId: ${user_id}\n)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddFollowers {
  addFollowers(userId: ${id}
, followingId: ${user_id}
)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="RemoveFollowers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation RemoveFollowers {\n  removeFollowers(userId: ${id}, followingId: 55102)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation RemoveFollowers {
  removeFollowers(userId: ${id}, followingId: 55102)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReportUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ReportUser{\n  reportUser(\n  \tuserAction:\n  \t{\n  \t\tuserId: ${id},\n    \t\tblockedUserId: 50012,\n    \t\ttype: Block\n  }) {\n    userId\n    blockedUserId\n    type\n    reason\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReportUser{
  reportUser(
  	userAction:
  	{
  		userId: ${id},
    		blockedUserId: 50012,
    		type: Block
  }) {
    userId
    blockedUserId
    type
    reason
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">email</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..email </stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">emailnotfound</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SaveUserActivity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation SaveUserActivity {\n  saveUserActivity(userId: 50080, activityId: 51) {\n    preferenceActivity {\n      name\n    }\n    userId\n    user {\n      firstname\n      lastname\n      username\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SaveUserActivity {
  saveUserActivity(userId: 50080, activityId: 51) {
    preferenceActivity {
      name
    }
    userId
    user {
      firstname
      lastname
      username
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="updateUserActivity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation updateUserActivity{\n  updateUserActivity(\n    userActivity: { activityId: 1, attributeValues: [\n    {\n        id: 50074,\n        name: \&quot;3/4CourtSprint-basketball\&quot;,\n        type: Picker,\n        value: \&quot;15.0\&quot;,\n        userUnit: \&quot;sec\&quot;,\n        userValue: \&quot;15.0\&quot;,\n        displayValue: \&quot;15.0 sec\&quot;\n    },\n    {\n        id: 50075,\n        name: \&quot;3Pointers%-basketball\&quot;,\n        type: Input,\n        value: \&quot;60.00\&quot;,\n        displayValue: \&quot;60.00 %\&quot;\n    },\n    {\n        id: 50076,\n        name: \&quot;steals-basketball\&quot;,\n        type: Input,\n        value: \&quot;700\&quot;,\n        displayValue: \&quot;700\&quot;\n    }\n    ], userId:${id} }\n    userActivityId: 1\n  ) {\n    id\n    activityId\n    preferenceActivity {\n      name\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation updateUserActivity{
  updateUserActivity(
    userActivity: { activityId: 1, attributeValues: [
    {
        id: 50074,
        name: &quot;3/4CourtSprint-basketball&quot;,
        type: Picker,
        value: &quot;15.0&quot;,
        userUnit: &quot;sec&quot;,
        userValue: &quot;15.0&quot;,
        displayValue: &quot;15.0 sec&quot;
    },
    {
        id: 50075,
        name: &quot;3Pointers%-basketball&quot;,
        type: Input,
        value: &quot;60.00&quot;,
        displayValue: &quot;60.00 %&quot;
    },
    {
        id: 50076,
        name: &quot;steals-basketball&quot;,
        type: Input,
        value: &quot;700&quot;,
        displayValue: &quot;700&quot;
    }
    ], userId:${id} }
    userActivityId: 1
  ) {
    id
    activityId
    preferenceActivity {
      name
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CreateUserLink" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation CreateUserLink {\n  createUserLink(userLinkArgs: {\n    userId: 50089,\n    linkName: \&quot;Google\&quot;,\n    linkURL: \&quot;https://www.google.co.in/\&quot;,\n    description: \&quot;API Testing for Link URLS\&quot;,\n    companyIcon: \&quot;https://i.picsum.photos/id/1/200/300.jpg?hmac=jH5bDkLr6Tgy3oAg5khKCHeunZMHq0ehBZr6vGifPLY\&quot;\n  }) {\n    id\n    userId\n    linkName\n    linkURL\n    description\n    companyIcon\n    orderIndex\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CreateUserLink {
  createUserLink(userLinkArgs: {
    userId: 50089,
    linkName: &quot;Google&quot;,
    linkURL: &quot;https://www.google.co.in/&quot;,
    description: &quot;API Testing for Link URLS&quot;,
    companyIcon: &quot;https://i.picsum.photos/id/1/200/300.jpg?hmac=jH5bDkLr6Tgy3oAg5khKCHeunZMHq0ehBZr6vGifPLY&quot;
  }) {
    id
    userId
    linkName
    linkURL
    description
    companyIcon
    orderIndex
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReorderUserLink " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ReorderUserLink {\n  reorderUserLink(linkReOrderArgs: {\n      userLinkId: 50089,\n      orderIndex: 1\n    })\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReorderUserLink {
  reorderUserLink(linkReOrderArgs: {
      userLinkId: 50089,
      orderIndex: 1
    })
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserLink " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteUserLink {\n  deleteUserLink(userLinkId: 50089)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserLink {
  deleteUserLink(userLinkId: 50089)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddProfileImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddProfileImage {\n  addProfileImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddProfileImage {
  addProfileImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditProfileImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation EditProfileImage {\n  editProfileImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditProfileImage {
  editProfileImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReplaceProfileImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ReplaceProfileImage {\n  replaceProfileImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReplaceProfileImage {
  replaceProfileImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteProfileImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteProfileImage {\n  deleteProfileImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteProfileImage {
  deleteProfileImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddBackgroundImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddBackgroundImage {\n  addBackgroundImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddBackgroundImage {
  addBackgroundImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditBackgroundImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation EditBackgroundImage {\n  editBackgroundImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditBackgroundImage {
  editBackgroundImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReplaceBackgroundImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ReplaceBackgroundImage {\n  replaceBackgroundImage(profileInput: {\n    userId: 5\n    contentId: 59\n    originalImage: \&quot;${originalImage}\&quot;\n    croppedImage: \&quot;${croppedImage}\&quot;\n  }) {\n    id\n    firstname\n    lastname\n    username\n    email\n    profileImage\n    backgroundImage\n    provider\n    height\n    weight\n    gender\n    HSGraduationYear\n    SATScore\n    bio\n    highSchoolLevel\n    xmppUsername\n    isAdmin\n    backgroundVideoData\n    videoThumbnail\n    uniqueKey\n    birthDate\n    city\n    state\n    isEmailConfirmed\n    viewEditProfile\n    isFlagged\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReplaceBackgroundImage {
  replaceBackgroundImage(profileInput: {
    userId: 5
    contentId: 59
    originalImage: &quot;${originalImage}&quot;
    croppedImage: &quot;${croppedImage}&quot;
  }) {
    id
    firstname
    lastname
    username
    email
    profileImage
    backgroundImage
    provider
    height
    weight
    gender
    HSGraduationYear
    SATScore
    bio
    highSchoolLevel
    xmppUsername
    isAdmin
    backgroundVideoData
    videoThumbnail
    uniqueKey
    birthDate
    city
    state
    isEmailConfirmed
    viewEditProfile
    isFlagged
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddActivityImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
},&quot;query&quot;:&quot;mutation AddActivityImage($activityImageInput: ActivityImageInput) {\n  addActivityImage(activityImageInput: $activityImageInput) {\n    id\n    userId\n    activityId\n    backgroundImage\n    user {\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n    }\n    userActivitySeasonAttributes {\n      userActivityId\n      team\n      season\n    }\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddActivityImage($activityImageInput: ActivityImageInput) {
  addActivityImage(activityImageInput: $activityImageInput) {
    id
    userId
    activityId
    backgroundImage
    user {
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
    }
    userActivitySeasonAttributes {
      userActivityId
      team
      season
    }
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditActivityImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
},&quot;query&quot;:&quot;mutation EditActivityImage($activityImageInput: ActivityImageInput) {\n  editActivityImage(activityImageInput: $activityImageInput) {\n    id\n    userId\n    activityId\n    backgroundImage\n    user {\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n    }\n    userActivitySeasonAttributes {\n      userActivityId\n      team\n      season\n    }\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditActivityImage($activityImageInput: ActivityImageInput) {
  editActivityImage(activityImageInput: $activityImageInput) {
    id
    userId
    activityId
    backgroundImage
    user {
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
    }
    userActivitySeasonAttributes {
      userActivityId
      team
      season
    }
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReplaceActivityImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
},&quot;query&quot;:&quot;mutation ReplaceActivityImage($activityImageInput: ActivityImageInput) {\n  replaceActivityImage(activityImageInput: $activityImageInput) {\n    id\n    userId\n    activityId\n    backgroundImage\n    user {\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n    }\n    userActivitySeasonAttributes {\n      userActivityId\n      team\n      season\n    }\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReplaceActivityImage($activityImageInput: ActivityImageInput) {
  replaceActivityImage(activityImageInput: $activityImageInput) {
    id
    userId
    activityId
    backgroundImage
    user {
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
    }
    userActivitySeasonAttributes {
      userActivityId
      team
      season
    }
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;activityImageInput&quot;: {
    &quot;userActivityId&quot;: 6,
    &quot;originalImage&quot;: &quot;${originalImage}&quot;
    &quot;croppedImage&quot;: &quot;${croppedImage}&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddActivityBackgroundVideo" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;backgroundVideoDataInputForActivity&quot;: {
    &quot;activityId&quot;: 5,
    &quot;videoData&quot;: {
      &quot;playbackId&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;,
      &quot;assetId&quot;: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;
    }
  }
},&quot;query&quot;:&quot;mutation AddActivityBackgroundVideo($backgroundVideoDataInputForActivity: BackgroundVideoDataInputForActivity) {\n  addActivityBackgroundVideo(backgroundVideoDataInputForActivity: $backgroundVideoDataInputForActivity) {\n    activityId\n    signedUrl\n    videoThumbnail\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddActivityBackgroundVideo($backgroundVideoDataInputForActivity: BackgroundVideoDataInputForActivity) {
  addActivityBackgroundVideo(backgroundVideoDataInputForActivity: $backgroundVideoDataInputForActivity) {
    activityId
    signedUrl
    videoThumbnail
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;backgroundVideoDataInputForActivity&quot;: {
    &quot;activityId&quot;: 5,
    &quot;videoData&quot;: {
      &quot;playbackId&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;,
      &quot;assetId&quot;: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;
    }
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddBackgroundVideo" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddBackgroundVideo {\n  addBackgroundVideo(backgroundVideoDataInput: {\n    \tvideoData: {\n      \tplaybackId: \&quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM\&quot;,\n      \tassetId: \&quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc\&quot;\n    },\n    userId: 5\n  }) {\n    userId\n    signedUrl\n    videoThumbnail\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddBackgroundVideo {
  addBackgroundVideo(backgroundVideoDataInput: {
    	videoData: {
      	playbackId: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;,
      	assetId: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;
    },
    userId: 5
  }) {
    userId
    signedUrl
    videoThumbnail
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteBackgroundVideo" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteUserBackground {\n  deleteUserBackground(userId: 5)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserBackground {
  deleteUserBackground(userId: 5)
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserCommitment " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation UpdateUserCommitment {\n  updateUserCommitment(id: 5, updateUserCommitmentInput: {\n    institutionId: 2\n    name: \&quot;McLaughlin\&quot;\n    videoData: {\n      assetId: \&quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc\&quot;,\n      playbackId: \&quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM\&quot;\n    }\n  } ) {\n    id\n    name\n    userId\n    institutionId\n    videoData\n    isActivelyLooking\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n      zip\n      country\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserCommitment {
  updateUserCommitment(id: 5, updateUserCommitmentInput: {
    institutionId: 2
    name: &quot;McLaughlin&quot;
    videoData: {
      assetId: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;,
      playbackId: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;
    }
  } ) {
    id
    name
    userId
    institutionId
    videoData
    isActivelyLooking
    institution {
      id
      name
      address
      address1
      city
      state
      zip
      country
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="RemoveUserCommitment " enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation RemoveUserCommitment {\n  removeUserCommitment(id: 5) {\n    id\n    name\n    userId\n    user {\n      id\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n    }\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n      zip\n      zip4\n      country\n      latitude\n      longitude\n    }\n    institutionId\n    videoData\n    isActivelyLooking\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation RemoveUserCommitment {
  removeUserCommitment(id: 5) {
    id
    name
    userId
    user {
      id
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
    }
    institution {
      id
      name
      address
      address1
      city
      state
      zip
      zip4
      country
      latitude
      longitude
    }
    institutionId
    videoData
    isActivelyLooking
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="RemoveUserCommitmentVideo" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation RemoveUserCommitmentVideo {\n  removeUserCommitmentVideo(id: 5) {\n    id\n    name\n    userId\n    user {\n      id\n      firstname\n      lastname\n      username\n      email\n      profileImage\n      backgroundImage\n      preferences {\n        id\n        name\n      }\n      height\n      weight\n      gender\n    }\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n      zip\n      zip4\n    }\n    institutionId\n    videoData\n    isActivelyLooking\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation RemoveUserCommitmentVideo {
  removeUserCommitmentVideo(id: 5) {
    id
    name
    userId
    user {
      id
      firstname
      lastname
      username
      email
      profileImage
      backgroundImage
      preferences {
        id
        name
      }
      height
      weight
      gender
    }
    institution {
      id
      name
      address
      address1
      city
      state
      zip
      zip4
    }
    institutionId
    videoData
    isActivelyLooking
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddUserTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddUserTeam{\n  addUserTeam(\n  \tuserTeam: {\n  \t\tinstitutionId: 18738,\n    \t\tuserId: 50081\n  \t}) {\n    institutionId\n    orderIndex\n    userId\n    id\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddUserTeam{
  addUserTeam(
  	userTeam: {
  		institutionId: 18738,
    		userId: 50081
  	}) {
    institutionId
    orderIndex
    userId
    id
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CreateContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation CreateContent{\n  createContent(\n  \tcontentArgs: {\n  \t\tallowComments: true,\n    \t\tallowRepost: false,\n    \t\tcontentType: Text,\n    \t\tdescription: \&quot;Stress Text Post_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000000,100000)}\&quot;,\n    \t\tisPinned: false,\n    \t\tuserId: ${id},\n    \t\tvisibility: Public\n  })\n {\n    blobUrl\n    contentId\n    imageContentSignedUrl\n    signedUrl\n    thumbnailSignedUrl\n    videoThumbnailURL\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CreateContent{
  createContent(
  	contentArgs: {
  		allowComments: true,
    		allowRepost: false,
    		contentType: Text,
    		description: &quot;Stress Text Post_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000000,100000)}&quot;,
    		isPinned: false,
    		userId: ${id},
    		visibility: Public
  })
 {
    blobUrl
    contentId
    imageContentSignedUrl
    signedUrl
    thumbnailSignedUrl
    videoThumbnailURL
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddProfileView" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;fromId&quot;: 180,
  &quot;toUserId&quot;: 5
},&quot;query&quot;:&quot;mutation AddProfileView{\n  addProfileView(fromId: 50074, toUserId: 50071) {\n    id\n    fromUserId\n    fromUser {\n      firstname\n      lastname\n    }\n    toUser {\n      firstname\n      lastname\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddProfileView{
  addProfileView(fromId: 50074, toUserId: 50071) {
    id
    fromUserId
    fromUser {
      firstname
      lastname
    }
    toUser {
      firstname
      lastname
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;fromId&quot;: 180,
  &quot;toUserId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserSocialFollow" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation UpdateUserSocialFollow{\n  updateUserSocialFollow(\n  \tupdateSocial: {\n  \t\tuserId: ${id},\n    \t\tinstagramLink: \&quot;https:www.google.com\&quot;\n  }) {\n    userId\n    instagramLink\n    twitterLink\n    facebookLink\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserSocialFollow{
  updateUserSocialFollow(
  	updateSocial: {
  		userId: ${id},
    		instagramLink: &quot;https:www.google.com&quot;
  }) {
    userId
    instagramLink
    twitterLink
    facebookLink
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddUserAchievement" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddUserAchievement{\n  addUserAchievement(\n  \tuserAchievement: {\n  \t\tid: 10,\n    \t\tachievement: \&quot;Football achievement\&quot;,\n    \t\tteam: \&quot;Barcelona\&quot;,\n    \t\tuserId: 50081\n  }) {\n    id\n    achievement\n    team\n    date\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddUserAchievement{
  addUserAchievement(
  	userAchievement: {
  		id: 10,
    		achievement: &quot;Football achievement&quot;,
    		team: &quot;Barcelona&quot;,
    		userId: 50081
  }) {
    id
    achievement
    team
    date
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReorderUserTeams" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userTeamsInput&quot;: [
    {
      &quot;id&quot;: 24,
      &quot;userId&quot;: 50081,
      &quot;institutionId&quot;: 1
    }
  ]
},&quot;query&quot;:&quot;mutation ReorderUserTeams($userTeamsInput: [UserTeamsInput]) {\n  reorderUserTeams(userTeamsInput: $userTeamsInput) {\n    userId\n    user {\n      firstname\n      lastname\n      username\n      email\n      height\n      weight\n      gender\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReorderUserTeams($userTeamsInput: [UserTeamsInput]) {
  reorderUserTeams(userTeamsInput: $userTeamsInput) {
    userId
    user {
      firstname
      lastname
      username
      email
      height
      weight
      gender
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userTeamsInput&quot;: [
    {
      &quot;id&quot;: 24,
      &quot;userId&quot;: 50081,
      &quot;institutionId&quot;: 1
    }
  ]
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation UpdateUserTeam{\n  updateUserTeam(\n  \tuserTeam: {\n  \t\tid: 24\n  \t\tuserId: 50081,\n    \t\tinstitutionId: 18738\n  }) {\n    id\n    userId\n    user {\n      firstname\n      lastname\n      username\n      email\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserTeam{
  updateUserTeam(
  	userTeam: {
  		id: 24
  		userId: 50081,
    		institutionId: 18738
  }) {
    id
    userId
    user {
      firstname
      lastname
      username
      email
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteUserTeam{\n  deleteUserTeam(teamId: 24)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserTeam{
  deleteUserTeam(teamId: 24)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="IncrementProfileViewCount" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;mutation IncrementProfileViewCount {\n  incrementProfileViewCount(userId: 50074)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation IncrementProfileViewCount {
  incrementProfileViewCount(userId: 50074)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserInstitutions" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userInstitutionInputType&quot;: {
    &quot;College&quot;: {
      &quot;institutionId&quot;: 34,
      &quot;grade&quot;: &quot;A&quot;
    }
  },
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;mutation UpdateUserInstitutions{\n  updateUserInstitutions(\n  \tuserInstitutionInputType: {\n  \t\tCollege: {\n  \t\t\tinstitutionId: 32364,\n      \t\tgrade: \&quot;B\&quot;\n  \t\t}\n  \t},\n  \tuserId: 50081  \t\n  \t)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserInstitutions{
  updateUserInstitutions(
  	userInstitutionInputType: {
  		College: {
  			institutionId: 32364,
      		grade: &quot;B&quot;
  		}
  	},
  	userId: 50081  	
  	)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userInstitutionInputType&quot;: {
    &quot;College&quot;: {
      &quot;institutionId&quot;: 34,
      &quot;grade&quot;: &quot;A&quot;
    }
  },
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditUserLink" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation EditUserLink {\n  editUserLink(\n  \tuserLinkId: 14,\n  \tuserLinkArgs: {\n  \t\tuserId: ${id},\n  \t\tdescription: \&quot;testing demo link\&quot;,\n  \t\tlinkName: \&quot;dummy link 2\&quot;,\n    \t\tlinkURL: \&quot;nxvl://PublicProfiletest.account.55505\&quot;\n  \t}) {\n    userId\n    linkName\n    description\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditUserLink {
  editUserLink(
  	userLinkId: 14,
  	userLinkArgs: {
  		userId: ${id},
  		description: &quot;testing demo link&quot;,
  		linkName: &quot;dummy link 2&quot;,
    		linkURL: &quot;nxvl://PublicProfiletest.account.55505&quot;
  	}) {
    userId
    linkName
    description
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddCommentLike" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddCommentLike{\n  addCommentLike(\n  \tcommentLikeArgs: {\n  \t\tid: 388084,\n  \t\tlikedBy: 50075,\n    \t\tcommentUserId: 10025\n  \t})\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddCommentLike{
  addCommentLike(
  	commentLikeArgs: {
  		id: 388084,
  		likedBy: 50075,
    		commentUserId: 10025
  	})
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetGroupedUserActivities" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetGroupedUserActivities{\n  getGroupedUserActivities(userId: ${id}) {\n    userActivities {\n      activityId\n      activityName\n    }\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        users {\n          id\n          firstname\n          lastname\n          username\n          email\n          preferences {\n            userActivity {\n              activityId\n              \n            }\n            groupName\n            recruitmentStatus\n            activitiesOnContents {\n              id\n              contentId\n              content {\n                contentType\n                userId\n                imageURL\n                contentData\n              }\n              activityId\n            }\n          }\n          height\n          weight\n          gender\n          HSGraduationYear\n          bio\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetGroupedUserActivities{
  getGroupedUserActivities(userId: ${id}) {
    userActivities {
      activityId
      activityName
    }
    groupedUserActivities {
      name
      activities {
        id
        name
        users {
          id
          firstname
          lastname
          username
          email
          preferences {
            userActivity {
              activityId
              
            }
            groupName
            recruitmentStatus
            activitiesOnContents {
              id
              contentId
              content {
                contentType
                userId
                imageURL
                contentData
              }
              activityId
            }
          }
          height
          weight
          gender
          HSGraduationYear
          bio
        }
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchNXTagByText" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SearchNXTagByText{\n  searchNXTagByText(searchString: \&quot;text\&quot;) {\n    id\n    name\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchNXTagByText{
  searchNXTagByText(searchString: &quot;text&quot;) {
    id
    name
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SearchContent{\n  searchContent(\n  \tsearchContentArgs: {\n  \t\tuserId: ${id},\n    \t\tsearchString: \&quot;stress\&quot;\n  \t})\n   \t{\n   \t\tpageEdges {\n   \t\t\tnode {\n   \t\t\t\tid\n\t\t        \tcontentType\n\t\t        \tdescription\n\t\t        \tlikeCount\n      \t\t}\n    \t}\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchContent{
  searchContent(
  	searchContentArgs: {
  		userId: ${id},
    		searchString: &quot;stress&quot;
  	})
   	{
   		pageEdges {
   			node {
   				id
		        	contentType
		        	description
		        	likeCount
      		}
    	}
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchInstituteByText" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SearchInstituteByText {\n  searchInstituteByText(searchString: \&quot;McLaughlin\&quot;) {\n    id\n    name\n    address\n    city\n    state\n    zip\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchInstituteByText {
  searchInstituteByText(searchString: &quot;McLaughlin&quot;) {
    id
    name
    address
    city
    state
    zip
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchInstitution" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SearchInstitution {\n  searchInstitution(searchString: \&quot;McLaughlin\&quot;, level: \&quot;MiddleSchool\&quot;) {\n    id\n    name\n    address\n    address1\n    city\n    state\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchInstitution {
  searchInstitution(searchString: &quot;McLaughlin&quot;, level: &quot;MiddleSchool&quot;) {
    id
    name
    address
    address1
    city
    state
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;searchUserInput&quot;: {
    &quot;searchString&quot;: &quot;ali&quot;,
    &quot;userId&quot;: 5
  }
},&quot;query&quot;:&quot;query SearchUser {\n\tsearchUser(\n\t\tsearchUserInput: {\n\t\t\tsearchString: \&quot;stress\&quot;,\n\t\t\tuserId: ${id}\n\t\t}) {\n    pageEdges {\n      node {\n        id\n        firstname\n        lastname\n        username\n      }\n    }\n    pageInfo {\n      totalCount\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchUser {
	searchUser(
		searchUserInput: {
			searchString: &quot;stress&quot;,
			userId: ${id}
		}) {
    pageEdges {
      node {
        id
        firstname
        lastname
        username
      }
    }
    pageInfo {
      totalCount
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;searchUserInput&quot;: {
    &quot;searchString&quot;: &quot;ali&quot;,
    &quot;userId&quot;: 5
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CheckEmailAvailability" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation CheckEmailAvailability {\n  checkEmailAvailability(email: \&quot;abc@def.com\&quot;)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CheckEmailAvailability {
  checkEmailAvailability(email: &quot;abc@def.com&quot;)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ResendEmailVerification" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ResendEmailVerification{\n  resendEmailVerification(userId: ${id})\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ResendEmailVerification{
  resendEmailVerification(userId: ${id})
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userId&quot;: 5
},&quot;query&quot;:&quot;mutation DeleteUser {\n  deleteUser(userId: 190)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUser {
  deleteUser(userId: 190)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ForgotPassword" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ForgotPassword{\n  forgotPassword(\n  \t{\n  \t\tforgotPasswordInput: {\n  \t\t\temail: \&quot;stresstestcore221220210448141_7407@getnada.com\&quot;\n  \t\t}\n\t})\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ForgotPassword{
  forgotPassword(
  	{
  		forgotPasswordInput: {
  			email: &quot;stresstestcore221220210448141_7407@getnada.com&quot;
  		}
	})
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ChangePassword" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation ChangePassword{\n  changePassword(id: ${id}, password: \&quot;QWRtaW5AMTIzNA==\&quot;)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ChangePassword{
  changePassword(id: ${id}, password: &quot;QWRtaW5AMTIzNA==&quot;)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserPreferences" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation {\n  updateUserPreferences(updateUserPreferencesInput: {\n    selectPreferencesIds: 2\n    userId: 50079\n  })\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation {
  updateUserPreferences(updateUserPreferencesInput: {
    selectPreferencesIds: 2
    userId: 50079
  })
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">50</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter_var</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SignUp" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;stresstestcore${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}@getnada.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;
  }
},&quot;query&quot;:&quot;mutation SignUp($signupInput: SignupInput) {\n  signUp(signupInput: $signupInput) {\n    userId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.qa.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SignUp($signupInput: SignupInput) {
  signUp(signupInput: $signupInput) {
    userId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;stresstestcore${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}@getnada.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjUyMCwicGVybSI6IiIsImlhdCI6MTY4MjQyNTAyMiwiZXhwIjoxNjg1MDE3MDIyLCJwcm0iOiJhOWM0ZTUyNTRjZWQzMDA5MGFmYTdlYjc4Y2RhMTYxNSIsImppZCI6ImNsNnoxbGE0NTQ3NjYwa3VzbTc4NDQybWhAbG9jYWxob3N0IiwibWltIjoiY2w2ejFsYTQ1NDc2NjBrdXNtNzg0NDJtaCIsInVrZXkiOiIwYzY4ODYyYy0xMDIxLTRmOTctYjA2Yi04MGQ5YTk2NWFmM2MiLCJjbGllbnQiOiIiLCJqdGkiOiI2YzA4M2NkNC1lZjE0LTRjYjUtOGUzNC05ZWJlMWRlYzEwZGEifQ.ENLWZ7w0kyFoqdUywJllhQBVW35cvlHLM9y52cdzVeFd1vQqhdCs8sHHspycR5_9sh3_YP7NZLliO0CQJFL7p_Gwlqk3CUL0pksgue2UsCrWYA5GwD2Pv33PR8aERQqD7JLmVWL5nvQ6rPxRJXmLw5huo0NDye0gGukJ_YI9wyPKlj-p9CFPyCaIkb7uNjfXPHz0jSoL623cmq-gtjO926dDL0SL7tLpu0PMRAtMQPlaiOpaZ10imHPa2FuK-s4HaC5VpDbSXyzeTyyBqpv1e7yYoyCOEZYHkQcpL7p8E7AaALt6RWOCHLvwZH6ltzUbRkspQ2FQkAo3fjsLv0llrw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SignUp" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;testxmpp${counter_var}@yopmail.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;
  }
},&quot;query&quot;:&quot;mutation SignUp($signupInput: SignupInput) {\n  signUp(signupInput: $signupInput) {\n    userId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.qa.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SignUp($signupInput: SignupInput) {
  signUp(signupInput: $signupInput) {
    userId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;signupInput&quot;: {
    &quot;email&quot;: &quot;testxmpp${counter_var}@yopmail.com&quot;,
    &quot;firstname&quot;: &quot;test_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;lastname&quot;: &quot;account_${__time(yyMMddHHmmssSSS, cTime)}_${__Random(000,10000)}&quot;,
    &quot;password&quot;: &quot;QWRtaW5AMTIz&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjc0NjQ1MjM2LCJleHAiOjE2NzcyMzcyMzYsInBybSI6IjM1ZmMyY2EzZTdlZTEzNTk2MjUwZjdhZGYwMTExNzQ5IiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjZiYWY1OTJjLTJiZmEtNGQ5YS1hOTc2LTlmYzBhYjZmNGI4NyJ9.lyGnJ89qzpKaVbsHa0rz8U4unwDUN--SerU9erZQfUGNSlhEqnDVzrg5U5Mw3XPho6HGVFv_RX3pfixNT_OXQvVz7sQfBXyjKRz51FrQ8knOiF4Rupn8p1ckzq3RIY5K0RP1eMvcsONrwdRYaj8HyYCEvtxEAOKoXmHBwlv0D9WUEIxozaC_PmVxJeoR_qH8VRZqE5RgH6TI_eYWUimrn-LNItaMHM9PNBajiZwiqAGMwi7TWLElJNUyPK25j2WvrT1AHSV4uYy0HuKBZlsYb-EMayOnT3BsKr5jUq4RS4slDm9o8zVS8DtqJ2i93g6UUAiPK6IGL1MxFhqGNX-MQQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="BlockUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation BlockUser{\n  blockUser(\n  \tuserAction: {\n  \t\tuserId: ${id},\n  \t\tblockedUserId: 55074,\n  \t\ttype: Block\n  \t}) {\n    userId\n    blockedUserId\n    type\n    reason\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation BlockUser{
  blockUser(
  	userAction: {
  		userId: ${id},
  		blockedUserId: 55074,
  		type: Block
  	}) {
    userId
    blockedUserId
    type
    reason
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UnblockUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userAction&quot;: {
    &quot;userId&quot;: 5,
    &quot;blockedUserId&quot;: 6,
    &quot;type&quot;: &quot;Block&quot;
  }
},&quot;query&quot;:&quot;mutation UnblockUser{\n  unblockUser(\n  \tuserAction: {\n  \t\tuserId: ${id},\n  \t\tblockedUserId: 55074,\n  \t\ttype: Block\n  \t})\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UnblockUser{
  unblockUser(
  	userAction: {
  		userId: ${id},
  		blockedUserId: 55074,
  		type: Block
  	})
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userAction&quot;: {
    &quot;userId&quot;: 5,
    &quot;blockedUserId&quot;: 6,
    &quot;type&quot;: &quot;Block&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddSearchAppearance" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
	&quot;fromId&quot;: 5,
  	&quot;toUserId&quot;: 6
},&quot;query&quot;:&quot;mutation AddSearchAppearance {\n  addSearchAppearance(fromId: 50075, toUserId: 50076) {\n    fromUserId\n    toUserId\n    searchDate\n    fromUser {\n      firstname\n      id\n      lastname\n      email\n      username\n    }\n    toUser {\n      id\n      firstname\n      lastname\n      username\n      email\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddSearchAppearance {
  addSearchAppearance(fromId: 50075, toUserId: 50076) {
    fromUserId
    toUserId
    searchDate
    fromUser {
      firstname
      id
      lastname
      email
      username
    }
    toUser {
      id
      firstname
      lastname
      username
      email
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
	&quot;fromId&quot;: 5,
  	&quot;toUserId&quot;: 6
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddUserOffers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddUserOffers {\n  addUserOffers(\n  \tuserOffer: {\n    \t\tuserId: ${id},\n    \t\tdescription: \&quot;testing\&quot;,\n    \t\tinstitutionId: 18738\n  }) {\n    id\n    userId\n    description\n    user {\n      firstname\n      lastname\n      username\n      email\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddUserOffers {
  addUserOffers(
  	userOffer: {
    		userId: ${id},
    		description: &quot;testing&quot;,
    		institutionId: 18738
  }) {
    id
    userId
    description
    user {
      firstname
      lastname
      username
      email
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserOffers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation UpdateUserOffers{\n  updateUserOffers(\n  \tuserOffer: {\n  \t\tuserId: ${id},\n    \t\tinstitutionId: 18738,\n    \t\tid: 6\n  }) {\n    userId\n    user {\n      firstname\n      lastname\n      email\n      username\n      id\n    }\n    description\n    institutionId\n    institution {\n      name\n      address\n      id\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserOffers{
  updateUserOffers(
  	userOffer: {
  		userId: ${id},
    		institutionId: 18738,
    		id: 6
  }) {
    userId
    user {
      firstname
      lastname
      email
      username
      id
    }
    description
    institutionId
    institution {
      name
      address
      id
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="ReorderUserOffer" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userOffer&quot;: [
    {
      &quot;userId&quot;: 9004,
      &quot;description&quot;: &quot;testing&quot;,
      &quot;institutionId&quot;: 18738,
      &quot;id&quot;: 6
    }
  ]
},&quot;query&quot;:&quot;mutation ReorderUserOffer($userOffer: [UserOfferInput]) {\n  reorderUserOffer(userOffer: $userOffer)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation ReorderUserOffer($userOffer: [UserOfferInput]) {
  reorderUserOffer(userOffer: $userOffer)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userOffer&quot;: [
    {
      &quot;userId&quot;: 9004,
      &quot;description&quot;: &quot;testing&quot;,
      &quot;institutionId&quot;: 18738,
      &quot;id&quot;: 6
    }
  ]
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserOffers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;offerId&quot;: 6
},&quot;query&quot;:&quot;mutation DeleteUserOffers($offerId: Int!) {\n  deleteUserOffers(offerId: $offerId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserOffers($offerId: Int!) {
  deleteUserOffers(offerId: $offerId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;offerId&quot;: 6
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="GetUserByUsername" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GetUserByUsername{\n  getUserByUsername(username: \&quot;test_221220211814954_5066.account_221220211814955_6903.9434\&quot;) {\n    firstname\n    id\n    lastname\n    username\n    email\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query GetUserByUsername{
  getUserByUsername(username: &quot;test_221220211814954_5066.account_221220211814955_6903.9434&quot;) {
    firstname
    id
    lastname
    username
    email
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddLike" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddLike {\n  addLike(\n  \tcontentLikeArgs: {\n  \t\tcontentUserId: ${contentid},\n  \t\tid: ${id},\n    \t\tlikedBy: ${user_id}\n  })\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddLike {
  addLike(
  	contentLikeArgs: {
  		contentUserId: ${contentid},
  		id: ${id},
    		likedBy: ${user_id}
  })
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddLike" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddLike {\n  addLike(\n  \tcontentLikeArgs: {\n  \t\tcontentUserId: ${id},\n  \t\tid: ${contentid},\n    \t\tlikedBy: ${user_id}\n  })\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddLike {
  addLike(
  	contentLikeArgs: {
  		contentUserId: ${id},
  		id: ${contentid},
    		likedBy: ${user_id}
  })
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserData" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userInput&quot;: {
    &quot;id&quot;: 5,
    &quot;bio&quot;: &quot;test1&quot;
  }
},&quot;query&quot;:&quot;mutation UpdateUserData{\n  updateUserData(\n  \tuserInput: {\n  \t\tid: ${id},\n    \t\tbio: \&quot;test1\&quot;\n\t}) {\n\t\tid\n    \t\tfirstname\n    \t\tlastname\n    \t\tusername\n    \t\temail\n    \t\tprovider\n    \t\tgender\n  \t}\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserData{
  updateUserData(
  	userInput: {
  		id: ${id},
    		bio: &quot;test1&quot;
	}) {
		id
    		firstname
    		lastname
    		username
    		email
    		provider
    		gender
  	}
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userInput&quot;: {
    &quot;id&quot;: 5,
    &quot;bio&quot;: &quot;test1&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SendConfirmationEmail" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{  
  &quot;email&quot;: &quot;stresstestcore221220211819361_5978@getnada.com&quot;,
  &quot;sendConfirmationEmailId&quot;: 253437
},&quot;query&quot;:&quot;mutation SendConfirmationEmail($email: String!, $sendConfirmationEmailId: Int!) {\n  sendConfirmationEmail(email: $email, id: $sendConfirmationEmailId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SendConfirmationEmail($email: String!, $sendConfirmationEmailId: Int!) {
  sendConfirmationEmail(email: $email, id: $sendConfirmationEmailId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{  
  &quot;email&quot;: &quot;stresstestcore221220211819361_5978@getnada.com&quot;,
  &quot;sendConfirmationEmailId&quot;: 253437
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="VerifyOldPassword" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation VerifyOldPassword {\n  verifyOldPassword(id: ${id}, password: \&quot;QWRtaW5AMTIz\&quot;)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation VerifyOldPassword {
  verifyOldPassword(id: ${id}, password: &quot;QWRtaW5AMTIz&quot;)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CreateUserActivityTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivityTeamInput&quot;: {
    &quot;name&quot;: &quot;Team bad&quot;,
    &quot;institutionId&quot;: 2,
    &quot;institutionName&quot;: &quot;Dimond High School&quot;,
    &quot;city&quot;: &quot;Anchorage&quot;,
    &quot;state&quot;: &quot;AK&quot;,
    &quot;userId&quot;: 5,
    &quot;season&quot;: &quot;2022&quot;,
    &quot;activityId&quot;: 41
  }
},&quot;query&quot;:&quot;mutation CreateUserActivityTeam {\n  createUserActivityTeam(\n  \tuserActivityTeamInput: {\n  \t\tname: \&quot;Team bad\&quot;,\n    \t\tinstitutionId: 1,\n    \t\tinstitutionName: \&quot;Dimond High School\&quot;,\n    \t\tcity: \&quot;Anchorage\&quot;,\n    \t\tstate: \&quot;AK\&quot;,\n    \t\tuserId: ${id},\n    \t\tseason: \&quot;2022\&quot;,\n    \t\tactivityId: 41\n\t}\n  \t) {\n    id\n    name\n    institutionId\n    institutionName\n    city\n    state\n    season\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CreateUserActivityTeam {
  createUserActivityTeam(
  	userActivityTeamInput: {
  		name: &quot;Team bad&quot;,
    		institutionId: 1,
    		institutionName: &quot;Dimond High School&quot;,
    		city: &quot;Anchorage&quot;,
    		state: &quot;AK&quot;,
    		userId: ${id},
    		season: &quot;2022&quot;,
    		activityId: 41
	}
  	) {
    id
    name
    institutionId
    institutionName
    city
    state
    season
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivityTeamInput&quot;: {
    &quot;name&quot;: &quot;Team bad&quot;,
    &quot;institutionId&quot;: 2,
    &quot;institutionName&quot;: &quot;Dimond High School&quot;,
    &quot;city&quot;: &quot;Anchorage&quot;,
    &quot;state&quot;: &quot;AK&quot;,
    &quot;userId&quot;: 5,
    &quot;season&quot;: &quot;2022&quot;,
    &quot;activityId&quot;: 41
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditUserActivityTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivityTeamId&quot;: 13,
  &quot;userActivityTeamInput&quot;: {
    &quot;name&quot;: &quot;Team Mad&quot;,
    &quot;institutionId&quot;: 1,
    &quot;institutionName&quot;: &quot;Dimond High School&quot;,
    &quot;city&quot;: &quot;Anchorage&quot;,
    &quot;state&quot;: &quot;AK&quot;,
    &quot;season&quot;: &quot;2022&quot;,
    &quot;activityId&quot;: 41,
    &quot;userId&quot;: 9004
  }
},&quot;query&quot;:&quot;mutation EditUserActivityTeam($userActivityTeamId: Int!, $userActivityTeamInput: UserActivityTeamInput) {\n  editUserActivityTeam(userActivityTeamId: $userActivityTeamId, userActivityTeamInput: $userActivityTeamInput) {\n    id\n    name\n    institutionId\n    userId\n    createdAt\n    updatedAt\n    city\n    state\n    season\n    institutionName\n    institution {\n      id\n      name\n      address\n      address1\n      city\n      state\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditUserActivityTeam($userActivityTeamId: Int!, $userActivityTeamInput: UserActivityTeamInput) {
  editUserActivityTeam(userActivityTeamId: $userActivityTeamId, userActivityTeamInput: $userActivityTeamInput) {
    id
    name
    institutionId
    userId
    createdAt
    updatedAt
    city
    state
    season
    institutionName
    institution {
      id
      name
      address
      address1
      city
      state
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivityTeamId&quot;: 13,
  &quot;userActivityTeamInput&quot;: {
    &quot;name&quot;: &quot;Team Mad&quot;,
    &quot;institutionId&quot;: 1,
    &quot;institutionName&quot;: &quot;Dimond High School&quot;,
    &quot;city&quot;: &quot;Anchorage&quot;,
    &quot;state&quot;: &quot;AK&quot;,
    &quot;season&quot;: &quot;2022&quot;,
    &quot;activityId&quot;: 41,
    &quot;userId&quot;: 9004
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SaveUserActivitySeason" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivitySeason&quot;: {
    &quot;userActivityId&quot;: 215,
    &quot;team&quot;: &quot;updated season name&quot;,
    &quot;season&quot;: &quot;Updated Season name&quot;,
    &quot;attributeValues&quot;: [
      {
        &quot;id&quot;: 3037,
        &quot;name&quot;: &quot;height&quot;,
        &quot;type&quot;: &quot;Picker&quot;,
        &quot;value&quot;: &quot;1.00000&quot;,
        &quot;dbUnit&quot;: &quot;mm&quot;,
        &quot;userUnit&quot;: &quot;ft in&quot;,
        &quot;userValue&quot;: &quot;1 0&quot;,
        &quot;displayValue&quot;: &quot;1 ft 0 in&quot;
      }
    ]
  },
  &quot;seasonId&quot;: 3
},&quot;query&quot;:&quot;mutation SaveUserActivitySeason($userActivitySeason: UserActivitySeasonInput!) {\n  saveUserActivitySeason(userActivitySeason: $userActivitySeason) {\n    id\n    userActivityId\n    userActivity {\n      id\n      userId\n      user {\n        id\n        firstname\n        lastname\n        username\n        email\n      }\n      activityId\n    }\n    team\n    season\n    createdAt\n    updatedAt\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SaveUserActivitySeason($userActivitySeason: UserActivitySeasonInput!) {
  saveUserActivitySeason(userActivitySeason: $userActivitySeason) {
    id
    userActivityId
    userActivity {
      id
      userId
      user {
        id
        firstname
        lastname
        username
        email
      }
      activityId
    }
    team
    season
    createdAt
    updatedAt
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivitySeason&quot;: {
    &quot;userActivityId&quot;: 215,
    &quot;team&quot;: &quot;updated season name&quot;,
    &quot;season&quot;: &quot;Updated Season name&quot;,
    &quot;attributeValues&quot;: [
      {
        &quot;id&quot;: 3037,
        &quot;name&quot;: &quot;height&quot;,
        &quot;type&quot;: &quot;Picker&quot;,
        &quot;value&quot;: &quot;1.00000&quot;,
        &quot;dbUnit&quot;: &quot;mm&quot;,
        &quot;userUnit&quot;: &quot;ft in&quot;,
        &quot;userValue&quot;: &quot;1 0&quot;,
        &quot;displayValue&quot;: &quot;1 ft 0 in&quot;
      }
    ]
  },
  &quot;seasonId&quot;: 3
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserAchievement" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userAchievement&quot;: [
    {
      &quot;id&quot;: 215,
      &quot;userId&quot;: 57009,
      &quot;achievement&quot;: &quot;Cricket&quot;,
      &quot;team&quot;: &quot;Cricket&quot;
    }
  ]
},&quot;query&quot;:&quot;mutation UpdateUserAchievement($userAchievement: [UserAchievementInput]) {\n  updateUserAchievement(userAchievement: $userAchievement)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserAchievement($userAchievement: [UserAchievementInput]) {
  updateUserAchievement(userAchievement: $userAchievement)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userAchievement&quot;: [
    {
      &quot;id&quot;: 215,
      &quot;userId&quot;: 57009,
      &quot;achievement&quot;: &quot;Cricket&quot;,
      &quot;team&quot;: &quot;Cricket&quot;
    }
  ]
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateUserActivitySeason" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivitySeason&quot;: {
    &quot;userActivityId&quot;: 215,
    &quot;team&quot;: &quot;updated season name&quot;,
    &quot;season&quot;: &quot;Updated Season name&quot;,
    &quot;attributeValues&quot;: [
      {
        &quot;id&quot;: 3037,
        &quot;name&quot;: &quot;height&quot;,
        &quot;type&quot;: &quot;Picker&quot;,
        &quot;value&quot;: &quot;1.00000&quot;,
        &quot;dbUnit&quot;: &quot;mm&quot;,
        &quot;userUnit&quot;: &quot;ft in&quot;,
        &quot;userValue&quot;: &quot;1 0&quot;,
        &quot;displayValue&quot;: &quot;1 ft 0 in&quot;
      }
    ]
  },
  &quot;seasonId&quot;: 9
},&quot;query&quot;:&quot;mutation UpdateUserActivitySeason($userActivitySeason: UserActivitySeasonInput!, $seasonId: Int) {\n  updateUserActivitySeason(userActivitySeason: $userActivitySeason, seasonId: $seasonId) {\n    id\n    userActivityId\n    team\n    season\n    createdAt\n    updatedAt\n    userActivity {\n      id\n      userId\n      activityId\n      preferenceActivity {\n        id\n        name\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateUserActivitySeason($userActivitySeason: UserActivitySeasonInput!, $seasonId: Int) {
  updateUserActivitySeason(userActivitySeason: $userActivitySeason, seasonId: $seasonId) {
    id
    userActivityId
    team
    season
    createdAt
    updatedAt
    userActivity {
      id
      userId
      activityId
      preferenceActivity {
        id
        name
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivitySeason&quot;: {
    &quot;userActivityId&quot;: 215,
    &quot;team&quot;: &quot;updated season name&quot;,
    &quot;season&quot;: &quot;Updated Season name&quot;,
    &quot;attributeValues&quot;: [
      {
        &quot;id&quot;: 3037,
        &quot;name&quot;: &quot;height&quot;,
        &quot;type&quot;: &quot;Picker&quot;,
        &quot;value&quot;: &quot;1.00000&quot;,
        &quot;dbUnit&quot;: &quot;mm&quot;,
        &quot;userUnit&quot;: &quot;ft in&quot;,
        &quot;userValue&quot;: &quot;1 0&quot;,
        &quot;displayValue&quot;: &quot;1 ft 0 in&quot;
      }
    ]
  },
  &quot;seasonId&quot;: 9
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserActivitySeason" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;seasonId&quot;: 9
},&quot;query&quot;:&quot;mutation DeleteUserActivitySeason($seasonId: Int!) {\n  deleteUserActivitySeason(seasonId: $seasonId) {\n    id\n    userActivityId\n    userActivity {\n      id\n      userId\n      user {\n        id\n        firstname\n        lastname\n        username\n        email\n        profileImage\n      }\n      activityId\n      createdAt\n      updatedAt\n      userActivitySeasonAttributes {\n        id\n        userActivityId\n        team\n        season\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserActivitySeason($seasonId: Int!) {
  deleteUserActivitySeason(seasonId: $seasonId) {
    id
    userActivityId
    userActivity {
      id
      userId
      user {
        id
        firstname
        lastname
        username
        email
        profileImage
      }
      activityId
      createdAt
      updatedAt
      userActivitySeasonAttributes {
        id
        userActivityId
        team
        season
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;seasonId&quot;: 9
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserActivityTeam" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivityTeamId&quot;: 13
},&quot;query&quot;:&quot;mutation DeleteUserActivityTeam($userActivityTeamId: Int!) {\n  deleteUserActivityTeam(userActivityTeamId: $userActivityTeamId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserActivityTeam($userActivityTeamId: Int!) {
  deleteUserActivityTeam(userActivityTeamId: $userActivityTeamId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivityTeamId&quot;: 13
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteActivityBackground" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;userActivityId&quot;: 7
},&quot;query&quot;:&quot;mutation DeleteActivityBackground($userActivityId: Int!) {\n  deleteActivityBackground(userActivityId: $userActivityId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteActivityBackground($userActivityId: Int!) {
  deleteActivityBackground(userActivityId: $userActivityId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;userActivityId&quot;: 7
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteUserAchievement" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;achievementId&quot;: 3
},&quot;query&quot;:&quot;mutation DeleteUserAchievement($achievementId: Int!) {\n  deleteUserAchievement(achievementId: $achievementId) {\n    id\n    userId\n    achievement\n    team\n    position\n    date\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteUserAchievement($achievementId: Int!) {
  deleteUserAchievement(achievementId: $achievementId) {
    id
    userId
    achievement
    team
    position
    date
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;achievementId&quot;: 3
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CheckAppVersion" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;appVersion&quot;: &quot;1.27.0&quot;
},&quot;query&quot;:&quot;query CheckAppVersion($appVersion: String) {\n  checkAppVersion(appVersion: $appVersion) {\n    id\n    androidVersion\n    androidForceUpdate\n    iosVersion\n    iosForceUpdate\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query CheckAppVersion($appVersion: String) {
  checkAppVersion(appVersion: $appVersion) {
    id
    androidVersion
    androidForceUpdate
    iosVersion
    iosForceUpdate
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;appVersion&quot;: &quot;1.27.0&quot;
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteAccount" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;deleteAccountId&quot;: 49999
},&quot;query&quot;:&quot;mutation DeleteAccount($deleteAccountId: Int!) {\n  deleteAccount(id: $deleteAccountId) {\n    id\n    firstname\n    lastname\n    username\n    email\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteAccount($deleteAccountId: Int!) {
  deleteAccount(id: $deleteAccountId) {
    id
    firstname
    lastname
    username
    email
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;deleteAccountId&quot;: 49999
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="MarkNotificationAsRead" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;notificationId&quot;: 4
},&quot;query&quot;:&quot;mutation MarkNotificationAsRead($notificationId: Int!) {\n  markNotificationAsRead(notificationId: $notificationId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation MarkNotificationAsRead($notificationId: Int!) {
  markNotificationAsRead(notificationId: $notificationId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;notificationId&quot;: 4
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="MarkAllNotificationAsRead" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;notificationId&quot;: 4
},&quot;query&quot;:&quot;mutation MarkAllNotificationAsRead($userId: Int!) {\n  markAllNotificationAsRead(userId: $userId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation MarkAllNotificationAsRead($userId: Int!) {
  markAllNotificationAsRead(userId: $userId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;notificationId&quot;: 4
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateNotification" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;notificationInput&quot;: {
    &quot;notificationBadge&quot;: true,
    &quot;userId&quot;: 5,
    &quot;id&quot;: 4,
    &quot;advanceNotification&quot;: {
        &quot;youDonotFollow&quot;: false,
        &quot;withANewAccount&quot;: false,
        &quot;whoDoNotFollowYou&quot;: false,
        &quot;whoHaveDefaultProfilePhoto&quot;: false
      },
    &quot;pushNotifications&quot;: {
        &quot;tags&quot;: true,
        &quot;likes&quot;: true,
        &quot;comments&quot;: true,
        &quot;mentions&quot;: true,
        &quot;groupMessage&quot;: true,
        &quot;newFollowers&quot;: true,
        &quot;directMessage&quot;: true,
        &quot;contentSuggestions&quot;: true,
        &quot;newConnectionRequest&quot;: true,
        &quot;contentFromYouConnection&quot;: true,
        &quot;contentFromAccountsYouFollow&quot;: true
      },
    &quot;emailSetting&quot;: {
        &quot;mentions&quot;: false,
        &quot;groupMessage&quot;: false,
        &quot;directMessage&quot;: false,
        &quot;newsAboutNxlvl&quot;: false
      }
  }
},&quot;query&quot;:&quot;mutation UpdateNotification($notificationInput: NotificationInput) {\n  updateNotification(notificationInput: $notificationInput) {\n    notificationBadge\n    advanceNotification\n    userId\n    pushNotifications\n    emailSetting\n    id\n    mutedWords\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateNotification($notificationInput: NotificationInput) {
  updateNotification(notificationInput: $notificationInput) {
    notificationBadge
    advanceNotification
    userId
    pushNotifications
    emailSetting
    id
    mutedWords
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;notificationInput&quot;: {
    &quot;notificationBadge&quot;: true,
    &quot;userId&quot;: 5,
    &quot;id&quot;: 4,
    &quot;advanceNotification&quot;: {
        &quot;youDonotFollow&quot;: false,
        &quot;withANewAccount&quot;: false,
        &quot;whoDoNotFollowYou&quot;: false,
        &quot;whoHaveDefaultProfilePhoto&quot;: false
      },
    &quot;pushNotifications&quot;: {
        &quot;tags&quot;: true,
        &quot;likes&quot;: true,
        &quot;comments&quot;: true,
        &quot;mentions&quot;: true,
        &quot;groupMessage&quot;: true,
        &quot;newFollowers&quot;: true,
        &quot;directMessage&quot;: true,
        &quot;contentSuggestions&quot;: true,
        &quot;newConnectionRequest&quot;: true,
        &quot;contentFromYouConnection&quot;: true,
        &quot;contentFromAccountsYouFollow&quot;: true
      },
    &quot;emailSetting&quot;: {
        &quot;mentions&quot;: false,
        &quot;groupMessage&quot;: false,
        &quot;directMessage&quot;: false,
        &quot;newsAboutNxlvl&quot;: false
      }
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SearchContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SearchContent{\n  searchContent(\n\t  searchContentArgs: {\n\t  \tuserId: ${id},\n    \t\tsearchString: \&quot;stress\&quot;\n  }\n  \t){\n    pageEdges {\n      node {\n        id\n        contentThumbnail\n        contentType\n        description\n        likeCount\n      }\n    }\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SearchContent{
  searchContent(
	  searchContentArgs: {
	  	userId: ${id},
    		searchString: &quot;stress&quot;
  }
  	){
    pageEdges {
      node {
        id
        contentThumbnail
        contentType
        description
        likeCount
      }
    }
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;updateContentId&quot;: 9,
  &quot;contentArgs&quot;: {
    &quot;userId&quot;: 9004,
    &quot;visibility&quot;: &quot;Public&quot;,
    &quot;description&quot;: &quot;Testing&quot;,
    &quot;contentType&quot;: &quot;Text&quot;
  }
},&quot;query&quot;:&quot;mutation UpdateContent($updateContentId: Int!, $contentArgs: ContentArgs!) {\n  updateContent(id: $updateContentId, contentArgs: $contentArgs)  {\n    id\n    contentType\n    userId\n    contentData\n    description\n    likeCount\n    updatedAt\n    createdAt\n    commentCount\n    visibility\n    isPublished\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateContent($updateContentId: Int!, $contentArgs: ContentArgs!) {
  updateContent(id: $updateContentId, contentArgs: $contentArgs)  {
    id
    contentType
    userId
    contentData
    description
    likeCount
    updatedAt
    createdAt
    commentCount
    visibility
    isPublished
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;updateContentId&quot;: 9,
  &quot;contentArgs&quot;: {
    &quot;userId&quot;: 9004,
    &quot;visibility&quot;: &quot;Public&quot;,
    &quot;description&quot;: &quot;Testing&quot;,
    &quot;contentType&quot;: &quot;Text&quot;
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteContent" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;deleteContentId&quot;: 1987
},&quot;query&quot;:&quot;mutation DeleteContent($deleteContentId: Int!) {\n  deleteContent(id: $deleteContentId)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteContent($deleteContentId: Int!) {
  deleteContent(id: $deleteContentId)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;deleteContentId&quot;: 1987
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddComment" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddComment{\n  addComment(\n  \tcontentCommentArgs: {\n    \t\tcontentId: 892727,\n    \t\tcommentText: \&quot;api test 3April\&quot;,\n    \t\tcommentedBy: ${user_id},\n    \t\tid: 68852\n  \t}\n  \t) {\n    id\n    commentText\n    commentedBy\n    commenter {\n      id\n      firstname\n      lastname\n      username\n      email\n    }\n    }\n  }&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddComment{
  addComment(
  	contentCommentArgs: {
    		contentId: 892727,
    		commentText: &quot;api test 3April&quot;,
    		commentedBy: ${user_id},
    		id: 68852
  	}
  	) {
    id
    commentText
    commentedBy
    commenter {
      id
      firstname
      lastname
      username
      email
    }
    }
  }
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="EditComment" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation EditComment{\n  editComment(\n\t  contentCommentArgs: {\n    \t\tcontentId: 72911,\n    \t\tcommentText: \&quot;testing\&quot;,\n    \t\tcommentedBy: ${id},\n    \t\tid: 72911\n}\n  \t) {\n    id\n    commentText\n    commentedBy\n    commenter {\n      id\n      firstname\n      lastname\n      username\n      email\n    }\n    likeCount\n    contentId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation EditComment{
  editComment(
	  contentCommentArgs: {
    		contentId: 72911,
    		commentText: &quot;testing&quot;,
    		commentedBy: ${id},
    		id: 72911
}
  	) {
    id
    commentText
    commentedBy
    commenter {
      id
      firstname
      lastname
      username
      email
    }
    likeCount
    contentId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteComment" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteComment{\n  deleteComment(\n  \tcommentId: 388051\n  \t)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteComment{
  deleteComment(
  	commentId: 388051
  	)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteLike" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
	&quot;likedBy&quot;: 180,
  	&quot;contentId&quot;: 1987,
  	&quot;contentUserId&quot;: 1987
},&quot;query&quot;:&quot;mutation DeleteLike{\n  deleteLike(likedBy: 68852, contentId: 72862, contentUserId: 72862)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteLike{
  deleteLike(likedBy: 68852, contentId: 72862, contentUserId: 72862)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
	&quot;likedBy&quot;: 180,
  	&quot;contentId&quot;: 1987,
  	&quot;contentUserId&quot;: 1987
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddTags" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddTags {\n  addTags(\n  \tnames: \&quot;Badminton\&quot;\n  ) {\n    id\n    name\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddTags {
  addTags(
  	names: &quot;Badminton&quot;
  ) {
    id
    name
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteCommentLike" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteCommentLike {\n  deleteCommentLike(\n  \tlikedBy: 50075,\n  \tcommentId: 388046\n  \t)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteCommentLike {
  deleteCommentLike(
  	likedBy: 50075,
  	commentId: 388046
  	)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CreateContentDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation CreateContentDraft {\n  createContentDraft(\n  \tcontentArgs: {\n  \t\tuserId: ${id},\n    \t\tcontentType: Text,\n    \t\tdescription: \&quot;Draft content\&quot;,\n    \t\tvisibility: Public\n\t}\n  \t) {\n    contentId\n    signedUrl\n    videoThumbnailURL\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CreateContentDraft {
  createContentDraft(
  	contentArgs: {
  		userId: ${id},
    		contentType: Text,
    		description: &quot;Draft content&quot;,
    		visibility: Public
	}
  	) {
    contentId
    signedUrl
    videoThumbnailURL
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UpdateContentDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
	&quot;contentArgs&quot;: {
	 	&quot;userId&quot;: 68852,
    		&quot;contentType&quot;: &quot;Text&quot;,
    		&quot;description&quot;: &quot;content testing 1&quot;,
    		&quot;visibility&quot;: &quot;Public&quot;
  	},
  	&quot;updateContentDraftId&quot;: 5
},&quot;query&quot;:&quot;mutation UpdateContentDraft($updateContentDraftId: Int!, $contentArgs: ContentArgs!) {\n  updateContentDraft(id: $updateContentDraftId, contentArgs: $contentArgs) {\n    id\n    contentType\n    userId\n    imageURL\n    contentData\n    createdAt\n    updatedAt\n    visibility\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UpdateContentDraft($updateContentDraftId: Int!, $contentArgs: ContentArgs!) {
  updateContentDraft(id: $updateContentDraftId, contentArgs: $contentArgs) {
    id
    contentType
    userId
    imageURL
    contentData
    createdAt
    updatedAt
    visibility
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
	&quot;contentArgs&quot;: {
	 	&quot;userId&quot;: 68852,
    		&quot;contentType&quot;: &quot;Text&quot;,
    		&quot;description&quot;: &quot;content testing 1&quot;,
    		&quot;visibility&quot;: &quot;Public&quot;
  	},
  	&quot;updateContentDraftId&quot;: 5
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="CreateContentFromDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation CreateContentFromDraft {\n  createContentFromDraft(\n \t draftId: 4\n  \t) {\n    contentId\n    signedUrl\n    videoThumbnailURL\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation CreateContentFromDraft {
  createContentFromDraft(
 	 draftId: 4
  	) {
    contentId
    signedUrl
    videoThumbnailURL
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="DeleteContentDraft" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation DeleteContentDraft {\n  deleteContentDraft(id: 8)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation DeleteContentDraft {
  deleteContentDraft(id: 8)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UploadChatImage" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;chatImageInput&quot;: {
    &quot;request&quot;: [
      {
        &quot;uploadImage&quot;: &quot;${originalImage}&quot;,
        &quot;galleryImageUrl&quot;: &quot;${croppedImage}&quot;,
        &quot;id&quot;: null
      }
    ]
  }
},&quot;query&quot;:&quot;mutation UploadChatImage($chatImageInput: ChatImageInput) {\n  uploadChatImage(chatImageInput: $chatImageInput) {\n    imageURL\n    id\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UploadChatImage($chatImageInput: ChatImageInput) {
  uploadChatImage(chatImageInput: $chatImageInput) {
    imageURL
    id
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;chatImageInput&quot;: {
    &quot;request&quot;: [
      {
        &quot;uploadImage&quot;: &quot;${originalImage}&quot;,
        &quot;galleryImageUrl&quot;: &quot;${croppedImage}&quot;,
        &quot;id&quot;: null
      }
    ]
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="UploadChatVideo" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;chatVideoInput&quot;: {
    &quot;request&quot;: [
      {
        &quot;thumbnail&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;,
        &quot;extension&quot;: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;
      }
    ]
  }
},&quot;query&quot;:&quot;mutation UploadChatVideo($chatVideoInput: ChatVideoInput) {\n  uploadChatVideo(chatVideoInput: $chatVideoInput) {\n    thumbnailURL\n    SASUrl\n    videoURL\n    videoData\n    isPublished\n    videoId\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation UploadChatVideo($chatVideoInput: ChatVideoInput) {
  uploadChatVideo(chatVideoInput: $chatVideoInput) {
    thumbnailURL
    SASUrl
    videoURL
    videoData
    isPublished
    videoId
  }
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;chatVideoInput&quot;: {
    &quot;request&quot;: [
      {
        &quot;thumbnail&quot;: &quot;og1B0283AhKo01z4Rdkyt9CfkzFY56P6kVLe949TMA00yM&quot;,
        &quot;extension&quot;: &quot;r3rkZ9Oag8flc02ZpOV3H12mdEBykQ38QccE9XOY9ljc&quot;
      }
    ]
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="MarkChatVideoPublished" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{
  &quot;getChatVideosInput&quot;: {
    &quot;videoIds&quot;: 21
  }
},&quot;query&quot;:&quot;mutation MarkChatVideoPublished($getChatVideosInput: GetChatVideosInput) {\n  markChatVideoPublished(getChatVideosInput: $getChatVideosInput)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation MarkChatVideoPublished($getChatVideosInput: GetChatVideosInput) {
  markChatVideoPublished(getChatVideosInput: $getChatVideosInput)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{
  &quot;getChatVideosInput&quot;: {
    &quot;videoIds&quot;: 21
  }
}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SetActivityThumbnail" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation SetActivityThumbnail{\n  setActivityThumbnail(\n\tuserId: ${id},\n  \tactivityId: 41,\n  \tcontentId: 121362\n  \t)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SetActivityThumbnail{
  setActivityThumbnail(
	userId: ${id},
  	activityId: 41,
  	contentId: 121362
  	)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="SetFeatureThumbnail" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation SetFeatureThumbnail{\n  setFeatureThumbnail(\n\tuserId: ${id},\n  \tfeatureId: 51,\n  \tcontentId: 121362\n  \t)\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation SetFeatureThumbnail{
  setFeatureThumbnail(
	userId: ${id},
  	featureId: 51,
  	contentId: 121362
  	)
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjY4ODUyLCJwZXJtIjoiIiwiaWF0IjoxNjczNTA0NTY2LCJleHAiOjE2NzYwOTY1NjYsInBybSI6ImUxOWVhODBkOGNjMjJmZGRhNWUwMDMwMzYxY2RmY2QxIiwiamlkIjoiY2xidzMyOXM0MDAwMHkxMGw2cjVxeTVld0Bsb2NhbGhvc3QiLCJtaW0iOiJjbGJ3MzI5czQwMDAweTEwbDZyNXF5NWV3IiwidWtleSI6ImE3ZjVmZjhmLTZmNDMtNDRjMC1hZGQwLTFmMDMzYjg5NGMwZCIsImNsaWVudCI6IiIsImp0aSI6IjFmZTllY2EwLTA5MzMtNGNhMC1iMjBiLTY2NGRlNGQzZWFlNiJ9.RHkZRWvVc1aFnmjGD-IfRxpzuVLjsKFgK_1cuUGfEf0Uf7r4GV8JSBd7ycgX5XKQuPvW_NiG5EOfwf2kiYHSZj4SKDCghW25BMgkgGUx5wyr4fcqkZ17hkcDR4LHMYxiKRjIYIUNkacRFOJraoPPGSBNazSgzUtQkVX1wNXZuB-z6hrN0ypBn99u2O9jr5fqiU_Way-qU7-gAd2KK8tisJb6DYTysaobkxlLRpdzzUWObT6uUceVU2jiibHybZwSAb6QeA3MqId9igQQvfwk0CarF1Krt7b-T7Td15nUgLj-pgFm83PnszmQiKFrZG53Ij9dQi1IMHcbmf6P99bnFQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-2067486429">
            <stringProp name="51">3</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2041291491">
            <stringProp name="51">3</stringProp>
            <stringProp name="50">2</stringProp>
            <stringProp name="50">2</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2040122915">
            <stringProp name="51">3</stringProp>
            <stringProp name="51">3</stringProp>
            <stringProp name="51">3</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2038954339">
            <stringProp name="51">3</stringProp>
            <stringProp name="52">4</stringProp>
            <stringProp name="52">4</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2037785763">
            <stringProp name="51">3</stringProp>
            <stringProp name="53">5</stringProp>
            <stringProp name="53">5</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2036617187">
            <stringProp name="51">3</stringProp>
            <stringProp name="54">6</stringProp>
            <stringProp name="54">6</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2035448611">
            <stringProp name="51">3</stringProp>
            <stringProp name="55">7</stringProp>
            <stringProp name="55">7</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
          <collectionProp name="-2034280035">
            <stringProp name="51">3</stringProp>
            <stringProp name="56">8</stringProp>
            <stringProp name="56">8</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set ConfigB" enabled="true">
          <stringProp name="filename">D:\NXLVL\CsvData\user-stress.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">id,email,username,contentid</stringProp>
          <boolProp name="randomOrder">false</boolProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="rewindOnTheEndOfList">true</boolProp>
          <boolProp name="independentListPerThread">false</boolProp>
        </com.blazemeter.jmeter.RandomCSVDataSetConfig>
        <hashTree/>
        <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
          <stringProp name="filename">D:\NXLVL\stress_userid.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">user_id</stringProp>
          <boolProp name="randomOrder">true</boolProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="rewindOnTheEndOfList">true</boolProp>
          <boolProp name="independentListPerThread">false</boolProp>
        </com.blazemeter.jmeter.RandomCSVDataSetConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="AddLike" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;mutation AddLike {\n  addLike(\n  \tcontentLikeArgs: {\n  \t\tcontentUserId: ${id},\n  \t\tid: ${contentid},\n    \t\tlikedBy: ${user_id}\n  })\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.stress.nxlvldev.app</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation AddLike {
  addLike(
  	contentLikeArgs: {
  		contentUserId: ${id},
  		id: ${contentid},
    		likedBy: ${user_id}
  })
}</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJ1aWQiOjExNzY4NSwicGVybSI6IiIsImlhdCI6MTY4MDA5NjIyMSwiZXhwIjoxNjgyNjg4MjIxLCJwcm0iOiJjMGM0MmRkMzRiZDZkZDI1ZTc5MTQ2NmRiOTFiZWMxMiIsImppZCI6ImNsYnc5ZW1nZDAwNHV5cjBsaW45N3k4czNAbG9jYWxob3N0IiwibWltIjoiY2xidzllbWdkMDA0dXlyMGxpbjk3eThzMyIsInVrZXkiOiI0NDBhZDIzYi0wNzcyLTQ3MGEtOGFiMi02YTc0ODQ2YmY3ZWMiLCJjbGllbnQiOiIiLCJqdGkiOiIzOTg5YmRjZi0zNmM2LTQ4NTctYTgxOC1hYzRlYjY5YTdlM2UifQ.JF_SFmccbCivNsmlGr3UCNdltcLw6XHC3pYb7j6LRqW20du1IPz6cki3UvSAu7meds_RIkpFdmS05XBYkGNQ-71SwpIgKua2upXN-fkksJYNBwJhZn0SBXTH8px_1rIhmTCwuMA29idHIMbCPmjEkeLnskZZp3abs-DSlfzXTgxIx5VTJs0mlJa9jV3LQm4Zo6zFWEERNBwK57Z3bY_9o8hTAviA76TYIZ2OF8zxRA8tOe_O2guYcZZH9XgKswU60PY5DYR9L35pl0GOHaObgJ3AUwSFanjSaW8-FnxqIij5M94pcG6vnAbII5P3XfCGwh02I7V9EDOMjcN3vF2daw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
