<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Dev_Nx_21Jul1" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">beacons.cloudmcapp.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">dev.nxconnect.me</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">bam.nr-data.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">cmcsports.cloudmcapp.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">o733402.ingest.sentry.io</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">ads.stickyadstv.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">targeting.unrulymedia.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">hb.minutemedia-prebid.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_9" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_9</stringProp>
            <stringProp name="Argument.value">ib.adnxs.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_10" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_10</stringProp>
            <stringProp name="Argument.value">prebid.a-mo.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_11" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_11</stringProp>
            <stringProp name="Argument.value">hb.yellowblue.io</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_12" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_12</stringProp>
            <stringProp name="Argument.value">prebid-server.rubiconproject.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_13" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_13</stringProp>
            <stringProp name="Argument.value">hbopenbid.pubmatic.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_14" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_14</stringProp>
            <stringProp name="Argument.value">prebid.media.net</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_15" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_15</stringProp>
            <stringProp name="Argument.value">api.gleap.io</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_16" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_16</stringProp>
            <stringProp name="Argument.value">pagead2.googlesyndication.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_17" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_17</stringProp>
            <stringProp name="Argument.value">09nfgyvbtl.execute-api.us-east-1.amazonaws.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_18" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_18</stringProp>
            <stringProp name="Argument.value">events.qortex.ai</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_19" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_19</stringProp>
            <stringProp name="Argument.value">api-js.mixpanel.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_20" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_20</stringProp>
            <stringProp name="Argument.value">go1.aniview.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_21" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_21</stringProp>
            <stringProp name="Argument.value">demand.qortex.ai</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_22" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_22</stringProp>
            <stringProp name="Argument.value">ads.resetsrv.com</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Data&quot;:{&quot;eventType&quot;:&quot;ContentVideoFirstQuartile&quot;,&quot;adServer&quot;:&quot;aniview&quot;,&quot;publisherId&quot;:1086,&quot;videoId&quot;:108008,&quot;contentProducerId&quot;:1006,&quot;deviceType&quot;:&quot;desktop&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;playlistId&quot;:1683813865,&quot;userAgent&quot;:&quot;Mozilla/5.0%20(Windows%20NT%2010.0;%20Win64;%20x64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/114.0.0.0%20Safari/537.36&quot;,&quot;timeStamp&quot;:1689922183891,&quot;sessionId&quot;:&quot;5v6oe3r7o&quot;,&quot;bidCpm&quot;:0,&quot;floorCpm&quot;:0,&quot;bidCode&quot;:&quot;&quot;,&quot;bidder&quot;:&quot;&quot;,&quot;playerWidth&quot;:250.8,&quot;playerHeight&quot;:141.20000000000002,&quot;error&quot;:&quot;&quot;},&quot;PartitionKey&quot;:1689922184}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dev.nxconnect.me/chris.chidgey.2155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">chris.chidgey.2155</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=233033&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;err&quot;:[{&quot;params&quot;:{&quot;stackHash&quot;:1637081966,&quot;exceptionClass&quot;:&quot;InvalidStateError&quot;,&quot;request_uri&quot;:&quot;/chris.chidgey.2155&quot;,&quot;message&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;browser_stack_hash&quot;:-547882935,&quot;releaseIds&quot;:&quot;{}&quot;,&quot;firstOccurrenceTimestamp&quot;:1689921975068},&quot;custom&quot;:{},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;time&quot;:{&quot;t&quot;:223424}}},{&quot;params&quot;:{&quot;stackHash&quot;:-458595023,&quot;exceptionClass&quot;:&quot;InvalidStateError&quot;,&quot;request_uri&quot;:&quot;/chris.chidgey.2155&quot;,&quot;message&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;browser_stack_hash&quot;:-1398257332,&quot;releaseIds&quot;:&quot;{}&quot;,&quot;firstOccurrenceTimestamp&quot;:1689921975077},&quot;custom&quot;:{},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;time&quot;:{&quot;t&quot;:223428}}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/jserrors/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1482},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:217},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:223032}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:273},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:244},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:223037}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;cmcsports.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;cmcsports.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/3e6f6bf4bbb14ccf8eafbf725c7ec3c4/435389441dd8480394e02cc8c47f4685/index_1_4.ts&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1916},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:221512}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;api.gleap.io&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;api.gleap.io:443&quot;,&quot;pathname&quot;:&quot;/sessions/ping&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:39},&quot;rxSize&quot;:{&quot;t&quot;:14},&quot;duration&quot;:{&quot;t&quot;:326},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:228022}}},{&quot;params&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;hostname&quot;:&quot;beacons.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;beacons.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:582},&quot;rxSize&quot;:{&quot;t&quot;:110},&quot;duration&quot;:{&quot;t&quot;:1369},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:229770}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;events.qortex.ai&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;events.qortex.ai:443&quot;,&quot;pathname&quot;:&quot;/api/v1/player-event&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:945},&quot;duration&quot;:{&quot;t&quot;:3735},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:228440}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">jserrors/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=233033&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=233040&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">233040</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bel.7;2,,4qx4,1gy,,,&apos;GET,5k,&apos;cmcsports.cloudmcapp.com:443,&apos;/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/3e6f6bf4bbb14ccf8eafbf725c7ec3c4/435389441dd8480394e02cc8c47f4685/index_1_4.ts,,2,,&apos;0,!!!;2,,4vxy,91,,,&apos;POST,5k,&apos;api.gleap.io:443,&apos;/sessions/ping,13,e,,3,!!!;2,,4xai,121,,,&apos;PUT,5k,&apos;beacons.cloudmcapp.com:443,&apos;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/,g6,32,,3,!!!;2,,4w9k,2vq,,,4,5k,&apos;events.qortex.ai:443,&apos;/api/v1/player-event,q9,,,3,!!!" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bel.7;2,,4qx4,1gy,,,&apos;GET,5k,&apos;cmcsports.cloudmcapp.com:443,&apos;/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/3e6f6bf4bbb14ccf8eafbf725c7ec3c4/435389441dd8480394e02cc8c47f4685/index_1_4.ts,,2,,&apos;0,!!!;2,,4vxy,91,,,&apos;POST,5k,&apos;api.gleap.io:443,&apos;/sessions/ping,13,e,,3,!!!;2,,4xai,121,,,&apos;PUT,5k,&apos;beacons.cloudmcapp.com:443,&apos;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/,g6,32,,3,!!!;2,,4w9k,2vq,,,4,5k,&apos;events.qortex.ai:443,&apos;/api/v1/player-event,q9,,,3,!!!</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">events/1/NRBR-eebce11a0e47205f1a0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/3e6f6bf4bbb14ccf8eafbf725c7ec3c4/435389441dd8480394e02cc8c47f4685/index_1_5.ts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/3e6f6bf4bbb14ccf8eafbf725c7ec3c4/435389441dd8480394e02cc8c47f4685/index_1_5.ts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">141010</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.582,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;7b526415feb746b7b5aa4c8ae6fcd41d&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:47.707Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;7b526415feb746b7b5aa4c8ae6fcd41d&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922187.706,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922091.428,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922091.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922092.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/ee78eaae1b7c4778a40ac6d006153eb7/c2a42c131b054fb780c8ecdbad173eff/76df384bbe10401aa2076c56163c84a0/435389441dd8480394e02cc8c47f4685/index_1_3.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922093.226,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922093},&quot;InventoryRequest&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] InventoryRequest&quot;},{&quot;timestamp&quot;:1689922094.762,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;url&quot;:&quot;https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922094.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.561,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;7b526415feb746b7b5aa4c8ae6fcd41d&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:47.707Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;7b526415feb746b7b5aa4c8ae6fcd41d&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922187.706,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922091.428,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922091.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922092.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/ee78eaae1b7c4778a40ac6d006153eb7/c2a42c131b054fb780c8ecdbad173eff/76df384bbe10401aa2076c56163c84a0/435389441dd8480394e02cc8c47f4685/index_1_3.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922093.226,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922093},&quot;InventoryRequest&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] InventoryRequest&quot;},{&quot;timestamp&quot;:1689922094.762,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;url&quot;:&quot;https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922094.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.561,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">141010</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.582,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;09c55ddef1654680a63a342e6ee6eb52&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:47.712Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;09c55ddef1654680a63a342e6ee6eb52&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922187.712,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922091.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922092.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/ee78eaae1b7c4778a40ac6d006153eb7/c2a42c131b054fb780c8ecdbad173eff/76df384bbe10401aa2076c56163c84a0/435389441dd8480394e02cc8c47f4685/index_1_3.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922093.226,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922093},&quot;InventoryRequest&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] InventoryRequest&quot;},{&quot;timestamp&quot;:1689922094.762,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;url&quot;:&quot;https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922094.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.561,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;09c55ddef1654680a63a342e6ee6eb52&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:47.712Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;09c55ddef1654680a63a342e6ee6eb52&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922187.712,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922091.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922092.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/ee78eaae1b7c4778a40ac6d006153eb7/c2a42c131b054fb780c8ecdbad173eff/76df384bbe10401aa2076c56163c84a0/435389441dd8480394e02cc8c47f4685/index_1_3.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922093.226,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922093},&quot;InventoryRequest&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] InventoryRequest&quot;},{&quot;timestamp&quot;:1689922094.762,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;url&quot;:&quot;https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922094.972,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://events.qortex.ai/api/v1/player-event&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922095.561,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ads.stickyadstv.com/www/delivery/swfIndex.php?reqType=AdsSetup&amp;protocolVersion=2.0&amp;zoneId=21155983&amp;loc=https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&amp;playerSize=250x141&amp;_fw_content_genre=Sports&amp;_fw_content_rating=CCPA&amp;_fw_site_category=IAB17&amp;_fw_content_category=IAB17&amp;_fw_content_title=&amp;_fw_content_language=EN&amp;_fw_content_length=&amp;series=&amp;_fw_content_qagrating=IQG_MEDIA_RATING-ALL&amp;_fw_content_producer_name=CMC&amp;livestream=0&amp;_fw_gdpr=0&amp;_fw_gdpr_consent=&amp;schain=1.0,1!cloudmcapp.com,1086,1,,,&amp;_fw_us_privacy=&amp;_fw_coppa=0&amp;cbb=9922187981" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_fw_coppa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_coppa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loc</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cbb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cbb</stringProp>
                  <stringProp name="Argument.value">9922187981</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_length" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_length</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_us_privacy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_us_privacy</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_site_category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_site_category</stringProp>
                  <stringProp name="Argument.value">IAB17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="playerSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">playerSize</stringProp>
                  <stringProp name="Argument.value">250x141</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_gdpr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_gdpr</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_qagrating" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_qagrating</stringProp>
                  <stringProp name="Argument.value">IQG_MEDIA_RATING-ALL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="livestream" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">livestream</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="schain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">schain</stringProp>
                  <stringProp name="Argument.value">1.0,1!cloudmcapp.com,1086,1,,,</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_language</stringProp>
                  <stringProp name="Argument.value">EN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_genre" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_genre</stringProp>
                  <stringProp name="Argument.value">Sports</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_rating" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_rating</stringProp>
                  <stringProp name="Argument.value">CCPA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_title</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="series" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">series</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reqType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reqType</stringProp>
                  <stringProp name="Argument.value">AdsSetup</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zoneId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zoneId</stringProp>
                  <stringProp name="Argument.value">21155983</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocolVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">protocolVersion</stringProp>
                  <stringProp name="Argument.value">2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_producer_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_producer_name</stringProp>
                  <stringProp name="Argument.value">CMC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_content_category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_content_category</stringProp>
                  <stringProp name="Argument.value">IAB17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_gdpr_consent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_gdpr_consent</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">www/delivery/swfIndex.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://targeting.unrulymedia.com/unruly_prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bidderRequest&quot;:{&quot;bids&quot;:[{&quot;bidder&quot;:&quot;unruly&quot;,&quot;params&quot;:{&quot;siteId&quot;:243696,&quot;targetingUUID&quot;:&quot;243696&quot;},&quot;auctionId&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;floorData&quot;:{&quot;skipped&quot;:false,&quot;skipRate&quot;:0,&quot;location&quot;:&quot;adUnit&quot;},&quot;ortb2Imp&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;071fb5c4-4f5d-4cc2-a5a3-04388f89dc1f&quot;}},&quot;mediaTypes&quot;:{&quot;video&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;delivery&quot;:[1,2],&quot;api&quot;:[1,2],&quot;w&quot;:250,&quot;h&quot;:141,&quot;linearity&quot;:1,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6],&quot;floor&quot;:3}},&quot;adUnitCode&quot;:&quot;624f41dfe24b8d7e572dbdcf&quot;,&quot;transactionId&quot;:&quot;071fb5c4-4f5d-4cc2-a5a3-04388f89dc1f&quot;,&quot;sizes&quot;:[[250,141]],&quot;bidId&quot;:&quot;2094beeb819ccdca&quot;,&quot;bidderRequestId&quot;:&quot;208df1be36836aa7&quot;,&quot;src&quot;:&quot;client&quot;,&quot;metrics&quot;:{&quot;requestBids.usp&quot;:0.10000038146972656,&quot;requestBids.priceFloors&quot;:0.5,&quot;requestBids.validate&quot;:0.2999992370605469,&quot;requestBids.makeRequests&quot;:3.8999996185302734,&quot;adapter.client.validate&quot;:0,&quot;adapters.client.unruly.validate&quot;:0,&quot;adapter.client.buildRequests&quot;:0.2999992370605469,&quot;adapters.client.unruly.buildRequests&quot;:0.2999992370605469},&quot;bidRequestsCount&quot;:11,&quot;bidderRequestsCount&quot;:11,&quot;bidderWinsCount&quot;:0,&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}],&quot;invalidBidsCount&quot;:0,&quot;auctionStart&quot;:1689922187994,&quot;timeout&quot;:7000,&quot;refererInfo&quot;:{&quot;reachedTop&quot;:true,&quot;isAmp&quot;:false,&quot;numIframes&quot;:1,&quot;stack&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;topmostLocation&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;location&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;canonicalUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;ref&quot;:null,&quot;legacy&quot;:{&quot;reachedTop&quot;:true,&quot;isAmp&quot;:false,&quot;numIframes&quot;:1,&quot;stack&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;referer&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;canonicalUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}},&quot;metrics&quot;:{&quot;requestBids.usp&quot;:0.10000038146972656,&quot;requestBids.priceFloors&quot;:0.5,&quot;requestBids.validate&quot;:0.2999992370605469,&quot;requestBids.makeRequests&quot;:3.8999996185302734,&quot;adapter.client.validate&quot;:0,&quot;adapters.client.unruly.validate&quot;:0,&quot;adapter.client.buildRequests&quot;:0.2999992370605469,&quot;adapters.client.unruly.buildRequests&quot;:0.2999992370605469},&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;start&quot;:1689922187998}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">unruly_prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hb.minutemedia-prebid.com/hb-mm-multi" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;wrapper_type&quot;:&quot;prebidjs&quot;,&quot;wrapper_vendor&quot;:&quot;pbjs&quot;,&quot;wrapper_version&quot;:&quot;7.51.0&quot;,&quot;adapter_version&quot;:&quot;6.0.0&quot;,&quot;auction_start&quot;:1689922188000,&quot;publisher_id&quot;:&quot;01g7cpdj1ma7&quot;,&quot;publisher_name&quot;:&quot;dev.nxconnect.me&quot;,&quot;site_domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;dnt&quot;:0,&quot;device_type&quot;:&quot;1&quot;,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;session_id&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;tmax&quot;:7000,&quot;site_metadata&quot;:&quot;{\&quot;domain\&quot;:\&quot;dev.nxconnect.me\&quot;,\&quot;publisher\&quot;:{\&quot;domain\&quot;:\&quot;nxconnect.me\&quot;},\&quot;page\&quot;:\&quot;https://dev.nxconnect.me/chris.chidgey.2155\&quot;,\&quot;content\&quot;:{\&quot;title\&quot;:\&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?\&quot;,\&quot;url\&quot;:\&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8\&quot;,\&quot;keywords\&quot;:\&quot;\&quot;,\&quot;len\&quot;:184}}&quot;,&quot;cs_method&quot;:&quot;iframe&quot;,&quot;schain&quot;:&quot;1.0,1!cloudmcapp.com,1086,1,,,&quot;,&quot;referrer&quot;:null,&quot;page_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;bids&quot;:[{&quot;mediaType&quot;:&quot;video&quot;,&quot;adUnitCode&quot;:&quot;62d03fe298446014c02f1964&quot;,&quot;sizes&quot;:[[250,141]],&quot;floorPrice&quot;:3,&quot;bidId&quot;:&quot;211203370e9ebb3&quot;,&quot;loop&quot;:11,&quot;bidderRequestId&quot;:&quot;2101f283b17ba541&quot;,&quot;transactionId&quot;:&quot;403d7821-215c-4bbf-960a-6fe40c6c5eef&quot;,&quot;coppa&quot;:0,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;placementId&quot;:&quot;cmc_pb&quot;,&quot;playbackMethod&quot;:6,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;plcmt&quot;:2}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hb-mm-multi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ib.adnxs.com/ut/v3/prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tags&quot;:[{&quot;sizes&quot;:[{&quot;width&quot;:250,&quot;height&quot;:141}],&quot;primary_size&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;ad_types&quot;:[&quot;video&quot;],&quot;uuid&quot;:&quot;21372dedfcdd664&quot;,&quot;id&quot;:24344653,&quot;allow_smaller_sizes&quot;:true,&quot;use_pmt_rule&quot;:false,&quot;prebid&quot;:true,&quot;disable_psa&quot;:true,&quot;reserve&quot;:3,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;hb_source&quot;:1,&quot;require_asset_url&quot;:true,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playback_method&quot;:2},&quot;video_frameworks&quot;:[2]}],&quot;user&quot;:{},&quot;sdk&quot;:{&quot;source&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;7.51.0&quot;},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;referrer_detection&quot;:{&quot;rd_ref&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_top&quot;:true,&quot;rd_ifs&quot;:0,&quot;rd_stk&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_can&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ut/v3/prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid.a-mo.net/a/c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;a&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;B&quot;:0,&quot;b&quot;:&quot;dev.nxconnect.me&quot;,&quot;brc&quot;:11,&quot;bwc&quot;:0,&quot;trc&quot;:11,&quot;tm&quot;:false,&quot;V&quot;:&quot;7.51.0&quot;,&quot;vg&quot;:&quot;pbjs&quot;,&quot;i&quot;:&quot;bnhjb25uZWN0Lm1l&quot;,&quot;l&quot;:{},&quot;f&quot;:0.01,&quot;cv&quot;:&quot;pba1.3.2&quot;,&quot;st&quot;:&quot;prebid&quot;,&quot;h&quot;:768,&quot;w&quot;:1366,&quot;gs&quot;:&quot;&quot;,&quot;gc&quot;:&quot;&quot;,&quot;gpp&quot;:{&quot;gppString&quot;:&quot;&quot;,&quot;applicableSections&quot;:&quot;&quot;},&quot;u&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;do&quot;:&quot;dev.nxconnect.me&quot;,&quot;re&quot;:null,&quot;am&quot;:null,&quot;usp&quot;:&quot;1---&quot;,&quot;smt&quot;:1,&quot;d&quot;:&quot;&quot;,&quot;m&quot;:{&quot;2157d6ac3020b84&quot;:{&quot;au&quot;:&quot;628d665b1397f63a9a03f904&quot;,&quot;av&quot;:true,&quot;vd&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;w&quot;:250,&quot;h&quot;:141,&quot;linearity&quot;:1,&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6]},&quot;vr&quot;:true,&quot;ms&quot;:[[[250,141]],[],[]],&quot;aw&quot;:250,&quot;ah&quot;:141,&quot;tf&quot;:0,&quot;sc&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;f&quot;:3,&quot;rtb&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;386cdf81-234b-4f8e-961d-32321ee00c69&quot;}},&quot;i&quot;:&quot;YWRpdHVkZS1kaXJlY3Qtcm9uLmNvbQ&quot;}},&quot;cpp&quot;:0,&quot;fpd2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;tmax&quot;:7000,&quot;amp&quot;:false,&quot;ri&quot;:{&quot;r&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;t&quot;:true,&quot;l&quot;:1,&quot;s&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;c&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;sync&quot;:{&quot;d&quot;:500,&quot;l&quot;:5,&quot;t&quot;:0,&quot;e&quot;:true},&quot;eids&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hb.yellowblue.io/hb-multi" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;wrapper_type&quot;:&quot;prebidjs&quot;,&quot;wrapper_vendor&quot;:&quot;pbjs&quot;,&quot;wrapper_version&quot;:&quot;7.51.0&quot;,&quot;adapter_version&quot;:&quot;6.0.0&quot;,&quot;auction_start&quot;:1689922188006,&quot;publisher_id&quot;:&quot;60c8b4e48985e4000198293e&quot;,&quot;publisher_name&quot;:&quot;dev.nxconnect.me&quot;,&quot;site_domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;dnt&quot;:0,&quot;device_type&quot;:&quot;1&quot;,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;is_wrapper&quot;:false,&quot;session_id&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;tmax&quot;:7000,&quot;site_metadata&quot;:&quot;{\&quot;domain\&quot;:\&quot;dev.nxconnect.me\&quot;,\&quot;publisher\&quot;:{\&quot;domain\&quot;:\&quot;nxconnect.me\&quot;},\&quot;page\&quot;:\&quot;https://dev.nxconnect.me/chris.chidgey.2155\&quot;,\&quot;content\&quot;:{\&quot;title\&quot;:\&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?\&quot;,\&quot;url\&quot;:\&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8\&quot;,\&quot;keywords\&quot;:\&quot;\&quot;,\&quot;len\&quot;:184}}&quot;,&quot;cs_method&quot;:&quot;iframe&quot;,&quot;schain&quot;:&quot;1.0,1!cloudmcapp.com,1086,1,,,&quot;,&quot;referrer&quot;:null,&quot;page_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;bids&quot;:[{&quot;mediaType&quot;:&quot;video&quot;,&quot;adUnitCode&quot;:&quot;63232a166511c77fe34b6e26&quot;,&quot;sizes&quot;:[[250,141]],&quot;floorPrice&quot;:3,&quot;bidId&quot;:&quot;21768b639ffdffa8&quot;,&quot;bidderRequestId&quot;:&quot;216ea334c2934732&quot;,&quot;loop&quot;:11,&quot;transactionId&quot;:&quot;d3c4b2df-fa13-4406-9baf-e3822c4b82f9&quot;,&quot;coppa&quot;:0,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;playbackMethod&quot;:6,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_11}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hb-multi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid-server.rubiconproject.com/openrtb2/auction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;imp&quot;:[{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;9a5e07bc-b4d8-493a-853a-2ba36c112b29&quot;,&quot;prebid&quot;:{&quot;bidder&quot;:{&quot;rubicon&quot;:{&quot;accountId&quot;:24586,&quot;siteId&quot;:423066,&quot;zoneId&quot;:2443028,&quot;position&quot;:&quot;atf&quot;,&quot;floor&quot;:3,&quot;video&quot;:{&quot;size_id&quot;:201,&quot;playerWidth&quot;:250,&quot;playerHeight&quot;:141,&quot;language&quot;:&quot;en&quot;,&quot;plcmt&quot;:2,&quot;context&quot;:&quot;instream&quot;,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6]}}},&quot;adunitcode&quot;:&quot;628d67fc98adfe247b699b64&quot;,&quot;floors&quot;:{&quot;floorMin&quot;:3}}},&quot;id&quot;:&quot;628d67fc98adfe247b699b64&quot;,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;video/x-ms-wmv&quot;,&quot;application/javascript&quot;],&quot;protocols&quot;:[2,3,5,6],&quot;maxduration&quot;:60,&quot;linearity&quot;:1,&quot;api&quot;:[2],&quot;w&quot;:250,&quot;h&quot;:141,&quot;plcmt&quot;:2,&quot;placement&quot;:1,&quot;playbackmethod&quot;:[6],&quot;pos&quot;:1},&quot;bidfloor&quot;:3,&quot;bidfloorcur&quot;:&quot;USD&quot;}],&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184,&quot;language&quot;:&quot;en&quot;},&quot;ext&quot;:{&quot;data&quot;:{}}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45},&quot;id&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;test&quot;:0,&quot;tmax&quot;:7000,&quot;source&quot;:{&quot;tid&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;ext&quot;:{&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}},&quot;ext&quot;:{&quot;prebid&quot;:{&quot;auctiontimestamp&quot;:1689922187994,&quot;targeting&quot;:{&quot;includewinners&quot;:true,&quot;includebidderkeys&quot;:false,&quot;pricegranularity&quot;:{&quot;ranges&quot;:[{&quot;max&quot;:20,&quot;increment&quot;:0.01}]}},&quot;channel&quot;:{&quot;name&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;v7.51.0&quot;},&quot;floors&quot;:{&quot;enabled&quot;:false},&quot;cache&quot;:{&quot;vastxml&quot;:{&quot;returnCreative&quot;:false}},&quot;bidders&quot;:{&quot;rubicon&quot;:{&quot;integration&quot;:&quot;pbjs&quot;}}}},&quot;cur&quot;:[&quot;USD&quot;],&quot;user&quot;:{&quot;ext&quot;:{&quot;data&quot;:{}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_12}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">openrtb2/auction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hbopenbid.pubmatic.com/translator?source=prebid-client" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;1689922188011&quot;,&quot;at&quot;:1,&quot;cur&quot;:[&quot;USD&quot;],&quot;imp&quot;:[{&quot;id&quot;:&quot;2213c3edfff9a188&quot;,&quot;tagid&quot;:&quot;3920745&quot;,&quot;bidfloor&quot;:3,&quot;secure&quot;:1,&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;}},&quot;bidfloorcur&quot;:&quot;USD&quot;,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playbackmethod&quot;:[6],&quot;api&quot;:[2],&quot;protocols&quot;:[2,3,5,6],&quot;w&quot;:250,&quot;h&quot;:141,&quot;battr&quot;:[],&quot;linearity&quot;:1,&quot;placement&quot;:3,&quot;plcmt&quot;:2}}],&quot;site&quot;:{&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;ref&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;publisher&quot;:{&quot;id&quot;:&quot;160912&quot;,&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184}},&quot;device&quot;:{&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;js&quot;:1,&quot;dnt&quot;:0,&quot;h&quot;:768,&quot;w&quot;:1366,&quot;language&quot;:&quot;en&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45},&quot;user&quot;:{&quot;geo&quot;:{}},&quot;ext&quot;:{&quot;wrapper&quot;:{&quot;wiid&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;wv&quot;:&quot;prebid_prebid_7.51.0&quot;,&quot;transactionId&quot;:&quot;0565a600-6575-4c74-8ae2-1f8ebfd2dd34&quot;,&quot;wp&quot;:&quot;pbjs&quot;},&quot;epoch&quot;:1689922188013},&quot;source&quot;:{&quot;tid&quot;:&quot;0565a600-6575-4c74-8ae2-1f8ebfd2dd34&quot;,&quot;ext&quot;:{&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}},&quot;tmax&quot;:7000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_13}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">translator?source=prebid-client</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ib.adnxs.com/ut/v3/prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tags&quot;:[{&quot;sizes&quot;:[{&quot;width&quot;:250,&quot;height&quot;:141}],&quot;primary_size&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;ad_types&quot;:[&quot;video&quot;],&quot;uuid&quot;:&quot;223f7bf47fd75843&quot;,&quot;id&quot;:24996606,&quot;allow_smaller_sizes&quot;:true,&quot;use_pmt_rule&quot;:false,&quot;prebid&quot;:true,&quot;disable_psa&quot;:true,&quot;reserve&quot;:3,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;hb_source&quot;:1,&quot;require_asset_url&quot;:true,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playback_method&quot;:2},&quot;video_frameworks&quot;:[2]}],&quot;user&quot;:{},&quot;sdk&quot;:{&quot;source&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;7.51.0&quot;},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;referrer_detection&quot;:{&quot;rd_ref&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_top&quot;:true,&quot;rd_ifs&quot;:0,&quot;rd_stk&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_can&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ut/v3/prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid.media.net/rtb/prebid?cid=8CUENMD10" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;ref&quot;:&quot;&quot;,&quot;topMostLocation&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;isTop&quot;:true,&quot;og_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;ext&quot;:{&quot;customer_id&quot;:&quot;8CUENMD10&quot;,&quot;prebid_version&quot;:&quot;v7.51.0&quot;,&quot;gdpr_applies&quot;:false,&quot;usp_applies&quot;:false,&quot;coppa_applies&quot;:false,&quot;screen&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}},&quot;id&quot;:&quot;cac5d200-6eb3-4e69-9acd-92f92a8f6700&quot;,&quot;imp&quot;:[{&quot;id&quot;:&quot;225ac7140e4d1479&quot;,&quot;transactionId&quot;:&quot;4074c436-90e6-4da4-a970-0e28b6880a38&quot;,&quot;ext&quot;:{&quot;dfp_id&quot;:&quot;636a5801ed2dd1462b4fb0e3&quot;,&quot;display_count&quot;:11,&quot;visibility&quot;:0},&quot;all&quot;:{&quot;cid&quot;:&quot;8CUENMD10&quot;,&quot;crid&quot;:&quot;766503619&quot;,&quot;bidfloor&quot;:3},&quot;ortb2Imp&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;4074c436-90e6-4da4-a970-0e28b6880a38&quot;}},&quot;video&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;protocols&quot;:[2,3,5,6],&quot;w&quot;:250,&quot;h&quot;:141,&quot;startdelay&quot;:0,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;playbackmethod&quot;:[6],&quot;api&quot;:[2],&quot;plcmt&quot;:2},&quot;tagid&quot;:&quot;766503619&quot;,&quot;bidfloor&quot;:3,&quot;bidfloors&quot;:[{&quot;floor&quot;:3,&quot;currency&quot;:&quot;USD&quot;,&quot;mediaType&quot;:&quot;video&quot;}]}],&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;What Is The Latest In The Probe Of ISU&apos;s Football Team?&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/4fbe7e6271dd48a096a9819aaa211338/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:184}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;tmax&quot;:7000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_14}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">rtb/prebid?cid=8CUENMD10</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ads.stickyadstv.com/www/delivery/swfIndex.php?reqType=AdsSetup&amp;protocolVersion=4.2&amp;zoneId=21155983&amp;componentId=prebid&amp;componentSubId=mustang&amp;timestamp=1689922188019&amp;_fw_bidfloor=3&amp;_fw_bidfloorcur=USD&amp;pbjs_version=7.51.0&amp;pKey=-1519875688&amp;schain=1.0%2C1!cloudmcapp.com%2C1086%2C1%2C%2C%2C&amp;loc=https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&amp;playerSize=250x141&amp;video_context=instream&amp;video_placement=3&amp;video_plcmt=2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loc</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_plcmt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_plcmt</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentId</stringProp>
                  <stringProp name="Argument.value">prebid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pbjs_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pbjs_version</stringProp>
                  <stringProp name="Argument.value">7.51.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="playerSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">playerSize</stringProp>
                  <stringProp name="Argument.value">250x141</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_placement" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_placement</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="schain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">schain</stringProp>
                  <stringProp name="Argument.value">1.0,1!cloudmcapp.com,1086,1,,,</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_context</stringProp>
                  <stringProp name="Argument.value">instream</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_bidfloor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_bidfloor</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reqType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reqType</stringProp>
                  <stringProp name="Argument.value">AdsSetup</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_bidfloorcur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_bidfloorcur</stringProp>
                  <stringProp name="Argument.value">USD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zoneId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zoneId</stringProp>
                  <stringProp name="Argument.value">21155983</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocolVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">protocolVersion</stringProp>
                  <stringProp name="Argument.value">4.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentSubId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentSubId</stringProp>
                  <stringProp name="Argument.value">mustang</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pKey</stringProp>
                  <stringProp name="Argument.value">-1519875688</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                  <stringProp name="Argument.value">1689922188019</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">www/delivery/swfIndex.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_15}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">5328df91-751f-4ff8-b3b3-77aaa435282e</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">e87984e64199d7691978d1fb5c2b5158ea6df35a09323ddf17ea83bb2e24325b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_15}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">5328df91-751f-4ff8-b3b3-77aaa435282e</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">e87984e64199d7691978d1fb5c2b5158ea6df35a09323ddf17ea83bb2e24325b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:0,&quot;events&quot;:[{&quot;name&quot;:&quot;sessionStarted&quot;,&quot;date&quot;:&quot;2023-07-21T06:49:51.702Z&quot;},{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-07-21T06:49:51.702Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_15}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">5328df91-751f-4ff8-b3b3-77aaa435282e</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">e87984e64199d7691978d1fb5c2b5158ea6df35a09323ddf17ea83bb2e24325b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:51.798Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;timestamp&quot;:1689922191.797,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/[userlink]&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;parent_span_id&quot;:&quot;97027b6aca53d1fd&quot;,&quot;span_id&quot;:&quot;a941d3925407b217&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:51.798Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;timestamp&quot;:1689922191.797,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/[userlink]&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;parent_span_id&quot;:&quot;97027b6aca53d1fd&quot;,&quot;span_id&quot;:&quot;a941d3925407b217&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bih" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bih</stringProp>
                  <stringProp name="Argument.value">568</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pv</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pw</stringProp>
                  <stringProp name="Argument.value">1366</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_ah" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_ah</stringProp>
                  <stringProp name="Argument.value">728</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="output" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">output</stringProp>
                  <stringProp name="Argument.value">html</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">1689922188415</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ign</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="biw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">biw</stringProp>
                  <stringProp name="Argument.value">1349</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lmt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lmt</stringProp>
                  <stringProp name="Argument.value">1689922188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scr_x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scr_x</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ga_fc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ga_fc</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uci" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uci</stringProp>
                  <stringProp name="Argument.value">a!1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="plat" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">plat</stringProp>
                  <stringProp name="Argument.value">1:1024,2:16778240,3:2097152,4:2097152,9:32776,16:8388608,17:32,24:32,25:32,30:1081344,32:32,41:32,42:32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ea" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ea</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="wgl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wgl</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pra" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pra</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_h</stringProp>
                  <stringProp name="Argument.value">768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scr_y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scr_y</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vis</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="adf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">adf</stringProp>
                  <stringProp name="Argument.value">3025194257</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="brdim" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">brdim</stringProp>
                  <stringProp name="Argument.value">0,0,0,0,1366,0,1366,728,1366,568</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cookie</stringProp>
                  <stringProp name="Argument.value">ID=99e4dc7b40e582d1-2232080d3cdf0027:T=1681974172:RT=1689921739:S=ALNI_MZHNnKEbhzCpq4m-NiLfxdxsJv3uQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_tz</stringProp>
                  <stringProp name="Argument.value">330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">0x0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="adk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">adk</stringProp>
                  <stringProp name="Argument.value">1812271804</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cls" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cls</stringProp>
                  <stringProp name="Argument.value">MuiPaper-root MuiPaper-elevation MuiPaper-elevation4 MuiAppBar-root MuiAppBar-colorPrimary MuiAppBar-positionStatic app-bar   css-3atpy8-MuiPaper-root-MuiAppBar-root</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_w</stringProp>
                  <stringProp name="Argument.value">1366</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="easpi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">easpi</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aslmt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aslmt</stringProp>
                  <stringProp name="Argument.value">0.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nvt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nvt</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ga_sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ga_sid</stringProp>
                  <stringProp name="Argument.value">1689922189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="adx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">adx</stringProp>
                  <stringProp name="Argument.value">-12245933</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fsb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fsb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ady" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ady</stringProp>
                  <stringProp name="Argument.value">-12245933</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="idt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">idt</stringProp>
                  <stringProp name="Argument.value">540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tmod" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tmod</stringProp>
                  <stringProp name="Argument.value">1621191365</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fc</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="shv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">44759875,44759926,44759837,31076271,44788442,44796700,44797761</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bc</stringProp>
                  <stringProp name="Argument.value">31</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asro" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asro</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nras" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nras</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uach" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uach</stringProp>
                  <stringProp name="Argument.value">WyJXaW5kb3dzIiwiMTAuMC4wIiwieDg2IiwiIiwiMTE0LjAuNTczNS4xOTkiLFtdLDAsbnVsbCwiNjQiLFtbIk5vdC5BL0JyYW5kIiwiOC4wLjAuMCJdLFsiQ2hyb21pdW0iLCIxMTQuMC41NzM1LjE5OSJdLFsiR29vZ2xlIENocm9tZSIsIjExNC4wLjU3MzUuMTk5Il1dLDBd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asiscm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asiscm</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fu</stringProp>
                  <stringProp name="Argument.value">32768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="easppi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">easppi</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_his" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_his</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dtd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dtd</stringProp>
                  <stringProp name="Argument.value">588&quot;,&quot;op&quot;:&quot;resource.iframe&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;892dcb4b70ae331c&quot;,&quot;start_timestamp&quot;:1689922189.0053,&quot;timestamp&quot;:1689922189.1581001,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;first-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;88876181fc87e1ad&quot;,&quot;start_timestamp&quot;:1689922189.2323,&quot;timestamp&quot;:1689922189.2323,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;first-contentful-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;800aeb5844ad55d0&quot;,&quot;start_timestamp&quot;:1689922189.2323,&quot;timestamp&quot;:1689922189.2323,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;sentry-tracing-init&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b6359514f921bdfc&quot;,&quot;start_timestamp&quot;:1689922190.9388,&quot;timestamp&quot;:1689922190.9388,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Next.js-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b2c8d51d952d1d32&quot;,&quot;start_timestamp&quot;:1689922191.1647,&quot;timestamp&quot;:1689922191.2476,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:86758,&quot;Encoded Body Size&quot;:86458,&quot;Decoded Body Size&quot;:86458},&quot;description&quot;:&quot;/_next/image?url=https://image.mux.com/i5Pn02u00ZguR1W02QypCMUpYcwTq3a7E00EGvWLTswR01M4/thumbnail.jpg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ga_hid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ga_hid</stringProp>
                  <stringProp name="Argument.value">411899727</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsz</stringProp>
                  <stringProp name="Argument.value">||s|</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">ca-pub-2520823772567939</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asamt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asamt</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_cd</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:53.164Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;develop&quot;,&quot;transaction&quot;:&quot;/[userlink]&quot;,&quot;public_key&quot;:&quot;32af5f9dcf8b45b586a0226fc6a982f8&quot;,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;parent_span_id&quot;:&quot;97027b6aca53d1fd&quot;,&quot;span_id&quot;:&quot;a941d3925407b217&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;sentry_reportAllChanges&quot;:false},&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8b7d444b550c5b88&quot;,&quot;start_timestamp&quot;:1689922188.9461,&quot;timestamp&quot;:1689922189.0071,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;bfa1eb685e305af0&quot;,&quot;start_timestamp&quot;:1689922190.935,&quot;timestamp&quot;:1689922191.0049999,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;acb5b5eb10d1899c&quot;,&quot;start_timestamp&quot;:1689922191.2711,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1689922191.7011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;918ac343a632a7a8&quot;,&quot;start_timestamp&quot;:1689922191.1161,&quot;timestamp&quot;:1689922191.3201,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a0ced3ce00db6dec&quot;,&quot;start_timestamp&quot;:1689922191.3511002,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689922191.8855,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;961ef4c53e88a4a6&quot;,&quot;start_timestamp&quot;:1689922191.7028,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689922192.16,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;unloadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b874e77d2b6a4ffb&quot;,&quot;start_timestamp&quot;:1689922188.0888,&quot;timestamp&quot;:1689922188.0888,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8b17906bee76096e&quot;,&quot;start_timestamp&quot;:1689922191.5138,&quot;timestamp&quot;:1689922191.5144,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8d80493dad835cdd&quot;,&quot;start_timestamp&quot;:1689922186.5888,&quot;timestamp&quot;:1689922187.2011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8e89b619b54a1463&quot;,&quot;start_timestamp&quot;:1689922186.5893,&quot;timestamp&quot;:1689922187.2011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8e093ce67d00030c&quot;,&quot;start_timestamp&quot;:1689922186.5557,&quot;timestamp&quot;:1689922186.5635,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9ce683605ae2e65a&quot;,&quot;start_timestamp&quot;:1689922186.5635,&quot;timestamp&quot;:1689922186.5888,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b53062ceb2e43ff0&quot;,&quot;start_timestamp&quot;:1689922187.2013,&quot;timestamp&quot;:1689922188.6138,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8650fbd4c8f5b0ba&quot;,&quot;start_timestamp&quot;:1689922188.0681,&quot;timestamp&quot;:1689922188.6138,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9bda6d7647c6375f&quot;,&quot;start_timestamp&quot;:1689922186.549,&quot;timestamp&quot;:1689922191.1647,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:50832,&quot;Encoded Body Size&quot;:50532,&quot;Decoded Body Size&quot;:147304},&quot;description&quot;:&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:53.164Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;develop&quot;,&quot;transaction&quot;:&quot;/[userlink]&quot;,&quot;public_key&quot;:&quot;32af5f9dcf8b45b586a0226fc6a982f8&quot;,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;parent_span_id&quot;:&quot;97027b6aca53d1fd&quot;,&quot;span_id&quot;:&quot;a941d3925407b217&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;sentry_reportAllChanges&quot;:false},&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8b7d444b550c5b88&quot;,&quot;start_timestamp&quot;:1689922188.9461,&quot;timestamp&quot;:1689922189.0071,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;bfa1eb685e305af0&quot;,&quot;start_timestamp&quot;:1689922190.935,&quot;timestamp&quot;:1689922191.0049999,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;acb5b5eb10d1899c&quot;,&quot;start_timestamp&quot;:1689922191.2711,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1689922191.7011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;918ac343a632a7a8&quot;,&quot;start_timestamp&quot;:1689922191.1161,&quot;timestamp&quot;:1689922191.3201,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a0ced3ce00db6dec&quot;,&quot;start_timestamp&quot;:1689922191.3511002,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689922191.8855,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;961ef4c53e88a4a6&quot;,&quot;start_timestamp&quot;:1689922191.7028,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1689922192.16,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;unloadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b874e77d2b6a4ffb&quot;,&quot;start_timestamp&quot;:1689922188.0888,&quot;timestamp&quot;:1689922188.0888,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8b17906bee76096e&quot;,&quot;start_timestamp&quot;:1689922191.5138,&quot;timestamp&quot;:1689922191.5144,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8d80493dad835cdd&quot;,&quot;start_timestamp&quot;:1689922186.5888,&quot;timestamp&quot;:1689922187.2011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8e89b619b54a1463&quot;,&quot;start_timestamp&quot;:1689922186.5893,&quot;timestamp&quot;:1689922187.2011,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8e093ce67d00030c&quot;,&quot;start_timestamp&quot;:1689922186.5557,&quot;timestamp&quot;:1689922186.5635,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9ce683605ae2e65a&quot;,&quot;start_timestamp&quot;:1689922186.5635,&quot;timestamp&quot;:1689922186.5888,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b53062ceb2e43ff0&quot;,&quot;start_timestamp&quot;:1689922187.2013,&quot;timestamp&quot;:1689922188.6138,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8650fbd4c8f5b0ba&quot;,&quot;start_timestamp&quot;:1689922188.0681,&quot;timestamp&quot;:1689922188.6138,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9bda6d7647c6375f&quot;,&quot;start_timestamp&quot;:1689922186.549,&quot;timestamp&quot;:1689922191.1647,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:50832,&quot;Encoded Body Size&quot;:50532,&quot;Decoded Body Size&quot;:147304},&quot;description&quot;:&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client</stringProp>
                  <stringProp name="Argument.value">ca-pub-2520823772567939&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;ac7e4f74e7a37004&quot;,&quot;start_timestamp&quot;:1689922188.0997,&quot;timestamp&quot;:1689922188.3918,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:126493,&quot;Encoded Body Size&quot;:126193,&quot;Decoded Body Size&quot;:368150},&quot;description&quot;:&quot;https://pagead2.googlesyndication.com/pagead/managed/js/adsense/m202307180101/show_ads_impl_fy2021.js?bust=31076271&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9038bfb8d6a69df5&quot;,&quot;start_timestamp&quot;:1689922188.4168,&quot;timestamp&quot;:1689922188.9329,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:4844,&quot;Encoded Body Size&quot;:4544,&quot;Decoded Body Size&quot;:10413},&quot;description&quot;:&quot;https://googleads.g.doubleclick.net/pagead/html/r20230719/r20190131/zrt_lookup.html&quot;,&quot;op&quot;:&quot;resource.iframe&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b9b885eda6c6ad98&quot;,&quot;start_timestamp&quot;:1689922188.4217,&quot;timestamp&quot;:1689922188.6334,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:2951,&quot;Encoded Body Size&quot;:2651,&quot;Decoded Body Size&quot;:22014},&quot;description&quot;:&quot;/_next/static/css/3d97de370aba7122.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;bfe55b2b27e485c3&quot;,&quot;start_timestamp&quot;:1689922188.5912,&quot;timestamp&quot;:1689922189.1484,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:4272,&quot;Encoded Body Size&quot;:3972,&quot;Decoded Body Size&quot;:11900},&quot;description&quot;:&quot;/_next/static/css/1d5a9794d4da18fe.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;ab78bd306ea24521&quot;,&quot;start_timestamp&quot;:1689922188.5916,&quot;timestamp&quot;:1689922189.1671,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:1482,&quot;Encoded Body Size&quot;:1182,&quot;Decoded Body Size&quot;:2538},&quot;description&quot;:&quot;/_next/static/chunks/webpack-080d937b9083cd47.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;bde5413bd296d1df&quot;,&quot;start_timestamp&quot;:1689922188.5918,&quot;timestamp&quot;:1689922189.6952,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:42639,&quot;Encoded Body Size&quot;:42339,&quot;Decoded Body Size&quot;:130741},&quot;description&quot;:&quot;/_next/static/chunks/framework-8957c350a55da097.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b37a28739b4fcaaa&quot;,&quot;start_timestamp&quot;:1689922188.5919,&quot;timestamp&quot;:1689922189.7229002,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:32651,&quot;Encoded Body Size&quot;:32351,&quot;Decoded Body Size&quot;:111066},&quot;description&quot;:&quot;/_next/static/chunks/main-5f661a679b0d6419.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;ab83518b9d7baeb4&quot;,&quot;start_timestamp&quot;:1689922188.592,&quot;timestamp&quot;:1689922190.0223,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:318364,&quot;Encoded Body Size&quot;:318064,&quot;Decoded Body Size&quot;:1053858},&quot;description&quot;:&quot;/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b64357119caec2cf&quot;,&quot;start_timestamp&quot;:1689922188.592,&quot;timestamp&quot;:1689922190.9276,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:19636,&quot;Encoded Body Size&quot;:19336,&quot;Decoded Body Size&quot;:60387},&quot;description&quot;:&quot;/_next/static/chunks/75fc9c18-94f50ba15a15c0ff.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;84306375435b5e88&quot;,&quot;start_timestamp&quot;:1689922188.5921001,&quot;timestamp&quot;:1689922190.1341002,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:105435,&quot;Encoded Body Size&quot;:105135,&quot;Decoded Body Size&quot;:371305},&quot;description&quot;:&quot;/_next/static/chunks/ddc9e94f-b7a233f1943c080b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b9e51331323d1f33&quot;,&quot;start_timestamp&quot;:1689922188.5921001,&quot;timestamp&quot;:1689922190.5272002,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:13163,&quot;Encoded Body Size&quot;:12863,&quot;Decoded Body Size&quot;:43911},&quot;description&quot;:&quot;/_next/static/chunks/373-a0a960e54d92f6ad.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9e768332e397602c&quot;,&quot;start_timestamp&quot;:1689922188.5923,&quot;timestamp&quot;:1689922190.5326,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:68132,&quot;Encoded Body Size&quot;:67832,&quot;Decoded Body Size&quot;:220798},&quot;description&quot;:&quot;/_next/static/chunks/86-b1e887f8c60a99c0.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;90d13f56de019db4&quot;,&quot;start_timestamp&quot;:1689922188.5923,&quot;timestamp&quot;:1689922190.5614,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:26408,&quot;Encoded Body Size&quot;:26108,&quot;Decoded Body Size&quot;:131912},&quot;description&quot;:&quot;/_next/static/chunks/831-69cb5e2bc440b2ad.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8990e5fedb00fcf4&quot;,&quot;start_timestamp&quot;:1689922188.5924,&quot;timestamp&quot;:1689922190.5938,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:19985,&quot;Encoded Body Size&quot;:19685,&quot;Decoded Body Size&quot;:51413},&quot;description&quot;:&quot;/_next/static/chunks/560-e18e9c63e60dd751.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a38f4a9108e89bbc&quot;,&quot;start_timestamp&quot;:1689922188.5925,&quot;timestamp&quot;:1689922190.6701,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:10860,&quot;Encoded Body Size&quot;:10560,&quot;Decoded Body Size&quot;:40342},&quot;description&quot;:&quot;/_next/static/chunks/729-bd69edb49bb7bf96.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;92d70f4c2157371d&quot;,&quot;start_timestamp&quot;:1689922188.5925,&quot;timestamp&quot;:1689922191.0757,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:19615,&quot;Encoded Body Size&quot;:19315,&quot;Decoded Body Size&quot;:101215},&quot;description&quot;:&quot;/_next/static/chunks/42-58659817efa88d27.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a964e1dcd2694956&quot;,&quot;start_timestamp&quot;:1689922188.5925,&quot;timestamp&quot;:1689922191.0801,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:711,&quot;Encoded Body Size&quot;:411,&quot;Decoded Body Size&quot;:411},&quot;description&quot;:&quot;/_next/static/chunks/pages/[userlink]-217541280b6f59a9.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b1017c99897e3599&quot;,&quot;start_timestamp&quot;:1689922188.5926,&quot;timestamp&quot;:1689922191.1148002,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:948,&quot;Encoded Body Size&quot;:648,&quot;Decoded Body Size&quot;:1375},&quot;description&quot;:&quot;/_next/static/qVQiolJrXv4Ye6jrxPeq5/_buildManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a52fcc228b573249&quot;,&quot;start_timestamp&quot;:1689922188.5926,&quot;timestamp&quot;:1689922191.1579,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:377,&quot;Encoded Body Size&quot;:77,&quot;Decoded Body Size&quot;:77},&quot;description&quot;:&quot;/_next/static/qVQiolJrXv4Ye6jrxPeq5/_ssgManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8702c3b409aa6b00&quot;,&quot;start_timestamp&quot;:1689922188.5927,&quot;timestamp&quot;:1689922191.1996,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:392,&quot;Encoded Body Size&quot;:92,&quot;Decoded Body Size&quot;:92},&quot;description&quot;:&quot;/_next/static/qVQiolJrXv4Ye6jrxPeq5/_middlewareManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9af01df1d1dd5e5c&quot;,&quot;start_timestamp&quot;:1689922188.5927,&quot;timestamp&quot;:1689922191.5127,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:0,&quot;Encoded Body Size&quot;:0,&quot;Decoded Body Size&quot;:0},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/profile-images-dev/b3fa01de-f3cf-4db4-9a16-e3cbd4a6cebf.webp&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b4d408ac944eded6&quot;,&quot;start_timestamp&quot;:1689922188.6086001,&quot;timestamp&quot;:1689922190.0293002,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:0,&quot;Encoded Body Size&quot;:0,&quot;Decoded Body Size&quot;:0},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/global/nxc-link-banner.png&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b79951d7a2a1e66f&quot;,&quot;start_timestamp&quot;:1689922188.618,&quot;timestamp&quot;:1689922190.5834,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8300,&quot;Encoded Body Size&quot;:8000,&quot;Decoded Body Size&quot;:8000},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLEj6Z1xlFd2JQEk.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;95dcac4088b9c786&quot;,&quot;start_timestamp&quot;:1689922188.6298,&quot;timestamp&quot;:1689922188.6702,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8184,&quot;Encoded Body Size&quot;:7884,&quot;Decoded Body Size&quot;:7884},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiEyp8kv8JHgFVrJJfecnFHGPc.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;a5eef62a9436f66c&quot;,&quot;start_timestamp&quot;:1689922188.63,&quot;timestamp&quot;:1689922188.6826,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8048,&quot;Encoded Body Size&quot;:7748,&quot;Decoded Body Size&quot;:7748},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLGT9Z1xlFd2JQEk.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;8062d1751be0796d&quot;,&quot;start_timestamp&quot;:1689922188.6301,&quot;timestamp&quot;:1689922188.6966,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8116,&quot;Encoded Body Size&quot;:7816,&quot;Decoded Body Size&quot;:7816},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLCz7Z1xlFd2JQEk.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9eca6ebffba85046&quot;,&quot;start_timestamp&quot;:1689922188.6302,&quot;timestamp&quot;:1689922188.7089999,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8140,&quot;Encoded Body Size&quot;:7840,&quot;Decoded Body Size&quot;:7840},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLDz8Z1xlFd2JQEk.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;80ab651f4f7cfb13&quot;,&quot;start_timestamp&quot;:1689922188.6304,&quot;timestamp&quot;:1689922188.7191,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:8124,&quot;Encoded Body Size&quot;:7824,&quot;Decoded Body Size&quot;:7824},&quot;description&quot;:&quot;https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLDD4Z1xlFd2JQEk.woff2&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9e92eea96a079320&quot;,&quot;start_timestamp&quot;:1689922188.631,&quot;timestamp&quot;:1689922188.7331,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:558,&quot;Encoded Body Size&quot;:258,&quot;Decoded Body Size&quot;:391},&quot;description&quot;:&quot;https://partner.googleadservices.com/gampad/cookie.js?domain=dev.nxconnect.me</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bpp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bpp</stringProp>
                  <stringProp name="Argument.value">185</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="abxe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">abxe</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="asntpc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">asntpc</stringProp>
                  <stringProp name="Argument.value">1000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uas" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uas</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pvsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pvsid</stringProp>
                  <stringProp name="Argument.value">1888113206711789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="abl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">abl</stringProp>
                  <stringProp name="Argument.value">NS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ga_vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ga_vid</stringProp>
                  <stringProp name="Argument.value">29293985.1689922189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_sd</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ifi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ifi</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="saldr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">saldr</stringProp>
                  <stringProp name="Argument.value">aa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ptt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ptt</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="correlator" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">correlator</stringProp>
                  <stringProp name="Argument.value">3299867527828</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;89631b74bffc34a8&quot;,&quot;start_timestamp&quot;:1689922191.366,&quot;timestamp&quot;:1689922191.9081,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:34212,&quot;Encoded Body Size&quot;:33912,&quot;Decoded Body Size&quot;:33912},&quot;description&quot;:&quot;/_next/image?url=https://image.mux.com/VeiuyklWSq9H2ztAzgT8kjgXVBVv01TRhqwDEdRIjFn00/thumbnail.jpg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gpic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gpic</stringProp>
                  <stringProp name="Argument.value">UID=00000bfa4aeb74a7:T=1681974172:RT=1689921739:S=ALNI_MbFawmIzK9lY9gVnbWF3M7HHVM5FA&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;85fda99748a3e703&quot;,&quot;start_timestamp&quot;:1689922188.9798,&quot;timestamp&quot;:1689922189.3147,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:416,&quot;Encoded Body Size&quot;:116,&quot;Decoded Body Size&quot;:120},&quot;description&quot;:&quot;https://adservice.google.com/adsid/integrator.js?domain=dev.nxconnect.me&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;b88d200b15048f7f&quot;,&quot;start_timestamp&quot;:1689922188.9923,&quot;timestamp&quot;:1689922189.2293,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:300,&quot;Encoded Body Size&quot;:0,&quot;Decoded Body Size&quot;:0},&quot;description&quot;:&quot;https://pagead2.googlesyndication.com/pagead/gen_204?id=ach_evt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bdt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bdt</stringProp>
                  <stringProp name="Argument.value">318</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mjsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mjsv</stringProp>
                  <stringProp name="Argument.value">m202307180101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u_aw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u_aw</stringProp>
                  <stringProp name="Argument.value">1366</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ph" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ph</stringProp>
                  <stringProp name="Argument.value">568</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">_gfp_s_</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="y" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">y</stringProp>
                  <stringProp name="Argument.value">0&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;a941d3925407b217&quot;,&quot;span_id&quot;:&quot;9770fb2ca3062fd0&quot;,&quot;start_timestamp&quot;:1689922188.993,&quot;timestamp&quot;:1689922189.1246,&quot;trace_id&quot;:&quot;9724e20786f1405b8d513aad61bb4222&quot;},{&quot;data&quot;:{&quot;Transfer Size&quot;:346,&quot;Encoded Body Size&quot;:46,&quot;Decoded Body Size&quot;:603},&quot;description&quot;:&quot;https://googleads.g.doubleclick.net/pagead/ads?client=ca-pub-2520823772567939</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tn</stringProp>
                  <stringProp name="Argument.value">HEADER</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dmc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dmc</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fsapi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fsapi</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pagead2.googlesyndication.com/getconfig/sodar?sv=200&amp;tid=gda&amp;tv=r20230719&amp;st=env" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">env</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">gda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_16}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">getconfig/sodar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=7279&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;tt=1d33321a128c9614&amp;af=err,xhr,stn,ins,spa&amp;ap=497.089881&amp;be=1519&amp;fe=5611&amp;dc=3446&amp;perf=%7B%22timing%22:%7B%22of%22:1689922186549,%22n%22:0,%22u%22:1540,%22ue%22:1540,%22f%22:7,%22dn%22:15,%22dne%22:40,%22c%22:40,%22s%22:40,%22ce%22:652,%22rq%22:652,%22rp%22:1519,%22rpe%22:2065,%22di%22:2069,%22ds%22:4965,%22de%22:4965,%22dc%22:7112,%22l%22:7113,%22le%22:7130%7D,%22navigation%22:%7B%22ty%22:1%7D%7D&amp;fp=2683&amp;fcp=2683" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tt</stringProp>
                  <stringProp name="Argument.value">1d33321a128c9614</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">497.089881</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">7279</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1689922186549,&quot;n&quot;:0,&quot;u&quot;:1540,&quot;ue&quot;:1540,&quot;f&quot;:7,&quot;dn&quot;:15,&quot;dne&quot;:40,&quot;c&quot;:40,&quot;s&quot;:40,&quot;ce&quot;:652,&quot;rq&quot;:652,&quot;rp&quot;:1519,&quot;rpe&quot;:2065,&quot;di&quot;:2069,&quot;ds&quot;:4965,&quot;de&quot;:4965,&quot;dc&quot;:7112,&quot;l&quot;:7113,&quot;le&quot;:7130},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5611</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3446</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">1/NRBR-eebce11a0e47205f1a0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/resources/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=8383&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;st=1689922186549" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:1540,&quot;e&quot;:1540,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:1540,&quot;e&quot;:1540,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:2069,&quot;e&quot;:2069,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:4965,&quot;e&quot;:4965,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:4965,&quot;e&quot;:4965,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectCount&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;activationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;workerStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectEnd&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:7,&quot;e&quot;:7,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:15,&quot;e&quot;:15,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:40,&quot;e&quot;:40,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:40,&quot;e&quot;:40,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:652,&quot;e&quot;:652,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;secureConnectionStart&quot;,&quot;s&quot;:40,&quot;e&quot;:40,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:652,&quot;e&quot;:652,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:1519,&quot;e&quot;:1519,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:2065,&quot;e&quot;:2065,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;startTime&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;duration&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">resources/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=8383&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;st=1689922186549</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=8394&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">8394</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bel.7;1,2,,6h2,5m8,f,&apos;initialPageLoad,&apos;https://dev.nxconnect.me/chris.chidgey.2155,1,1,,,,dt,!!&apos;35e35593-eea2-4845-8fe9-25ef9387cddf,&apos;1,22j,22j;2,2,1vj,9f,3dj,80,&apos;GET,5k,&apos;partner.googleadservices.com:443,&apos;/gampad/cookie.js,,,2,&apos;2,!!!;2,1,3n7,bx,3,4,&apos;POST,5l,&apos;api.gleap.io:443,&apos;/sessions,2,47,,&apos;4,!!!;2,,3z6,cp,2,1,8,5k,9,&apos;/sessions/ping,5w,e,,&apos;6,!!!;2,,3pf,eu,a,8,4,5k,9,&apos;/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3,,z8p,,&apos;5,!!!;2,,5hw,2u,1,1,4,5k,&apos;pagead2.googlesyndication.com:443,&apos;/getconfig/sodar,,bzt,,&apos;7,!!!;b,16s,-16s,16s,-16s,7,8,p,,,h0,,o3,f6,!4,28g,,1nn,1,h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bel.7;1,2,,6h2,5m8,f,&apos;initialPageLoad,&apos;https://dev.nxconnect.me/chris.chidgey.2155,1,1,,,,dt,!!&apos;35e35593-eea2-4845-8fe9-25ef9387cddf,&apos;1,22j,22j;2,2,1vj,9f,3dj,80,&apos;GET,5k,&apos;partner.googleadservices.com:443,&apos;/gampad/cookie.js,,,2,&apos;2,!!!;2,1,3n7,bx,3,4,&apos;POST,5l,&apos;api.gleap.io:443,&apos;/sessions,2,47,,&apos;4,!!!;2,,3z6,cp,2,1,8,5k,9,&apos;/sessions/ping,5w,e,,&apos;6,!!!;2,,3pf,eu,a,8,4,5k,9,&apos;/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3,,z8p,,&apos;5,!!!;2,,5hw,2u,1,1,4,5k,&apos;pagead2.googlesyndication.com:443,&apos;/getconfig/sodar,,bzt,,&apos;7,!!!;b,16s,-16s,16s,-16s,7,8,p,,,h0,,o3,f6,!4,28g,,1nn,1,h</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">events/1/NRBR-eebce11a0e47205f1a0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[27]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://09nfgyvbtl.execute-api.us-east-1.amazonaws.com/prod/playlist?playlistId=1683813865" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="playlistId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">playlistId</stringProp>
                  <stringProp name="Argument.value">1683813865</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_17}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">prod/playlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[28]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;BOOTSTRAP&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:false,&quot;eventType&quot;:&quot;BOOTSTRAP&quot;,&quot;subType&quot;:&quot;LOADED&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;videoContainer&quot;:&quot;AV645cfd8b22ec41080c0dcde6&quot;,&quot;htmlContainer&quot;:null,&quot;attachToTop&quot;:null,&quot;baseId&quot;:null,&quot;esm6Mod&quot;:null,&quot;continuousLoad&quot;:null,&quot;marketplaceId&quot;:null,&quot;storeId&quot;:null,&quot;bundleId&quot;:null},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:null,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:null,&quot;eventOrder&quot;:-1,&quot;activeWindow&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[29]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1689922196286" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922196286</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;Visit&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;$browser_version&quot;: 114,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.45.0&quot;,&quot;$insert_id&quot;: &quot;3ss4olt5j3j3uvag&quot;,&quot;time&quot;: 1689922191.267,&quot;distinct_id&quot;: &quot;188579451a569-0e35d0bf97c259-26031a51-100200-188579451a6cab&quot;,&quot;$device_id&quot;: &quot;188579451a569-0e35d0bf97c259-26031a51-100200-188579451a6cab&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;source&quot;: &quot;nxconnect&quot;,&quot;user&quot;: &quot;chris.chidgey.2155&quot;,&quot;environment&quot;: &quot;develop&quot;,&quot;token&quot;: &quot;faa5747dbf9cde86407d515211bd876a&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_19}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[30]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[31]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://go1.aniview.com/api/adserver/tag/3/?AV_TAGID=645cfd8b22ec41080c0dcde6&amp;AV_PUBLISHERID=624e25402d2a7c268c34f1d8&amp;AV_VIDEOURL=https%3A%2F%2Fcmcsports.cloudmcapp.com%2F58dda1ca64a3421fbba2963a7bbd9a8e%2Fc2a42c131b054fb780c8ecdbad173eff%2Fc9695f62561c4c3fb4cdb81d22913845%2Findex.m3u8&amp;AV_SLOTT=-2&amp;AV_SECURED=1&amp;AV_LANGUAGE=en&amp;AV_URL=https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&amp;AV_CHANNELID=645cfd1549eab506390ef127&amp;tgt=0&amp;AV_SUBID=&amp;AV_CDIM1=&amp;AV_CDIM2=&amp;AV_CDIM3=&amp;AV_ABT=3&amp;pce=1&amp;npx=1&amp;AV_DETDOMAIN=dev.nxconnect.me&amp;AV_DADPOS=3&amp;AV_OPLACEMENT=1&amp;AV_TAG=645cfd8b22ec41080c0dcde6&amp;AV_TEMPLATE=645cfc797a9e8bfb5d06b0f6&amp;AV_GPID=/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&amp;d36=6.2.117&amp;responsive=1&amp;sver=4&amp;avtoken=197141&amp;omv=1.0.1&amp;clsid=9473afeb-fe8b-44de-afed-83aaa9c11f52&amp;rando=71&amp;AV_WIDTH=627&amp;AV_HEIGHT=353&amp;AV_DNT=0&amp;cb=1689922197143&amp;AV_C_USER_ID=1685096441805-963181047058-001199-004-009788&amp;wfc=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="AV_DADPOS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_DADPOS</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="d36" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d36</stringProp>
                  <stringProp name="Argument.value">6.2.117</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_TEMPLATE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_TEMPLATE</stringProp>
                  <stringProp name="Argument.value">645cfc797a9e8bfb5d06b0f6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="avtoken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">avtoken</stringProp>
                  <stringProp name="Argument.value">197141</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_SECURED" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_SECURED</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_DETDOMAIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_DETDOMAIN</stringProp>
                  <stringProp name="Argument.value">dev.nxconnect.me</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_OPLACEMENT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_OPLACEMENT</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_WIDTH" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_WIDTH</stringProp>
                  <stringProp name="Argument.value">627</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_DNT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_DNT</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_TAGID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_TAGID</stringProp>
                  <stringProp name="Argument.value">645cfd8b22ec41080c0dcde6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_PUBLISHERID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_PUBLISHERID</stringProp>
                  <stringProp name="Argument.value">624e25402d2a7c268c34f1d8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_URL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AV_URL</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="omv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">omv</stringProp>
                  <stringProp name="Argument.value">1.0.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_SLOTT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_SLOTT</stringProp>
                  <stringProp name="Argument.value">-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_ABT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_ABT</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_CHANNELID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_CHANNELID</stringProp>
                  <stringProp name="Argument.value">645cfd1549eab506390ef127</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_GPID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AV_GPID</stringProp>
                  <stringProp name="Argument.value">/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rando" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rando</stringProp>
                  <stringProp name="Argument.value">71</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb</stringProp>
                  <stringProp name="Argument.value">1689922197143</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tgt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tgt</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clsid</stringProp>
                  <stringProp name="Argument.value">9473afeb-fe8b-44de-afed-83aaa9c11f52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_TAG" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_TAG</stringProp>
                  <stringProp name="Argument.value">645cfd8b22ec41080c0dcde6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sver</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_C_USER_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_C_USER_ID</stringProp>
                  <stringProp name="Argument.value">1685096441805-963181047058-001199-004-009788</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_SUBID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_SUBID</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_HEIGHT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_HEIGHT</stringProp>
                  <stringProp name="Argument.value">353</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_CDIM1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_CDIM1</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_CDIM2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_CDIM2</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_CDIM3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_CDIM3</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="wfc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wfc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_VIDEOURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AV_VIDEOURL</stringProp>
                  <stringProp name="Argument.value">https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npx</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="responsive" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">responsive</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AV_LANGUAGE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AV_LANGUAGE</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_20}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/adserver/tag/3/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[32]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[33]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[34]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tt</stringProp>
                  <stringProp name="Argument.value">1d33321a128c9614</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">env&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922194.916,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;5c5a3c3f7d6f44c1821afa681e5283f7&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.220Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;5c5a3c3f7d6f44c1821afa681e5283f7&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.219,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;5c5a3c3f7d6f44c1821afa681e5283f7&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.220Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;5c5a3c3f7d6f44c1821afa681e5283f7&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.219,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">gda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">497.089881</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">7279</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">2683&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922195.173,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1689922186549,&quot;n&quot;:0,&quot;u&quot;:1540,&quot;ue&quot;:1540,&quot;f&quot;:7,&quot;dn&quot;:15,&quot;dne&quot;:40,&quot;c&quot;:40,&quot;s&quot;:40,&quot;ce&quot;:652,&quot;rq&quot;:652,&quot;rp&quot;:1519,&quot;rpe&quot;:2065,&quot;di&quot;:2069,&quot;ds&quot;:4965,&quot;de&quot;:4965,&quot;dc&quot;:7112,&quot;l&quot;:7113,&quot;le&quot;:7130},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5611</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3446</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922196286&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.154,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.182,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.217,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}},&quot;extra&quot;:{&quot;arguments&quot;:[{&quot;type&quot;:&quot;readystatechange&quot;,&quot;target&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;currentTarget&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;isTrusted&quot;:true,&quot;__nrNode&quot;:null}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[35]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tt</stringProp>
                  <stringProp name="Argument.value">1d33321a128c9614</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">env&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922194.916,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;974d5def3be244a8b1bdf43cec7b19a5&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.225Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;974d5def3be244a8b1bdf43cec7b19a5&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.224,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;974d5def3be244a8b1bdf43cec7b19a5&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.225Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;974d5def3be244a8b1bdf43cec7b19a5&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.224,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">gda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">497.089881</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">7279</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">2683&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922195.173,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1689922186549,&quot;n&quot;:0,&quot;u&quot;:1540,&quot;ue&quot;:1540,&quot;f&quot;:7,&quot;dn&quot;:15,&quot;dne&quot;:40,&quot;c&quot;:40,&quot;s&quot;:40,&quot;ce&quot;:652,&quot;rq&quot;:652,&quot;rp&quot;:1519,&quot;rpe&quot;:2065,&quot;di&quot;:2069,&quot;ds&quot;:4965,&quot;de&quot;:4965,&quot;dc&quot;:7112,&quot;l&quot;:7113,&quot;le&quot;:7130},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5611</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3446</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922196286&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.154,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.182,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.217,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}},&quot;extra&quot;:{&quot;arguments&quot;:[{&quot;type&quot;:&quot;readystatechange&quot;,&quot;target&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;currentTarget&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;isTrusted&quot;:true,&quot;__nrNode&quot;:null}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[36]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-onstream&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;OVERLAY&quot;,&quot;subType&quot;:&quot;INIT&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:0.009,&quot;activeOverlayTime&quot;:0.009,&quot;containerViewability&quot;:0},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:null,&quot;eventOrder&quot;:1,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:null,&quot;videoSessionId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[37]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demand.qortex.ai/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_21}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[38]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-onstream&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;OVERLAY&quot;,&quot;subType&quot;:&quot;CLS_INIT&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:0.088,&quot;activeOverlayTime&quot;:0.088,&quot;containerViewability&quot;:0,&quot;debug&quot;:{&quot;clsValue&quot;:0.015}},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:null,&quot;eventOrder&quot;:2,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:null,&quot;videoSessionId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[39]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[40]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Data&quot;:{&quot;eventType&quot;:&quot;ContentVideoStart&quot;,&quot;adServer&quot;:&quot;aniview&quot;,&quot;publisherId&quot;:1086,&quot;videoId&quot;:108055,&quot;contentProducerId&quot;:1006,&quot;deviceType&quot;:&quot;desktop&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;playlistId&quot;:1683813865,&quot;userAgent&quot;:&quot;Mozilla/5.0%20(Windows%20NT%2010.0;%20Win64;%20x64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/114.0.0.0%20Safari/537.36&quot;,&quot;timeStamp&quot;:1689922197465,&quot;sessionId&quot;:&quot;rhpr079ij&quot;,&quot;bidCpm&quot;:0,&quot;floorCpm&quot;:0,&quot;bidCode&quot;:&quot;&quot;,&quot;bidder&quot;:&quot;&quot;,&quot;playerWidth&quot;:250.8,&quot;playerHeight&quot;:141.20000000000002,&quot;error&quot;:&quot;&quot;},&quot;PartitionKey&quot;:1689922197}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[41]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tt</stringProp>
                  <stringProp name="Argument.value">1d33321a128c9614</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">env&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922194.916,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;76adcff740124bb598b8af3f40d32418&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.482Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;76adcff740124bb598b8af3f40d32418&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.482,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;76adcff740124bb598b8af3f40d32418&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.482Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:46,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;76adcff740124bb598b8af3f40d32418&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.482,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">gda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">497.089881</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">7279</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">2683&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922195.173,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1689922186549,&quot;n&quot;:0,&quot;u&quot;:1540,&quot;ue&quot;:1540,&quot;f&quot;:7,&quot;dn&quot;:15,&quot;dne&quot;:40,&quot;c&quot;:40,&quot;s&quot;:40,&quot;ce&quot;:652,&quot;rq&quot;:652,&quot;rp&quot;:1519,&quot;rpe&quot;:2065,&quot;di&quot;:2069,&quot;ds&quot;:4965,&quot;de&quot;:4965,&quot;dc&quot;:7112,&quot;l&quot;:7113,&quot;le&quot;:7130},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5611</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3446</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922196286&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.154,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.182,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.217,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.466,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922197},&quot;ContentVideoStart&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] ContentVideoStart&quot;},{&quot;timestamp&quot;:1689922197.481,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}},&quot;extra&quot;:{&quot;arguments&quot;:[{&quot;type&quot;:&quot;readystatechange&quot;,&quot;target&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;currentTarget&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;isTrusted&quot;:true,&quot;__nrNode&quot;:null}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[42]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4505238747742208/envelope/?sentry_key=32af5f9dcf8b45b586a0226fc6a982f8&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.18.0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.18.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">32af5f9dcf8b45b586a0226fc6a982f8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tt</stringProp>
                  <stringProp name="Argument.value">1d33321a128c9614</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">env&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922194.916,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tv</stringProp>
                  <stringProp name="Argument.value">r20230719</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">2683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">gda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">497.089881</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">7279</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">2683&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922195.173,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;f99d3bd4ff9a48a58be8f17d63b03a4b&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.488Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}&#xa;{&quot;type&quot;:&quot;event&quot;}&#xa;{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;f99d3bd4ff9a48a58be8f17d63b03a4b&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.487,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;f99d3bd4ff9a48a58be8f17d63b03a4b&quot;,&quot;sent_at&quot;:&quot;2023-07-21T06:49:57.488Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;}}
{&quot;type&quot;:&quot;event&quot;}
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;InvalidStateError&quot;,&quot;value&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;filename&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;function&quot;:&quot;XMLHttpRequest.nrWrapper&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:2,&quot;colno&quot;:14381},{&quot;filename&quot;:&quot;https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.o&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1,&quot;colno&quot;:96472},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;XMLHttpRequest.&lt;anonymous&gt;&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:27,&quot;colno&quot;:34},{&quot;filename&quot;:&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;function&quot;:&quot;handleResponse&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:9,&quot;colno&quot;:37}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;instrument&quot;,&quot;handled&quot;:true,&quot;data&quot;:{&quot;function&quot;:&quot;addEventListener&quot;,&quot;handler&quot;:&quot;&lt;anonymous&gt;&quot;,&quot;target&quot;:&quot;EventTarget&quot;}}}]},&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;DOMException.code&quot;:&quot;11&quot;},&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;f99d3bd4ff9a48a58be8f17d63b03a4b&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;timestamp&quot;:1689922197.487,&quot;environment&quot;:&quot;develop&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.18.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.18.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1689922191.163,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/chris.chidgey.2155&quot;,&quot;to&quot;:&quot;/chris.chidgey.2155&quot;}},{&quot;timestamp&quot;:1689922191.701,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922191.798,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;fedf53c2ca8d4e67a9fa670c3fe8a5fc&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1689922191.886,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922192.16,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922193.164,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;,&quot;message&quot;:&quot;d6bcc4caaef04a20a86e3061a95e3575&quot;},{&quot;timestamp&quot;:1689922193.774,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://pagead2.googlesyndication.com/getconfig/sodar?sv</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1689922186549,&quot;n&quot;:0,&quot;u&quot;:1540,&quot;ue&quot;:1540,&quot;f&quot;:7,&quot;dn&quot;:15,&quot;dne&quot;:40,&quot;c&quot;:40,&quot;s&quot;:40,&quot;ce&quot;:652,&quot;rq&quot;:652,&quot;rp&quot;:1519,&quot;rpe&quot;:2065,&quot;di&quot;:2069,&quot;ds&quot;:4965,&quot;de&quot;:4965,&quot;dc&quot;:7112,&quot;l&quot;:7113,&quot;le&quot;:7130},&quot;navigation&quot;:{&quot;ty&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">5611</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">3446</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922196286&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.154,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.182,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.217,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1689922197.466,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;sending data&quot;,{&quot;Data&quot;:&quot;[Object]&quot;,&quot;PartitionKey&quot;:1689922197},&quot;ContentVideoStart&quot;],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;sending data [object Object] ContentVideoStart&quot;},{&quot;timestamp&quot;:1689922197.481,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;}},&quot;extra&quot;:{&quot;arguments&quot;:[{&quot;type&quot;:&quot;readystatechange&quot;,&quot;target&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;currentTarget&quot;:&quot;[object XMLHttpRequest]&quot;,&quot;isTrusted&quot;:true,&quot;__nrNode&quot;:null}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/4505238747742208/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[43]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-onstream&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;OVERLAY&quot;,&quot;subType&quot;:&quot;GROUPID_ZONE_MISMATCH&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:0.382,&quot;activeOverlayTime&quot;:0.382,&quot;containerViewability&quot;:0,&quot;debug&quot;:{&quot;definedGroupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;domainGroupId&quot;:null}},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:null,&quot;eventOrder&quot;:3,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:null,&quot;videoSessionId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[44]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;OVERLAY&quot;,&quot;subType&quot;:&quot;OVERLAY_GROUP_CONFIGS&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:0.391,&quot;activeOverlayTime&quot;:0.391,&quot;containerViewability&quot;:0,&quot;debug&quot;:{&quot;insertConfig&quot;:{&quot;allowedInsertsDesktopOnStream&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;overlay-horizontal-slide-color-detect&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;overlay-slide-icon-color-detect&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsDesktopFloating&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsDesktopInArticle&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;overlay-horizontal-slide-color-detect&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;overlay-slide-icon-color-detect&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsMobileOnStream&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsMobileFloating&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsMobileInArticle&quot;:[{&quot;insertType&quot;:&quot;squeeze-back-dynamic-fullwidth&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;squeeze-back-custom-full-background&quot;,&quot;overrides&quot;:[]},{&quot;insertType&quot;:&quot;display-squeeze-back-banner&quot;,&quot;overrides&quot;:[]}],&quot;allowedInsertsCtvOnStream&quot;:[]},&quot;gptAdUnitPath&quot;:&quot;&quot;,&quot;gptAdUnitPageUrl&quot;:&quot;&quot;,&quot;brandBug&quot;:false,&quot;insertDuration&quot;:30,&quot;insertFrequency&quot;:60,&quot;carouselEnabled&quot;:true,&quot;carouselSpeed&quot;:15,&quot;blockedUrls&quot;:[],&quot;neverInsert&quot;:[],&quot;blockAdx&quot;:true,&quot;persistentInserts&quot;:false,&quot;zIndexOverride&quot;:null,&quot;publisherId&quot;:&quot;160280&quot;,&quot;zoneId&quot;:&quot;193847&quot;,&quot;zoneType&quot;:&quot;web-on-stream&quot;,&quot;revContentWidgetId&quot;:null,&quot;destroyInsertOnClose&quot;:false,&quot;outbrain&quot;:false,&quot;active&quot;:true,&quot;osdConfig&quot;:null,&quot;bidOrder&quot;:[&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADX&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;ADK&quot;,&quot;OUTBRAIN&quot;,&quot;REV_CONTENT&quot;],&quot;mobileAdSizes&quot;:null,&quot;desktopAdSizes&quot;:null,&quot;zoneModifications&quot;:[],&quot;analyticsTier&quot;:null,&quot;videoPlayer&quot;:&quot;ANIPLAYER&quot;,&quot;videoPlayerConfigs&quot;:{&quot;anchorTarget&quot;:&quot;.avp-p-wrapper div:nth-child(1)&quot;,&quot;moveCxoFullscreen&quot;:&quot;before&quot;,&quot;moveCxoBleedover&quot;:&quot;before&quot;,&quot;advertisingIdentifiers&quot;:[{&quot;selectorState&quot;:&quot;display&quot;,&quot;nodeSelector&quot;:&quot;div [id*=&apos;content&apos;][style*=&apos;z-index: 0&apos;]&quot;},{&quot;selectorState&quot;:&quot;display&quot;,&quot;nodeSelector&quot;:&quot;div [id*=&apos;content&apos;][style*=&apos;z-index:0&apos;]&quot;},{&quot;selectorState&quot;:&quot;display&quot;,&quot;nodeSelector&quot;:&quot;div [id*=&apos;content&apos;][style*=&apos;z-index: -1&apos;]&quot;},{&quot;selectorState&quot;:&quot;display&quot;,&quot;nodeSelector&quot;:&quot;div [id*=&apos;content&apos;][style*=&apos;z-index:-1&apos;]&quot;}],&quot;squeezebackResizeLayers&quot;:[&quot;automatic&quot;],&quot;fullscreenAnchorTarget&quot;:&quot;.avp-p-gui&quot;,&quot;player&quot;:&quot;ANIPLAYER&quot;,&quot;moveCxoStandard&quot;:&quot;into&quot;,&quot;id&quot;:&quot;ANIPLAYER&quot;,&quot;searchTerm&quot;:&quot;div[id*=&apos;aniBox&apos;]&quot;}}},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:4,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[45]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;VIDEO&quot;,&quot;subType&quot;:&quot;STARTED&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:0.937,&quot;activeOverlayTime&quot;:0.937,&quot;videoTime&quot;:0.723543,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:100},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:5,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[46]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ads.resetsrv.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;start_time&quot;:1689922198969,&quot;language&quot;:&quot;en-US&quot;,&quot;site&quot;:{&quot;domain&quot;:&quot;https://dev.nxconnect.me&quot;,&quot;iframe&quot;:false,&quot;url&quot;:[1],&quot;https&quot;:true,&quot;referrer&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;imps&quot;:[{&quot;pub_id&quot;:&quot;117&quot;,&quot;site_id&quot;:null,&quot;placement_id&quot;:null,&quot;position&quot;:null,&quot;bid_floor&quot;:3,&quot;bid_floor_cur&quot;:&quot;USD&quot;,&quot;lat_long&quot;:null,&quot;inventory&quot;:null,&quot;visitor&quot;:null,&quot;keywords&quot;:&quot;,&quot;,&quot;zone_id&quot;:&quot;0&quot;,&quot;bid_id&quot;:&quot;2a35d57af7435d&quot;,&quot;imp_id&quot;:&quot;277fc28a-9366-40f7-b39b-d5bd7e161d0f&quot;,&quot;sizes&quot;:[[250,141]],&quot;coppa&quot;:0,&quot;media_types&quot;:{&quot;video&quot;:{&quot;context&quot;:&quot;instream&quot;,&quot;playerSize&quot;:[[250,141]],&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;protocols&quot;:[2,3,4,5],&quot;api&quot;:[1,2],&quot;w&quot;:250,&quot;h&quot;:141,&quot;linearity&quot;:1,&quot;plcmt&quot;:2,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6]}}}],&quot;sync_limit&quot;:5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_22}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[47]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://targeting.unrulymedia.com/unruly_prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bidderRequest&quot;:{&quot;bids&quot;:[{&quot;bidder&quot;:&quot;unruly&quot;,&quot;params&quot;:{&quot;siteId&quot;:243696,&quot;targetingUUID&quot;:&quot;243696&quot;},&quot;auctionId&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;floorData&quot;:{&quot;skipped&quot;:false,&quot;skipRate&quot;:0,&quot;location&quot;:&quot;adUnit&quot;},&quot;ortb2Imp&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;3714b4fa-96cb-402f-9602-af587a8ee328&quot;}},&quot;mediaTypes&quot;:{&quot;video&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;delivery&quot;:[1,2],&quot;api&quot;:[1,2],&quot;w&quot;:250,&quot;h&quot;:141,&quot;linearity&quot;:1,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6],&quot;floor&quot;:3}},&quot;adUnitCode&quot;:&quot;624f41dfe24b8d7e572dbdcf&quot;,&quot;transactionId&quot;:&quot;3714b4fa-96cb-402f-9602-af587a8ee328&quot;,&quot;sizes&quot;:[[250,141]],&quot;bidId&quot;:&quot;44d5bf2e0085ea&quot;,&quot;bidderRequestId&quot;:&quot;39e0294928a949&quot;,&quot;src&quot;:&quot;client&quot;,&quot;metrics&quot;:{&quot;requestBids.usp&quot;:0.40000152587890625,&quot;requestBids.priceFloors&quot;:1.0999984741210938,&quot;requestBids.validate&quot;:0.5,&quot;requestBids.makeRequests&quot;:5.399999618530273,&quot;adapter.client.validate&quot;:0,&quot;adapters.client.unruly.validate&quot;:0,&quot;adapter.client.buildRequests&quot;:0.39999961853027344,&quot;adapters.client.unruly.buildRequests&quot;:0.39999961853027344},&quot;bidRequestsCount&quot;:1,&quot;bidderRequestsCount&quot;:1,&quot;bidderWinsCount&quot;:0,&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}],&quot;invalidBidsCount&quot;:0,&quot;auctionStart&quot;:1689922198962,&quot;timeout&quot;:7000,&quot;refererInfo&quot;:{&quot;reachedTop&quot;:true,&quot;isAmp&quot;:false,&quot;numIframes&quot;:1,&quot;stack&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;topmostLocation&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;location&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;canonicalUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;ref&quot;:null,&quot;legacy&quot;:{&quot;reachedTop&quot;:true,&quot;isAmp&quot;:false,&quot;numIframes&quot;:1,&quot;stack&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;referer&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;canonicalUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}},&quot;metrics&quot;:{&quot;requestBids.usp&quot;:0.40000152587890625,&quot;requestBids.priceFloors&quot;:1.0999984741210938,&quot;requestBids.validate&quot;:0.5,&quot;requestBids.makeRequests&quot;:5.399999618530273,&quot;adapter.client.validate&quot;:0,&quot;adapters.client.unruly.validate&quot;:0,&quot;adapter.client.buildRequests&quot;:0.39999961853027344,&quot;adapters.client.unruly.buildRequests&quot;:0.39999961853027344},&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;start&quot;:1689922198970}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">unruly_prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[48]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hbopenbid.pubmatic.com/translator?source=prebid-client" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;1689922198973&quot;,&quot;at&quot;:1,&quot;cur&quot;:[&quot;USD&quot;],&quot;imp&quot;:[{&quot;id&quot;:&quot;60a8918f6396a1&quot;,&quot;tagid&quot;:&quot;3920745&quot;,&quot;bidfloor&quot;:3,&quot;secure&quot;:1,&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;}},&quot;bidfloorcur&quot;:&quot;USD&quot;,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playbackmethod&quot;:[6],&quot;api&quot;:[2],&quot;protocols&quot;:[2,3,5,6],&quot;w&quot;:250,&quot;h&quot;:141,&quot;battr&quot;:[],&quot;linearity&quot;:1,&quot;placement&quot;:3,&quot;plcmt&quot;:2}}],&quot;site&quot;:{&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;ref&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;publisher&quot;:{&quot;id&quot;:&quot;160912&quot;,&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58}},&quot;device&quot;:{&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;js&quot;:1,&quot;dnt&quot;:0,&quot;h&quot;:768,&quot;w&quot;:1366,&quot;language&quot;:&quot;en&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45},&quot;user&quot;:{&quot;geo&quot;:{}},&quot;ext&quot;:{&quot;wrapper&quot;:{&quot;wiid&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;wv&quot;:&quot;prebid_prebid_7.51.0&quot;,&quot;transactionId&quot;:&quot;6779ee4d-6ec4-47e7-8567-b514ee721c6a&quot;,&quot;wp&quot;:&quot;pbjs&quot;},&quot;epoch&quot;:1689922198976},&quot;source&quot;:{&quot;tid&quot;:&quot;6779ee4d-6ec4-47e7-8567-b514ee721c6a&quot;,&quot;ext&quot;:{&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}},&quot;tmax&quot;:7000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_13}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">translator?source=prebid-client</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[49]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid-server.rubiconproject.com/openrtb2/auction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;imp&quot;:[{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;54cee276-0373-490c-955a-e36a5f8dd42a&quot;,&quot;prebid&quot;:{&quot;bidder&quot;:{&quot;rubicon&quot;:{&quot;accountId&quot;:24586,&quot;siteId&quot;:423066,&quot;zoneId&quot;:2443028,&quot;position&quot;:&quot;atf&quot;,&quot;floor&quot;:3,&quot;video&quot;:{&quot;size_id&quot;:201,&quot;playerWidth&quot;:250,&quot;playerHeight&quot;:141,&quot;language&quot;:&quot;en&quot;,&quot;plcmt&quot;:2,&quot;context&quot;:&quot;instream&quot;,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6]}}},&quot;adunitcode&quot;:&quot;628d67fc98adfe247b699b64&quot;,&quot;floors&quot;:{&quot;floorMin&quot;:3}}},&quot;id&quot;:&quot;628d67fc98adfe247b699b64&quot;,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;video/x-ms-wmv&quot;,&quot;application/javascript&quot;],&quot;protocols&quot;:[2,3,5,6],&quot;maxduration&quot;:60,&quot;linearity&quot;:1,&quot;api&quot;:[2],&quot;w&quot;:250,&quot;h&quot;:141,&quot;plcmt&quot;:2,&quot;placement&quot;:1,&quot;playbackmethod&quot;:[6],&quot;pos&quot;:1},&quot;bidfloor&quot;:3,&quot;bidfloorcur&quot;:&quot;USD&quot;}],&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58,&quot;language&quot;:&quot;en&quot;},&quot;ext&quot;:{&quot;data&quot;:{}}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45},&quot;id&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;test&quot;:0,&quot;tmax&quot;:7000,&quot;source&quot;:{&quot;tid&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;ext&quot;:{&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}}},&quot;ext&quot;:{&quot;prebid&quot;:{&quot;auctiontimestamp&quot;:1689922198962,&quot;targeting&quot;:{&quot;includewinners&quot;:true,&quot;includebidderkeys&quot;:false,&quot;pricegranularity&quot;:{&quot;ranges&quot;:[{&quot;max&quot;:20,&quot;increment&quot;:0.01}]}},&quot;channel&quot;:{&quot;name&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;v7.51.0&quot;},&quot;floors&quot;:{&quot;enabled&quot;:false},&quot;cache&quot;:{&quot;vastxml&quot;:{&quot;returnCreative&quot;:false}},&quot;bidders&quot;:{&quot;rubicon&quot;:{&quot;integration&quot;:&quot;pbjs&quot;}}}},&quot;cur&quot;:[&quot;USD&quot;],&quot;user&quot;:{&quot;ext&quot;:{&quot;data&quot;:{}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_12}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">openrtb2/auction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[50]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hb.yellowblue.io/hb-multi" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;wrapper_type&quot;:&quot;prebidjs&quot;,&quot;wrapper_vendor&quot;:&quot;pbjs&quot;,&quot;wrapper_version&quot;:&quot;7.51.0&quot;,&quot;adapter_version&quot;:&quot;6.0.0&quot;,&quot;auction_start&quot;:1689922198986,&quot;publisher_id&quot;:&quot;60c8b4e48985e4000198293e&quot;,&quot;publisher_name&quot;:&quot;dev.nxconnect.me&quot;,&quot;site_domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;dnt&quot;:0,&quot;device_type&quot;:&quot;1&quot;,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;is_wrapper&quot;:false,&quot;session_id&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;tmax&quot;:7000,&quot;site_metadata&quot;:&quot;{\&quot;domain\&quot;:\&quot;dev.nxconnect.me\&quot;,\&quot;publisher\&quot;:{\&quot;domain\&quot;:\&quot;nxconnect.me\&quot;},\&quot;page\&quot;:\&quot;https://dev.nxconnect.me/chris.chidgey.2155\&quot;,\&quot;content\&quot;:{\&quot;title\&quot;:\&quot;SEC Winners Market: There Are Only 4 Teams That Matter!\&quot;,\&quot;url\&quot;:\&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8\&quot;,\&quot;keywords\&quot;:\&quot;\&quot;,\&quot;len\&quot;:58}}&quot;,&quot;cs_method&quot;:&quot;iframe&quot;,&quot;schain&quot;:&quot;1.0,1!cloudmcapp.com,1086,1,,,&quot;,&quot;referrer&quot;:null,&quot;page_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;bids&quot;:[{&quot;mediaType&quot;:&quot;video&quot;,&quot;adUnitCode&quot;:&quot;63232a166511c77fe34b6e26&quot;,&quot;sizes&quot;:[[250,141]],&quot;floorPrice&quot;:3,&quot;bidId&quot;:&quot;10de4c645472c77&quot;,&quot;bidderRequestId&quot;:&quot;9fe696d8ddd734&quot;,&quot;loop&quot;:1,&quot;transactionId&quot;:&quot;b6ba8147-4c1f-49d8-8d31-f5386f5e2d42&quot;,&quot;coppa&quot;:0,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;playbackMethod&quot;:6,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_11}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hb-multi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[51]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid.media.net/rtb/prebid?cid=8CUENMD10" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;ref&quot;:&quot;&quot;,&quot;topMostLocation&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;isTop&quot;:true,&quot;og_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;ext&quot;:{&quot;customer_id&quot;:&quot;8CUENMD10&quot;,&quot;prebid_version&quot;:&quot;v7.51.0&quot;,&quot;gdpr_applies&quot;:false,&quot;usp_applies&quot;:false,&quot;coppa_applies&quot;:false,&quot;screen&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1}},&quot;id&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;imp&quot;:[{&quot;id&quot;:&quot;12f74c7e51df0b2&quot;,&quot;transactionId&quot;:&quot;49bc7660-228b-43c2-9f74-26793d09b354&quot;,&quot;ext&quot;:{&quot;dfp_id&quot;:&quot;636a5801ed2dd1462b4fb0e3&quot;,&quot;display_count&quot;:1,&quot;visibility&quot;:0},&quot;all&quot;:{&quot;cid&quot;:&quot;8CUENMD10&quot;,&quot;crid&quot;:&quot;766503619&quot;,&quot;bidfloor&quot;:3},&quot;ortb2Imp&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;49bc7660-228b-43c2-9f74-26793d09b354&quot;}},&quot;video&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;protocols&quot;:[2,3,5,6],&quot;w&quot;:250,&quot;h&quot;:141,&quot;startdelay&quot;:0,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;playbackmethod&quot;:[6],&quot;api&quot;:[2],&quot;plcmt&quot;:2},&quot;tagid&quot;:&quot;766503619&quot;,&quot;bidfloor&quot;:3,&quot;bidfloors&quot;:[{&quot;floor&quot;:3,&quot;currency&quot;:&quot;USD&quot;,&quot;mediaType&quot;:&quot;video&quot;}]}],&quot;ortb2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;tmax&quot;:7000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_14}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">rtb/prebid?cid=8CUENMD10</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[52]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ib.adnxs.com/ut/v3/prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tags&quot;:[{&quot;sizes&quot;:[{&quot;width&quot;:250,&quot;height&quot;:141}],&quot;primary_size&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;ad_types&quot;:[&quot;video&quot;],&quot;uuid&quot;:&quot;14b32608618efdb&quot;,&quot;id&quot;:24996606,&quot;allow_smaller_sizes&quot;:true,&quot;use_pmt_rule&quot;:false,&quot;prebid&quot;:true,&quot;disable_psa&quot;:true,&quot;reserve&quot;:3,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;hb_source&quot;:1,&quot;require_asset_url&quot;:true,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playback_method&quot;:2},&quot;video_frameworks&quot;:[2]}],&quot;user&quot;:{},&quot;sdk&quot;:{&quot;source&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;7.51.0&quot;},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;referrer_detection&quot;:{&quot;rd_ref&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_top&quot;:true,&quot;rd_ifs&quot;:0,&quot;rd_stk&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_can&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ut/v3/prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[53]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://hb.minutemedia-prebid.com/hb-mm-multi" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;wrapper_type&quot;:&quot;prebidjs&quot;,&quot;wrapper_vendor&quot;:&quot;pbjs&quot;,&quot;wrapper_version&quot;:&quot;7.51.0&quot;,&quot;adapter_version&quot;:&quot;6.0.0&quot;,&quot;auction_start&quot;:1689922199002,&quot;publisher_id&quot;:&quot;01g7cpdj1ma7&quot;,&quot;publisher_name&quot;:&quot;dev.nxconnect.me&quot;,&quot;site_domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;dnt&quot;:0,&quot;device_type&quot;:&quot;1&quot;,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;session_id&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;tmax&quot;:7000,&quot;site_metadata&quot;:&quot;{\&quot;domain\&quot;:\&quot;dev.nxconnect.me\&quot;,\&quot;publisher\&quot;:{\&quot;domain\&quot;:\&quot;nxconnect.me\&quot;},\&quot;page\&quot;:\&quot;https://dev.nxconnect.me/chris.chidgey.2155\&quot;,\&quot;content\&quot;:{\&quot;title\&quot;:\&quot;SEC Winners Market: There Are Only 4 Teams That Matter!\&quot;,\&quot;url\&quot;:\&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8\&quot;,\&quot;keywords\&quot;:\&quot;\&quot;,\&quot;len\&quot;:58}}&quot;,&quot;cs_method&quot;:&quot;iframe&quot;,&quot;schain&quot;:&quot;1.0,1!cloudmcapp.com,1086,1,,,&quot;,&quot;referrer&quot;:null,&quot;page_url&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;bids&quot;:[{&quot;mediaType&quot;:&quot;video&quot;,&quot;adUnitCode&quot;:&quot;62d03fe298446014c02f1964&quot;,&quot;sizes&quot;:[[250,141]],&quot;floorPrice&quot;:3,&quot;bidId&quot;:&quot;16ad7117a23047a&quot;,&quot;loop&quot;:1,&quot;bidderRequestId&quot;:&quot;15cf4f021188413&quot;,&quot;transactionId&quot;:&quot;dd9b16d0-a1f6-4616-a45c-09f51b75c37f&quot;,&quot;coppa&quot;:0,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;placementId&quot;:&quot;cmc_pb&quot;,&quot;playbackMethod&quot;:6,&quot;placement&quot;:3,&quot;linearity&quot;:1,&quot;plcmt&quot;:2}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hb-mm-multi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[54]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ads.stickyadstv.com/www/delivery/swfIndex.php?reqType=AdsSetup&amp;protocolVersion=4.2&amp;zoneId=21155983&amp;componentId=prebid&amp;componentSubId=mustang&amp;timestamp=1689922199007&amp;_fw_bidfloor=3&amp;_fw_bidfloorcur=USD&amp;pbjs_version=7.51.0&amp;pKey=-1518922409&amp;schain=1.0%2C1!cloudmcapp.com%2C1086%2C1%2C%2C%2C&amp;loc=https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&amp;playerSize=250x141&amp;video_context=instream&amp;video_placement=3&amp;video_plcmt=2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loc</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_plcmt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_plcmt</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentId</stringProp>
                  <stringProp name="Argument.value">prebid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pbjs_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pbjs_version</stringProp>
                  <stringProp name="Argument.value">7.51.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="playerSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">playerSize</stringProp>
                  <stringProp name="Argument.value">250x141</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_placement" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_placement</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="schain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">schain</stringProp>
                  <stringProp name="Argument.value">1.0,1!cloudmcapp.com,1086,1,,,</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="video_context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">video_context</stringProp>
                  <stringProp name="Argument.value">instream</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_bidfloor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_bidfloor</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reqType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reqType</stringProp>
                  <stringProp name="Argument.value">AdsSetup</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_fw_bidfloorcur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_fw_bidfloorcur</stringProp>
                  <stringProp name="Argument.value">USD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zoneId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zoneId</stringProp>
                  <stringProp name="Argument.value">21155983</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocolVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">protocolVersion</stringProp>
                  <stringProp name="Argument.value">4.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="componentSubId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">componentSubId</stringProp>
                  <stringProp name="Argument.value">mustang</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pKey</stringProp>
                  <stringProp name="Argument.value">-1518922409</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timestamp</stringProp>
                  <stringProp name="Argument.value">1689922199007</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">www/delivery/swfIndex.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[55]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://prebid.a-mo.net/a/c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;a&quot;:&quot;f24db14a-7b79-436d-b6b6-84cd9f828dbc&quot;,&quot;B&quot;:0,&quot;b&quot;:&quot;dev.nxconnect.me&quot;,&quot;brc&quot;:1,&quot;bwc&quot;:0,&quot;trc&quot;:1,&quot;tm&quot;:false,&quot;V&quot;:&quot;7.51.0&quot;,&quot;vg&quot;:&quot;pbjs&quot;,&quot;i&quot;:&quot;bnhjb25uZWN0Lm1l&quot;,&quot;l&quot;:{},&quot;f&quot;:0.01,&quot;cv&quot;:&quot;pba1.3.2&quot;,&quot;st&quot;:&quot;prebid&quot;,&quot;h&quot;:768,&quot;w&quot;:1366,&quot;gs&quot;:&quot;&quot;,&quot;gc&quot;:&quot;&quot;,&quot;gpp&quot;:{&quot;gppString&quot;:&quot;&quot;,&quot;applicableSections&quot;:&quot;&quot;},&quot;u&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;do&quot;:&quot;dev.nxconnect.me&quot;,&quot;re&quot;:null,&quot;am&quot;:null,&quot;usp&quot;:&quot;1---&quot;,&quot;smt&quot;:1,&quot;d&quot;:&quot;&quot;,&quot;m&quot;:{&quot;20a637292736739&quot;:{&quot;au&quot;:&quot;628d665b1397f63a9a03f904&quot;,&quot;av&quot;:true,&quot;vd&quot;:{&quot;playerSize&quot;:[[250,141]],&quot;context&quot;:&quot;instream&quot;,&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;w&quot;:250,&quot;h&quot;:141,&quot;linearity&quot;:1,&quot;protocols&quot;:[2,3,5,6],&quot;plcmt&quot;:2,&quot;placement&quot;:3,&quot;playbackmethod&quot;:[6]},&quot;vr&quot;:true,&quot;ms&quot;:[[[250,141]],[],[]],&quot;aw&quot;:250,&quot;ah&quot;:141,&quot;tf&quot;:0,&quot;sc&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;f&quot;:3,&quot;rtb&quot;:{&quot;ext&quot;:{&quot;data&quot;:{&quot;pbadslot&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;},&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;tid&quot;:&quot;07531423-edb3-4f95-bcc1-16adfcd8365b&quot;}},&quot;i&quot;:&quot;YWRpdHVkZS1kaXJlY3Qtcm9uLmNvbQ&quot;}},&quot;cpp&quot;:0,&quot;fpd2&quot;:{&quot;site&quot;:{&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;publisher&quot;:{&quot;domain&quot;:&quot;nxconnect.me&quot;},&quot;page&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;content&quot;:{&quot;title&quot;:&quot;SEC Winners Market: There Are Only 4 Teams That Matter!&quot;,&quot;url&quot;:&quot;https://cmcsports.cloudmcapp.com/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;keywords&quot;:&quot;&quot;,&quot;len&quot;:58}},&quot;device&quot;:{&quot;w&quot;:1366,&quot;h&quot;:768,&quot;dnt&quot;:0,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;language&quot;:&quot;en&quot;,&quot;ip&quot;:&quot;123.252.165.154&quot;,&quot;pxratio&quot;:1,&quot;lmt&quot;:0,&quot;osv&quot;:&quot;10&quot;,&quot;model&quot;:&quot;Chrome&quot;,&quot;geo&quot;:{&quot;lon&quot;:73.7286,&quot;zip&quot;:&quot;411005&quot;,&quot;type&quot;:2,&quot;country&quot;:&quot;IND&quot;,&quot;region&quot;:&quot;MH&quot;,&quot;city&quot;:&quot;Pune&quot;,&quot;lat&quot;:18.6161,&quot;ipservice&quot;:3},&quot;os&quot;:&quot;Windows&quot;,&quot;connectiontype&quot;:0,&quot;carrier&quot;:&quot;Tata Teleservices Maharashtra&quot;,&quot;make&quot;:&quot;Google&quot;,&quot;devicetype&quot;:2,&quot;ppi&quot;:45}},&quot;tmax&quot;:7000,&quot;amp&quot;:false,&quot;ri&quot;:{&quot;r&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;t&quot;:true,&quot;l&quot;:1,&quot;s&quot;:[&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;],&quot;c&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;},&quot;sync&quot;:{&quot;d&quot;:500,&quot;l&quot;:5,&quot;t&quot;:0,&quot;e&quot;:true},&quot;eids&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[56]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ib.adnxs.com/ut/v3/prebid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;tags&quot;:[{&quot;sizes&quot;:[{&quot;width&quot;:250,&quot;height&quot;:141}],&quot;primary_size&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;ad_types&quot;:[&quot;video&quot;],&quot;uuid&quot;:&quot;224ed83da8a7f77&quot;,&quot;id&quot;:24344653,&quot;allow_smaller_sizes&quot;:true,&quot;use_pmt_rule&quot;:false,&quot;prebid&quot;:true,&quot;disable_psa&quot;:true,&quot;reserve&quot;:3,&quot;gpid&quot;:&quot;/624e25402d2a7c268c34f1d8/645cfd8b22ec41080c0dcde6/dev.nxconnect.me&quot;,&quot;hb_source&quot;:1,&quot;require_asset_url&quot;:true,&quot;video&quot;:{&quot;mimes&quot;:[&quot;video/mp4&quot;,&quot;application/javascript&quot;],&quot;minduration&quot;:1,&quot;maxduration&quot;:60,&quot;playback_method&quot;:2},&quot;video_frameworks&quot;:[2]}],&quot;user&quot;:{},&quot;sdk&quot;:{&quot;source&quot;:&quot;pbjs&quot;,&quot;version&quot;:&quot;7.51.0&quot;},&quot;schain&quot;:{&quot;nodes&quot;:[{&quot;hp&quot;:1,&quot;asi&quot;:&quot;cloudmcapp.com&quot;,&quot;sid&quot;:&quot;1086&quot;}],&quot;ver&quot;:&quot;1.0&quot;,&quot;complete&quot;:1},&quot;referrer_detection&quot;:{&quot;rd_ref&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_top&quot;:true,&quot;rd_ifs&quot;:0,&quot;rd_stk&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;rd_can&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ut/v3/prebid</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[57]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://beacons.cloudmcapp.com/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Data&quot;:{&quot;eventType&quot;:&quot;Inventory&quot;,&quot;adServer&quot;:&quot;aniview&quot;,&quot;publisherId&quot;:1086,&quot;videoId&quot;:108055,&quot;contentProducerId&quot;:1006,&quot;deviceType&quot;:&quot;desktop&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fdev.nxconnect.me%2Fchris.chidgey.2155&quot;,&quot;playlistId&quot;:1683813865,&quot;userAgent&quot;:&quot;Mozilla/5.0%20(Windows%20NT%2010.0;%20Win64;%20x64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/114.0.0.0%20Safari/537.36&quot;,&quot;timeStamp&quot;:1689922199663,&quot;sessionId&quot;:&quot;rhpr079ij&quot;,&quot;bidCpm&quot;:0,&quot;floorCpm&quot;:0,&quot;bidCode&quot;:&quot;&quot;,&quot;bidder&quot;:&quot;&quot;,&quot;playerWidth&quot;:250.8,&quot;playerHeight&quot;:141.20000000000002,&quot;error&quot;:&quot;&quot;},&quot;PartitionKey&quot;:1689922200}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[58]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;REQUEST&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:2.555,&quot;activeOverlayTime&quot;:2.555,&quot;totalBidsCount&quot;:1,&quot;adOpportunityBidCount&quot;:1,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX1702365136X1689922200&quot;,&quot;nativeImageSizeRequested&quot;:&quot;DEFAULT&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:2.34068,&quot;bannerSizeRequested&quot;:&quot;320x50&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:6,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[59]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demand.qortex.ai/api/v1/monetize/resources" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;placementTypeId&quot;:1,&quot;insertSizing&quot;:&quot;320x50&quot;,&quot;akuid&quot;:&quot;A4483175190514957927&quot;,&quot;eids&quot;:null,&quot;iiqEIDs&quot;:null,&quot;GPPString&quot;:null,&quot;GPPSids&quot;:null,&quot;TCString&quot;:null,&quot;GDPRApplies&quot;:0,&quot;USPString&quot;:null,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;mediaId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;startMilliseconds&quot;:7341,&quot;endMilliseconds&quot;:22341,&quot;marketplaceId&quot;:null,&quot;storeId&quot;:null,&quot;bundleId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_21}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/monetize/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[60]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;RESPONSE_EMPTY&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:3.519,&quot;activeOverlayTime&quot;:3.519,&quot;totalBidsCount&quot;:1,&quot;adOpportunityBidCount&quot;:1,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX1702365136X1689922200&quot;,&quot;bidCpm&quot;:0,&quot;cid&quot;:null,&quot;crid&quot;:null,&quot;seatId&quot;:null,&quot;adId&quot;:null,&quot;bidId&quot;:null,&quot;impressionType&quot;:&quot;any&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:3.306587},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:7,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[61]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1689922201474" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1689922201474</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;UserSession&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;$browser_version&quot;: 114,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.45.0&quot;,&quot;$insert_id&quot;: &quot;od5crn9v7ydm82j5&quot;,&quot;time&quot;: 1689922188.076,&quot;distinct_id&quot;: &quot;188579451a569-0e35d0bf97c259-26031a51-100200-188579451a6cab&quot;,&quot;$device_id&quot;: &quot;188579451a569-0e35d0bf97c259-26031a51-100200-188579451a6cab&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;source&quot;: 4,&quot;user&quot;: &quot;chris.chidgey.2155&quot;,&quot;username&quot;: &quot;chris.chidgey.2155&quot;,&quot;token&quot;: &quot;faa5747dbf9cde86407d515211bd876a&quot;,&quot;$duration&quot;: 219.103}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_19}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[62]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:10,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_15}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">5328df91-751f-4ff8-b3b3-77aaa435282e</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">e87984e64199d7691978d1fb5c2b5158ea6df35a09323ddf17ea83bb2e24325b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[63]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;REQUEST&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:4.522,&quot;activeOverlayTime&quot;:4.522,&quot;totalBidsCount&quot;:2,&quot;adOpportunityBidCount&quot;:2,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX3822731500X1689922202&quot;,&quot;nativeImageSizeRequested&quot;:&quot;DEFAULT&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:4.308739,&quot;bannerSizeRequested&quot;:&quot;468x60&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:8,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[64]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demand.qortex.ai/api/v1/monetize/resources" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;placementTypeId&quot;:1,&quot;insertSizing&quot;:&quot;468x60&quot;,&quot;akuid&quot;:&quot;A4483175190514957927&quot;,&quot;eids&quot;:null,&quot;iiqEIDs&quot;:null,&quot;GPPString&quot;:null,&quot;GPPSids&quot;:null,&quot;TCString&quot;:null,&quot;GDPRApplies&quot;:0,&quot;USPString&quot;:null,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;bidId&quot;:&quot;CX1702365136X1689922200&quot;,&quot;mediaId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;startMilliseconds&quot;:9309,&quot;endMilliseconds&quot;:24309,&quot;marketplaceId&quot;:null,&quot;storeId&quot;:null,&quot;bundleId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_21}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/monetize/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[65]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;OVERLAY&quot;,&quot;subType&quot;:&quot;TIME_REACHED&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:5.009,&quot;activeOverlayTime&quot;:5.009,&quot;containerViewability&quot;:100,&quot;timeReached&quot;:&quot;5_SECONDS&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:9,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[66]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;RESPONSE_EMPTY&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:5.077,&quot;activeOverlayTime&quot;:5.077,&quot;totalBidsCount&quot;:2,&quot;adOpportunityBidCount&quot;:2,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX3822731500X1689922202&quot;,&quot;bidCpm&quot;:0,&quot;cid&quot;:null,&quot;crid&quot;:null,&quot;seatId&quot;:null,&quot;adId&quot;:null,&quot;bidId&quot;:null,&quot;impressionType&quot;:&quot;any&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:4.864032},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:10,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[67]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;VIDEO&quot;,&quot;subType&quot;:&quot;TIME_REACHED&quot;,&quot;eventOriginSource&quot;:&quot;PLATFORM&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:5.476,&quot;activeOverlayTime&quot;:5.476,&quot;videoTime&quot;:5.26266,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:100,&quot;timeReached&quot;:&quot;5_SECONDS&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:11,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[68]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;REQUEST&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:6.079,&quot;activeOverlayTime&quot;:6.079,&quot;totalBidsCount&quot;:3,&quot;adOpportunityBidCount&quot;:3,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX2766252187X1689922203&quot;,&quot;nativeImageSizeRequested&quot;:&quot;DEFAULT&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:5.865908,&quot;bannerSizeRequested&quot;:&quot;728x90&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:12,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[69]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demand.qortex.ai/api/v1/monetize/resources" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;placementTypeId&quot;:1,&quot;insertSizing&quot;:&quot;728x90&quot;,&quot;akuid&quot;:&quot;A4483175190514957927&quot;,&quot;eids&quot;:null,&quot;iiqEIDs&quot;:null,&quot;GPPString&quot;:null,&quot;GPPSids&quot;:null,&quot;TCString&quot;:null,&quot;GDPRApplies&quot;:0,&quot;USPString&quot;:null,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;bidId&quot;:&quot;CX3822731500X1689922202&quot;,&quot;mediaId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;startMilliseconds&quot;:10866,&quot;endMilliseconds&quot;:25866,&quot;marketplaceId&quot;:null,&quot;storeId&quot;:null,&quot;bundleId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_21}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/monetize/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[70]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;RESPONSE_EMPTY&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:6.635,&quot;activeOverlayTime&quot;:6.635,&quot;totalBidsCount&quot;:3,&quot;adOpportunityBidCount&quot;:3,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX2766252187X1689922203&quot;,&quot;bidCpm&quot;:0,&quot;cid&quot;:null,&quot;crid&quot;:null,&quot;seatId&quot;:null,&quot;adId&quot;:null,&quot;bidId&quot;:null,&quot;impressionType&quot;:&quot;any&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:6.421121},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:13,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[71]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18373&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">18373</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ptid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ptid</stringProp>
                  <stringProp name="Argument.value">4bbcba26-0001-bdd3-d5dd-018977349003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bel.6;e,&apos;fp,22j,;e,&apos;fcp,22j,;e,&apos;load,5i2,1;6,&apos;cls,0.0019360808133285215" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bel.6;e,&apos;fp,22j,;e,&apos;fcp,22j,;e,&apos;load,5i2,1;6,&apos;cls,0.0019360808133285215</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">events/1/NRBR-eebce11a0e47205f1a0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[72]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/jserrors/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18375&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003&amp;pve=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;err&quot;:[{&quot;params&quot;:{&quot;stackHash&quot;:0,&quot;exceptionClass&quot;:&quot;SyntaxError&quot;,&quot;request_uri&quot;:&quot;/chris.chidgey.2155&quot;,&quot;message&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stack_trace&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;releaseIds&quot;:&quot;{}&quot;,&quot;pageview&quot;:1,&quot;firstOccurrenceTimestamp&quot;:1689922191799,&quot;browserInteractionId&quot;:&quot;35e35593-eea2-4845-8fe9-25ef9387cddf&quot;},&quot;custom&quot;:{},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;time&quot;:{&quot;t&quot;:5250}}},{&quot;params&quot;:{&quot;stackHash&quot;:1637081966,&quot;exceptionClass&quot;:&quot;InvalidStateError&quot;,&quot;request_uri&quot;:&quot;/chris.chidgey.2155&quot;,&quot;message&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stack_trace&quot;:&quot;Error: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).\n    at handleResponse (chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37)\n    at XMLHttpRequest.&lt;anonymous&gt; (chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:46:34)\n    at XMLHttpRequest.o (https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js:1:96472)&quot;,&quot;releaseIds&quot;:&quot;{}&quot;,&quot;pageview&quot;:1,&quot;firstOccurrenceTimestamp&quot;:1689922197222},&quot;custom&quot;:{},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;time&quot;:{&quot;t&quot;:21607,&quot;min&quot;:10673,&quot;max&quot;:10934,&quot;sos&quot;:233465285,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;stackHash&quot;:-458595023,&quot;exceptionClass&quot;:&quot;InvalidStateError&quot;,&quot;request_uri&quot;:&quot;/chris.chidgey.2155&quot;,&quot;message&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;stack_trace&quot;:&quot;Error: Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).\n    at handleResponse (chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:9:37)\n    at XMLHttpRequest.&lt;anonymous&gt; (chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js:27:34)\n    at XMLHttpRequest.o (https://dev.nxconnect.me/_next/static/chunks/pages/_app-c063976acc5fbc4b.js:1:96472)&quot;,&quot;releaseIds&quot;:&quot;{}&quot;,&quot;pageview&quot;:1,&quot;firstOccurrenceTimestamp&quot;:1689922197227},&quot;custom&quot;:{},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;time&quot;:{&quot;t&quot;:21619,&quot;min&quot;:10678,&quot;max&quot;:10941,&quot;sos&quot;:233725165,&quot;c&quot;:2}}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;api.gleap.io&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;api.gleap.io:443&quot;,&quot;pathname&quot;:&quot;/sessions&quot;,&quot;status&quot;:201},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:151},&quot;duration&quot;:{&quot;t&quot;:432},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:4723}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;api.gleap.io&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;api.gleap.io:443&quot;,&quot;pathname&quot;:&quot;/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:45673},&quot;duration&quot;:{&quot;t&quot;:541},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:4803}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;api.gleap.io&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;api.gleap.io:443&quot;,&quot;pathname&quot;:&quot;/sessions/ping&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:250,&quot;min&quot;:38,&quot;max&quot;:212,&quot;sos&quot;:46388,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:28,&quot;min&quot;:14,&quot;max&quot;:14,&quot;sos&quot;:392,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:745,&quot;min&quot;:287,&quot;max&quot;:458,&quot;sos&quot;:292133,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:20310,&quot;min&quot;:5154,&quot;max&quot;:15156,&quot;sos&quot;:256268052,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;pagead2.googlesyndication.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;pagead2.googlesyndication.com:443&quot;,&quot;pathname&quot;:&quot;/getconfig/sodar&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:15545},&quot;duration&quot;:{&quot;t&quot;:103},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:7124}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:40},&quot;duration&quot;:{&quot;t&quot;:1102},&quot;cbTime&quot;:{&quot;t&quot;:13},&quot;time&quot;:{&quot;t&quot;:7279}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:564},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:231},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:8394}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1599},&quot;rxSize&quot;:{&quot;t&quot;:36},&quot;duration&quot;:{&quot;t&quot;:450},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:8383}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;events.qortex.ai&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;events.qortex.ai:443&quot;,&quot;pathname&quot;:&quot;/api/v1/player-event&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:14,&quot;txSize&quot;:{&quot;t&quot;:16018,&quot;min&quot;:654,&quot;max&quot;:3822,&quot;sos&quot;:26480310,&quot;c&quot;:14},&quot;rxSize&quot;:{&quot;t&quot;:0},&quot;duration&quot;:{&quot;t&quot;:6141,&quot;min&quot;:342,&quot;max&quot;:791,&quot;sos&quot;:3009361,&quot;c&quot;:14},&quot;time&quot;:{&quot;t&quot;:189205,&quot;min&quot;:8886,&quot;max&quot;:17376,&quot;sos&quot;:2655192841,&quot;c&quot;:14},&quot;cbTime&quot;:{&quot;t&quot;:1,&quot;min&quot;:0,&quot;max&quot;:1,&quot;sos&quot;:1,&quot;c&quot;:13}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;09nfgyvbtl.execute-api.us-east-1.amazonaws.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443&quot;,&quot;pathname&quot;:&quot;/prod/playlist&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:1985},&quot;duration&quot;:{&quot;t&quot;:1112},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:8412}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;api-js.mixpanel.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;api-js.mixpanel.com:443&quot;,&quot;pathname&quot;:&quot;/track/&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:1971,&quot;min&quot;:969,&quot;max&quot;:1002,&quot;sos&quot;:1942965,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:50,&quot;min&quot;:25,&quot;max&quot;:25,&quot;sos&quot;:1250,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:313,&quot;min&quot;:126,&quot;max&quot;:187,&quot;sos&quot;:50845,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:1,&quot;min&quot;:0,&quot;max&quot;:1,&quot;sos&quot;:1,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:24666,&quot;min&quot;:9739,&quot;max&quot;:14927,&quot;sos&quot;:317663450,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;cmcsports.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;cmcsports.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:678},&quot;duration&quot;:{&quot;t&quot;:680},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:9931}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;cmcsports.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;cmcsports.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:608},&quot;duration&quot;:{&quot;t&quot;:33},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:10609}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;cmcsports.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;cmcsports.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:2},&quot;duration&quot;:{&quot;t&quot;:43},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:10636}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;cmcsports.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;cmcsports.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:2},&quot;duration&quot;:{&quot;t&quot;:45},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:10902}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;demand.qortex.ai&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;demand.qortex.ai:443&quot;,&quot;pathname&quot;:&quot;/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:17430},&quot;duration&quot;:{&quot;t&quot;:368},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:10753}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;go1.aniview.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;go1.aniview.com:443&quot;,&quot;pathname&quot;:&quot;/api/adserver/tag/3/&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:19558},&quot;duration&quot;:{&quot;t&quot;:1160},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:10595}}},{&quot;params&quot;:{&quot;method&quot;:&quot;PUT&quot;,&quot;hostname&quot;:&quot;beacons.cloudmcapp.com&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;beacons.cloudmcapp.com:443&quot;,&quot;pathname&quot;:&quot;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:1140,&quot;min&quot;:566,&quot;max&quot;:574,&quot;sos&quot;:649832,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:220,&quot;min&quot;:110,&quot;max&quot;:110,&quot;sos&quot;:24200,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:2349,&quot;min&quot;:980,&quot;max&quot;:1369,&quot;sos&quot;:2834561,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:24032,&quot;min&quot;:10917,&quot;max&quot;:13115,&quot;sos&quot;:291184114,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;demand.qortex.ai&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;demand.qortex.ai:443&quot;,&quot;pathname&quot;:&quot;/api/v1/monetize/resources&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:3,&quot;txSize&quot;:{&quot;t&quot;:1332,&quot;min&quot;:421,&quot;max&quot;:456,&quot;sos&quot;:592202,&quot;c&quot;:3},&quot;rxSize&quot;:{&quot;t&quot;:63,&quot;min&quot;:21,&quot;max&quot;:21,&quot;sos&quot;:1323,&quot;c&quot;:3},&quot;duration&quot;:{&quot;t&quot;:2064,&quot;min&quot;:551,&quot;max&quot;:961,&quot;sos&quot;:1531826,&quot;c&quot;:3},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:3},&quot;time&quot;:{&quot;t&quot;:45387,&quot;min&quot;:13298,&quot;max&quot;:16823,&quot;sos&quot;:692900889,&quot;c&quot;:3}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">jserrors/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18375&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003&amp;pve=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[73]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/events/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18378&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1020200822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">18378</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https://dev.nxconnect.me/chris.chidgey.2155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">693dac23a8bb5440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.236.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ptid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ptid</stringProp>
                  <stringProp name="Argument.value">4bbcba26-0001-bdd3-d5dd-018977349003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bel.7;2,,3n7,bx,,,&apos;POST,5l,&apos;api.gleap.io:443,&apos;/sessions,2,47,,&apos;0,!!!;2,,3pf,eu,,,&apos;GET,5k,1,&apos;/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3,,z8p,,3,!!!;2,,3z6,cp,,,0,5k,1,&apos;/sessions/ping,5w,e,,3,!!!;2,,5hw,2u,,,4,5k,&apos;pagead2.googlesyndication.com:443,&apos;/getconfig/sodar,,bzt,,3,!!!;2,,6uu,9p,,,0,5k,&apos;events.qortex.ai:443,&apos;/api/v1/player-event,jo,,1,3,!!!;2,,6ho,uv,,,4,5k,&apos;09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443,&apos;/prod/playlist,,1j5,,3,!!!;2,,7ij,55,,,0,5k,&apos;api-js.mixpanel.com:443,&apos;/track/,qx,p,,3,!!!;2,,7nv,ir,,,4,5k,&apos;cmcsports.cloudmcapp.com:443,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8,,iu,,3,!!!;2,,86p,o,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8,,gw,,3,!!!;2,,87g,w,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts,,2,,3,!!!;2,,8eu,v,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts,,2,,3,!!!;2,,8ap,a7,,,4,5k,&apos;demand.qortex.ai:443,&apos;/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me,,dg6,,3,!!!;2,,8am,j8,,,0,5k,9,a,i6,,,3,!!!;2,,8l0,a3,,,0,5k,9,a,km,,,3,!!!;2,,8l9,b7,,,0,5k,9,a,2y6,,,3,!!!;2,,8ct,ly,,,0,5k,9,a,j1,,,3,!!!;2,,86b,vs,,,4,5k,&apos;go1.aniview.com:443,&apos;/api/adserver/tag/3/,,f3a,,3,!!!;2,,90f,a0,,,0,5k,9,a,p8,,,3,!!!;2,,8f9,121,,,&apos;PUT,5k,&apos;beacons.cloudmcapp.com:443,&apos;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/,fy,32,,3,!!!;2,,a9c,ap,,,0,5k,9,a,ug,,,3,!!!;2,,a4b,r8,,,o,5k,p,q,fq,32,,3,!!!;2,,a9e,qo,,,0,5k,k,&apos;/api/v1/monetize/resources,bp,l,,3,!!!;2,,b05,9v,,,0,5k,9,a,vg,,,3,!!!;2,,bin,3h,,,0,5k,d,e,ru,p,,3,!!!;2,,bp0,7y,,,0,5k,1,6,12,e,,3,!!!;2,,bs0,9p,,,0,5k,9,a,uh,,,3,!!!;2,,bs2,fb,,,0,5k,k,r,cn,l,,3,!!!;2,,c5i,9s,,,0,5k,9,a,o7,,,3,!!!;2,,c7e,9i,,,0,5k,9,a,vh,,,3,!!!;2,,cii,iv,,,0,5k,9,a,q3,,,3,!!!;2,,cz9,9z,,,0,5k,9,a,ui,,,3,!!!;2,,czb,fc,,,0,5k,k,r,co,l,,3,!!!;2,,deo,9v,,,0,5k,9,a,vh,,,3,!!!" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bel.7;2,,3n7,bx,,,&apos;POST,5l,&apos;api.gleap.io:443,&apos;/sessions,2,47,,&apos;0,!!!;2,,3pf,eu,,,&apos;GET,5k,1,&apos;/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3,,z8p,,3,!!!;2,,3z6,cp,,,0,5k,1,&apos;/sessions/ping,5w,e,,3,!!!;2,,5hw,2u,,,4,5k,&apos;pagead2.googlesyndication.com:443,&apos;/getconfig/sodar,,bzt,,3,!!!;2,,6uu,9p,,,0,5k,&apos;events.qortex.ai:443,&apos;/api/v1/player-event,jo,,1,3,!!!;2,,6ho,uv,,,4,5k,&apos;09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443,&apos;/prod/playlist,,1j5,,3,!!!;2,,7ij,55,,,0,5k,&apos;api-js.mixpanel.com:443,&apos;/track/,qx,p,,3,!!!;2,,7nv,ir,,,4,5k,&apos;cmcsports.cloudmcapp.com:443,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8,,iu,,3,!!!;2,,86p,o,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8,,gw,,3,!!!;2,,87g,w,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts,,2,,3,!!!;2,,8eu,v,,,4,5k,f,&apos;/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts,,2,,3,!!!;2,,8ap,a7,,,4,5k,&apos;demand.qortex.ai:443,&apos;/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me,,dg6,,3,!!!;2,,8am,j8,,,0,5k,9,a,i6,,,3,!!!;2,,8l0,a3,,,0,5k,9,a,km,,,3,!!!;2,,8l9,b7,,,0,5k,9,a,2y6,,,3,!!!;2,,8ct,ly,,,0,5k,9,a,j1,,,3,!!!;2,,86b,vs,,,4,5k,&apos;go1.aniview.com:443,&apos;/api/adserver/tag/3/,,f3a,,3,!!!;2,,90f,a0,,,0,5k,9,a,p8,,,3,!!!;2,,8f9,121,,,&apos;PUT,5k,&apos;beacons.cloudmcapp.com:443,&apos;/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/,fy,32,,3,!!!;2,,a9c,ap,,,0,5k,9,a,ug,,,3,!!!;2,,a4b,r8,,,o,5k,p,q,fq,32,,3,!!!;2,,a9e,qo,,,0,5k,k,&apos;/api/v1/monetize/resources,bp,l,,3,!!!;2,,b05,9v,,,0,5k,9,a,vg,,,3,!!!;2,,bin,3h,,,0,5k,d,e,ru,p,,3,!!!;2,,bp0,7y,,,0,5k,1,6,12,e,,3,!!!;2,,bs0,9p,,,0,5k,9,a,uh,,,3,!!!;2,,bs2,fb,,,0,5k,k,r,cn,l,,3,!!!;2,,c5i,9s,,,0,5k,9,a,o7,,,3,!!!;2,,c7e,9i,,,0,5k,9,a,vh,,,3,!!!;2,,cii,iv,,,0,5k,9,a,q3,,,3,!!!;2,,cz9,9z,,,0,5k,9,a,ui,,,3,!!!;2,,czb,fc,,,0,5k,k,r,co,l,,3,!!!;2,,deo,9v,,,0,5k,9,a,vh,,,3,!!!</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">events/1/NRBR-eebce11a0e47205f1a0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[74]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.qortex.ai/api/v1/player-event" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;playerMode&quot;:&quot;desktop-floating&quot;,&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;hasAdkId&quot;:true,&quot;eventType&quot;:&quot;BID&quot;,&quot;subType&quot;:&quot;REQUEST&quot;,&quot;eventOriginSource&quot;:&quot;ADK&quot;,&quot;componentSource&quot;:&quot;OVERLAY&quot;,&quot;data&quot;:{&quot;overlayTime&quot;:7.644,&quot;activeOverlayTime&quot;:7.644,&quot;totalBidsCount&quot;:4,&quot;adOpportunityBidCount&quot;:4,&quot;adOpportunityId&quot;:&quot;CX2246645907X1689922200&quot;,&quot;bidRequestId&quot;:&quot;CX4096486279X1689922205&quot;,&quot;nativeImageSizeRequested&quot;:&quot;DEFAULT&quot;,&quot;componentDimensions&quot;:{&quot;width&quot;:250,&quot;height&quot;:141},&quot;containerViewability&quot;:1,&quot;videoTime&quot;:7.430211,&quot;bannerSizeRequested&quot;:&quot;320x50&quot;},&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;pageUrl&quot;:&quot;https://dev.nxconnect.me/chris.chidgey.2155&quot;,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;,&quot;regionInfo&quot;:null,&quot;deviceInfo&quot;:{&quot;make&quot;:&quot;&quot;,&quot;model&quot;:&quot;&quot;,&quot;os&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10&quot;,&quot;browser&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;114.0.0&quot;},&quot;eventOrder&quot;:14,&quot;activeWindow&quot;:true,&quot;videoUrl&quot;:&quot;blob:https://dev.nxconnect.me/811ff346-3c60-4af2-bc4f-842cc47ae76c&quot;,&quot;videoSessionId&quot;:&quot;CX1550360743X1689922198&quot;,&quot;logicalVideoId&quot;:null,&quot;mediaId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_18}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/player-event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[75]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demand.qortex.ai/api/v1/monetize/resources" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;groupId&quot;:&quot;R4oSY537Uax3etw6z6QQ&quot;,&quot;domain&quot;:&quot;dev.nxconnect.me&quot;,&quot;placementTypeId&quot;:1,&quot;insertSizing&quot;:&quot;320x50&quot;,&quot;akuid&quot;:&quot;A4483175190514957927&quot;,&quot;eids&quot;:null,&quot;iiqEIDs&quot;:null,&quot;GPPString&quot;:null,&quot;GPPSids&quot;:null,&quot;TCString&quot;:null,&quot;GDPRApplies&quot;:0,&quot;USPString&quot;:null,&quot;sessionId&quot;:&quot;CX3501005856X1689922197&quot;,&quot;bidId&quot;:&quot;CX2766252187X1689922203&quot;,&quot;mediaId&quot;:null,&quot;logicalVideoId&quot;:null,&quot;startMilliseconds&quot;:12430,&quot;endMilliseconds&quot;:27430,&quot;marketplaceId&quot;:null,&quot;storeId&quot;:null,&quot;bundleId&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_21}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v1/monetize/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[76]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam.nr-data.net/resources/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18834&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003&amp;st=1689922186549" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1550,&quot;e&quot;:1842,&quot;o&quot;:&quot;https://pagead2.googlesyndication.com:443/pagead/js/adsbygoogle.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:2043,&quot;e&quot;:3473,&quot;o&quot;:&quot;https://dev.nxconnect.me:443/_next/static/chunks/main-5f661a679b0d6419.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7118,&quot;e&quot;:7229,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/session-manager.2a64278a-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7233,&quot;e&quot;:7249,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/lazy-feature-loader.2f55ce66-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7254,&quot;e&quot;:7270,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/page_view_event-aggregate.06482edd-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7255,&quot;e&quot;:7272,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/page_view_timing-aggregate.bd6de33a-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7256,&quot;e&quot;:7280,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/metrics-aggregate.3dc53903-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7258,&quot;e&quot;:7287,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/jserrors-aggregate.49e41428-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7259,&quot;e&quot;:7287,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/ajax-aggregate.998ef92b-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7260,&quot;e&quot;:7299,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/session_trace-aggregate.83105561-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7262,&quot;e&quot;:7300,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/page_action-aggregate.ac76d497-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7264,&quot;e&quot;:7315,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/spa-aggregate.e6b09d52-1.236.0.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7226,&quot;e&quot;:7494,&quot;o&quot;:&quot;https://tpc.googlesyndication.com:443/sodar/sodar2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:7739,&quot;e&quot;:8406,&quot;o&quot;:&quot;https://tg1.aniview.com:443/api/adserver/spt&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:8886,&quot;e&quot;:9061,&quot;o&quot;:&quot;https://tags.qortex.ai:443/cxo/cx-bootstrapper-init&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:8413,&quot;e&quot;:9530,&quot;o&quot;:&quot;https://player.avplayer.com:443/script/2/v/avcplayer.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:10105,&quot;e&quot;:10398,&quot;o&quot;:&quot;https://tags.qortex.ai:443/cxo/cx-overlay.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:10447,&quot;e&quot;:10478,&quot;o&quot;:&quot;https://tags.qortex.ai:443/cxo/p-fc3a8e1a.system.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:10521,&quot;e&quot;:10544,&quot;o&quot;:&quot;https://tags.qortex.ai:443/cxo/p-31c577a7.system.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:11122,&quot;e&quot;:12336,&quot;o&quot;:&quot;https://ads.pubmatic.com:443/AdServer/js/pwt/161089/5500/pwt.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;iframe&quot;,&quot;s&quot;:1872,&quot;e&quot;:2084,&quot;o&quot;:&quot;https://googleads.g.doubleclick.net:443/pagead/html/r20230719/r20190131/zrt_lookup.html&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;iframe&quot;,&quot;s&quot;:2456,&quot;e&quot;:2609,&quot;o&quot;:&quot;https://googleads.g.doubleclick.net:443/pagead/ads&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;iframe&quot;,&quot;s&quot;:7501,&quot;e&quot;:7748,&quot;o&quot;:&quot;https://tpc.googlesyndication.com:443/sodar/sodar2/225/runner.html&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;iframe&quot;,&quot;s&quot;:7505,&quot;e&quot;:8055,&quot;o&quot;:&quot;https://www.google.com:443/recaptcha/api2/aframe&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:2080,&quot;e&quot;:2121,&quot;o&quot;:&quot;https://fonts.gstatic.com:443/s/poppins/v20/pxiByp8kv8JHgFVrLEj6Z1xlFd2JQEk.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:2081,&quot;e&quot;:2133,&quot;o&quot;:&quot;https://fonts.gstatic.com:443/s/poppins/v20/pxiEyp8kv8JHgFVrJJfecnFHGPc.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:2082,&quot;e&quot;:2184,&quot;o&quot;:&quot;https://fonts.gstatic.com:443/s/poppins/v20/pxiByp8kv8JHgFVrLDD4Z1xlFd2JQEk.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:9565,&quot;e&quot;:9724,&quot;o&quot;:&quot;https://playlist.cloudmcplayer.com:443/logo.svg&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:2444,&quot;e&quot;:2575,&quot;o&quot;:&quot;https://pagead2.googlesyndication.com:443/pagead/gen_204&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:2059,&quot;e&quot;:3480,&quot;o&quot;:&quot;https://datatrdev.blob.core.windows.net:443/profile-images-dev/b3fa01de-f3cf-4db4-9a16-e3cbd4a6cebf.webp&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:2069,&quot;e&quot;:4034,&quot;o&quot;:&quot;https://datatrdev.blob.core.windows.net:443/global/nxc-link-banner.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:4817,&quot;e&quot;:5359,&quot;o&quot;:&quot;https://dev.nxconnect.me:443/_next/image&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:8413,&quot;e&quot;:9038,&quot;o&quot;:&quot;https://track1.aniview.com:443/track&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:9641,&quot;e&quot;:9772,&quot;o&quot;:&quot;https://pagead2.googlesyndication.com:443/pagead/sodar&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:11753,&quot;e&quot;:12494,&quot;o&quot;:&quot;https://track1.aniview.com:443/track&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2667,&quot;e&quot;:2668,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2668,&quot;e&quot;:2668,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2668,&quot;e&quot;:2668,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2769,&quot;e&quot;:2770,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4806,&quot;e&quot;:4806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4806,&quot;e&quot;:4806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5155,&quot;e&quot;:5155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5155,&quot;e&quot;:5155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5343,&quot;e&quot;:5344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5344,&quot;e&quot;:5344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5344,&quot;e&quot;:5344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5360,&quot;e&quot;:5360,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5360,&quot;e&quot;:5360,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5388,&quot;e&quot;:5388,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5388,&quot;e&quot;:5388,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7112,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7112,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7113,&quot;e&quot;:7113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7226,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7748,&quot;e&quot;:7749,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8055,&quot;e&quot;:8055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8368,&quot;e&quot;:8381,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8416,&quot;e&quot;:8417,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script#AV645cfd8b22ec41080c0dcde6-used&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8417,&quot;e&quot;:8417,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script#AV645cfd8b22ec41080c0dcde6-used&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8625,&quot;e&quot;:8625,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8625,&quot;e&quot;:8625,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8625,&quot;e&quot;:8625,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8625,&quot;e&quot;:8625,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8833,&quot;e&quot;:8833,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8833,&quot;e&quot;:8833,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8833,&quot;e&quot;:8833,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8833,&quot;e&quot;:8833,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8887,&quot;e&quot;:8887,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:8887,&quot;e&quot;:8887,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9523,&quot;e&quot;:9523,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443/prod/playlist&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9523,&quot;e&quot;:9524,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443/prod/playlist&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9524,&quot;e&quot;:9525,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: 09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443/prod/playlist&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9925,&quot;e&quot;:9926,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api-js.mixpanel.com:443/track/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9926,&quot;e&quot;:9926,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api-js.mixpanel.com:443/track/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:9926,&quot;e&quot;:9926,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api-js.mixpanel.com:443/track/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10520,&quot;e&quot;:10520,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10611,&quot;e&quot;:10611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10611,&quot;e&quot;:10611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10611,&quot;e&quot;:10612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10617,&quot;e&quot;:10617,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10641,&quot;e&quot;:10641,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10642,&quot;e&quot;:10642,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10642,&quot;e&quot;:10642,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10679,&quot;e&quot;:10679,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10722,&quot;e&quot;:10723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;script&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10946,&quot;e&quot;:10946,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10947,&quot;e&quot;:10947,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10947,&quot;e&quot;:10947,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11121,&quot;e&quot;:11121,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: demand.qortex.ai:443/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11121,&quot;e&quot;:11121,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: demand.qortex.ai:443/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11121,&quot;e&quot;:11121,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: demand.qortex.ai:443/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11442,&quot;e&quot;:11442,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11442,&quot;e&quot;:11443,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11443,&quot;e&quot;:11443,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11487,&quot;e&quot;:11487,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11487,&quot;e&quot;:11487,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11487,&quot;e&quot;:11487,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11536,&quot;e&quot;:11536,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11536,&quot;e&quot;:11536,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11536,&quot;e&quot;:11537,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11620,&quot;e&quot;:11620,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11620,&quot;e&quot;:11620,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11620,&quot;e&quot;:11620,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11754,&quot;e&quot;:11754,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: go1.aniview.com:443/api/adserver/tag/3/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11754,&quot;e&quot;:11755,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: go1.aniview.com:443/api/adserver/tag/3/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11755,&quot;e&quot;:11755,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: go1.aniview.com:443/api/adserver/tag/3/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12039,&quot;e&quot;:12039,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12039,&quot;e&quot;:12040,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12040,&quot;e&quot;:12040,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12286,&quot;e&quot;:12286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 PUT: beacons.cloudmcapp.com:443/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12286,&quot;e&quot;:12286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 PUT: beacons.cloudmcapp.com:443/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12286,&quot;e&quot;:12286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 PUT: beacons.cloudmcapp.com:443/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3579,&quot;e&quot;:3579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3579,&quot;e&quot;:3579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3579,&quot;e&quot;:3579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3579,&quot;e&quot;:3579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3579,&quot;e&quot;:3580,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3580,&quot;e&quot;:3580,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3580,&quot;e&quot;:3580,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:3580,&quot;e&quot;:3580,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5156,&quot;e&quot;:5156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5345,&quot;e&quot;:5345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5347,&quot;e&quot;:5347,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:5613,&quot;e&quot;:5613,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7227,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7227,&quot;e&quot;:7228,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7775,&quot;e&quot;:7775,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7775,&quot;e&quot;:7775,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7775,&quot;e&quot;:7775,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7775,&quot;e&quot;:7775,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7775,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7776,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7776,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7776,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7776,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7776,&quot;e&quot;:7776,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:7935,&quot;e&quot;:7935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8389,&quot;e&quot;:8389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8390,&quot;e&quot;:8390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8579,&quot;e&quot;:8579,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8626,&quot;e&quot;:8626,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8627,&quot;e&quot;:8627,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8834,&quot;e&quot;:8835,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:8835,&quot;e&quot;:8835,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9198,&quot;e&quot;:9198,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9198,&quot;e&quot;:9198,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9198,&quot;e&quot;:9198,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9198,&quot;e&quot;:9198,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9199,&quot;e&quot;:9199,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9199,&quot;e&quot;:9199,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9199,&quot;e&quot;:9199,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9199,&quot;e&quot;:9199,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9199,&quot;e&quot;:9199,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9235,&quot;e&quot;:9235,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9236,&quot;e&quot;:9236,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9526,&quot;e&quot;:9526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9527,&quot;e&quot;:9527,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9527,&quot;e&quot;:9527,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9527,&quot;e&quot;:9527,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9527,&quot;e&quot;:9527,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9527,&quot;e&quot;:9527,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9769,&quot;e&quot;:9769,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9934,&quot;e&quot;:9934,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9934,&quot;e&quot;:9934,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9934,&quot;e&quot;:9934,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9934,&quot;e&quot;:9934,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9935,&quot;e&quot;:9935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9935,&quot;e&quot;:9935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9935,&quot;e&quot;:9935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9935,&quot;e&quot;:9935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9935,&quot;e&quot;:9935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:9938,&quot;e&quot;:9938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10614,&quot;e&quot;:10614,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10646,&quot;e&quot;:10646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10665,&quot;e&quot;:10666,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10702,&quot;e&quot;:10703,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10703,&quot;e&quot;:10704,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10704,&quot;e&quot;:10704,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10705,&quot;e&quot;:10705,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10705,&quot;e&quot;:10705,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10897,&quot;e&quot;:10897,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10898,&quot;e&quot;:10898,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10954,&quot;e&quot;:10955,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10959,&quot;e&quot;:10960,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:10960,&quot;e&quot;:10960,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11140,&quot;e&quot;:11140,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11141,&quot;e&quot;:11141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11142,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11142,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11142,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11142,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11142,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11142,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11143,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11143,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11143,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11143,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11143,&quot;e&quot;:11143,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11443,&quot;e&quot;:11443,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11444,&quot;e&quot;:11444,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11503,&quot;e&quot;:11503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11504,&quot;e&quot;:11504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11553,&quot;e&quot;:11553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11554,&quot;e&quot;:11554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11637,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11637,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11638,&quot;e&quot;:11638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11758,&quot;e&quot;:11758,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:11759,&quot;e&quot;:11759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12053,&quot;e&quot;:12053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12054,&quot;e&quot;:12054,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12055,&quot;e&quot;:12055,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12302,&quot;e&quot;:12302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12303,&quot;e&quot;:12303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12514,&quot;e&quot;:12514,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12514,&quot;e&quot;:12514,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12514,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12515,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12516,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12516,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12517,&quot;e&quot;:12517,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12549,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12549,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12550,&quot;e&quot;:12550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12575,&quot;e&quot;:12575,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12576,&quot;e&quot;:12576,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12576,&quot;e&quot;:12576,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12649,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12649,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12650,&quot;e&quot;:12650,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12688,&quot;e&quot;:12688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12689,&quot;e&quot;:12689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12929,&quot;e&quot;:12929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:12930,&quot;e&quot;:12930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:13232,&quot;e&quot;:13232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:13232,&quot;e&quot;:13232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;message&quot;,&quot;s&quot;:13232,&quot;e&quot;:13232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4722,&quot;e&quot;:4722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4722,&quot;e&quot;:4722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4722,&quot;e&quot;:4722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4802,&quot;e&quot;:4802,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4802,&quot;e&quot;:4802,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4802,&quot;e&quot;:4802,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5151,&quot;e&quot;:5151,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5151,&quot;e&quot;:5151,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5151,&quot;e&quot;:5151,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5152,&quot;e&quot;:5153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5153,&quot;e&quot;:5153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5154,&quot;e&quot;:5154,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5154,&quot;e&quot;:5154,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5154,&quot;e&quot;:5154,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5155,&quot;e&quot;:5155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5337,&quot;e&quot;:5337,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5337,&quot;e&quot;:5337,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5337,&quot;e&quot;:5337,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5343,&quot;e&quot;:5343,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5610,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:5612,&quot;e&quot;:5612,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7124,&quot;e&quot;:7124,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7124,&quot;e&quot;:7124,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7226,&quot;e&quot;:7226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7226,&quot;e&quot;:7226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7226,&quot;e&quot;:7226,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7279,&quot;e&quot;:7279,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7279,&quot;e&quot;:7279,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:7279,&quot;e&quot;:7279,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:8368,&quot;e&quot;:8368,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:4965,&quot;e&quot;:4965,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5152,&quot;e&quot;:5152,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5336,&quot;e&quot;:5336,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5337,&quot;e&quot;:5337,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:5611,&quot;e&quot;:5611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:7225,&quot;e&quot;:7225,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:8367,&quot;e&quot;:8367,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:11052,&quot;e&quot;:11053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:4723,&quot;e&quot;:5150,&quot;o&quot;:&quot;https://api.gleap.io:443/sessions&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:4803,&quot;e&quot;:5335,&quot;o&quot;:&quot;https://api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:7125,&quot;e&quot;:7224,&quot;o&quot;:&quot;https://pagead2.googlesyndication.com:443/getconfig/sodar&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:8394,&quot;e&quot;:8622,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:9739,&quot;e&quot;:9913,&quot;o&quot;:&quot;https://api-js.mixpanel.com:443/track/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:10609,&quot;e&quot;:10623,&quot;o&quot;:&quot;https://cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:10636,&quot;e&quot;:10667,&quot;o&quot;:&quot;https://cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:10902,&quot;e&quot;:10930,&quot;o&quot;:&quot;https://cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:11123,&quot;e&quot;:11482,&quot;o&quot;:&quot;https://events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:11132,&quot;e&quot;:11526,&quot;o&quot;:&quot;https://events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:11679,&quot;e&quot;:12029,&quot;o&quot;:&quot;https://events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:5250,&quot;e&quot;:5250,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:5250,&quot;e&quot;:5250,&quot;o&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;t&quot;:0},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:9803,&quot;e&quot;:9803,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;img&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10673,&quot;e&quot;:10673,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10673,&quot;e&quot;:10673,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10673,&quot;e&quot;:10673,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10674,&quot;e&quot;:10674,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10674,&quot;e&quot;:10674,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10678,&quot;e&quot;:10678,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10934,&quot;e&quot;:10934,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10934,&quot;e&quot;:10934,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10934,&quot;e&quot;:10934,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:1637081966},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10935,&quot;e&quot;:10935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10941,&quot;e&quot;:10941,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10941,&quot;e&quot;:10941,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10941,&quot;e&quot;:10941,&quot;o&quot;:&quot;Failed to read the &apos;responseText&apos; property from &apos;XMLHttpRequest&apos;: The value is only accessible if the object&apos;s &apos;responseType&apos; is &apos;&apos; or &apos;text&apos; (was &apos;arraybuffer&apos;).&quot;,&quot;t&quot;:-458595023},{&quot;n&quot;:&quot;error&quot;,&quot;s&quot;:10946,&quot;e&quot;:10946,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:5249,&quot;e&quot;:5400,&quot;o&quot;:&quot;https://o733402.ingest.sentry.io:443/api/4505238747742208/envelope/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:6616,&quot;e&quot;:6802,&quot;o&quot;:&quot;https://o733402.ingest.sentry.io:443/api/4505238747742208/envelope/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:10676,&quot;e&quot;:10832,&quot;o&quot;:&quot;https://o733402.ingest.sentry.io:443/api/4505238747742208/envelope/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:10933,&quot;e&quot;:11093,&quot;o&quot;:&quot;https://o733402.ingest.sentry.io:443/api/4505238747742208/envelope/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:10940,&quot;e&quot;:11101,&quot;o&quot;:&quot;https://o733402.ingest.sentry.io:443/api/4505238747742208/envelope/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;pageshow&quot;,&quot;s&quot;:7130,&quot;e&quot;:7130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:2683,&quot;e&quot;:2683,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:2683,&quot;e&quot;:2683,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:4723,&quot;e&quot;:5155,&quot;o&quot;:&quot;201 POST: api.gleap.io:443/sessions&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:4803,&quot;e&quot;:5344,&quot;o&quot;:&quot;200 GET: api.gleap.io:443/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:5154,&quot;e&quot;:5612,&quot;o&quot;:&quot;200 POST: api.gleap.io:443/sessions/ping&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:7124,&quot;e&quot;:7227,&quot;o&quot;:&quot;200 GET: pagead2.googlesyndication.com:443/getconfig/sodar&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:7279,&quot;e&quot;:8381,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:8394,&quot;e&quot;:8625,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:8383,&quot;e&quot;:8833,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRBR-eebce11a0e47205f1a0&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:8886,&quot;e&quot;:9235,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:8412,&quot;e&quot;:9524,&quot;o&quot;:&quot;200 GET: 09nfgyvbtl.execute-api.us-east-1.amazonaws.com:443/prod/playlist&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:9739,&quot;e&quot;:9926,&quot;o&quot;:&quot;200 POST: api-js.mixpanel.com:443/track/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:9931,&quot;e&quot;:10611,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/index.m3u8&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10609,&quot;e&quot;:10642,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/c9695f62561c4c3fb4cdb81d22913845/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1.m3u8&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10636,&quot;e&quot;:10679,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_0.ts&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10902,&quot;e&quot;:10947,&quot;o&quot;:&quot;200 GET: cmcsports.cloudmcapp.com:443/58dda1ca64a3421fbba2963a7bbd9a8e/c2a42c131b054fb780c8ecdbad173eff/265136d260734c6a9be7a070fb5ab414/435389441dd8480394e02cc8c47f4685/index_1_1.ts&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10753,&quot;e&quot;:11121,&quot;o&quot;:&quot;200 GET: demand.qortex.ai:443/api/v1/group/configs/R4oSY537Uax3etw6z6QQ/dev.nxconnect.me&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10750,&quot;e&quot;:11443,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:11124,&quot;e&quot;:11487,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:11133,&quot;e&quot;:11536,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10829,&quot;e&quot;:11620,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10595,&quot;e&quot;:11755,&quot;o&quot;:&quot;200 GET: go1.aniview.com:443/api/adserver/tag/3/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:11679,&quot;e&quot;:12040,&quot;o&quot;:&quot;200 POST: events.qortex.ai:443/api/v1/player-event&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10917,&quot;e&quot;:12286,&quot;o&quot;:&quot;200 PUT: beacons.cloudmcapp.com:443/prod_putbeacons/streams/beacon_datastream_prod/beaconrecord/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;volumechange&quot;,&quot;s&quot;:9610,&quot;e&quot;:9610,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;volumechange&quot;,&quot;s&quot;:9610,&quot;e&quot;:9610,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:9645,&quot;e&quot;:9645,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:9645,&quot;e&quot;:9646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:9646,&quot;e&quot;:9646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:9646,&quot;e&quot;:9646,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#videoslot.loaded&quot;},{&quot;n&quot;:&quot;animationstart&quot;,&quot;s&quot;:10643,&quot;e&quot;:10643,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#videoslot.loaded&quot;},{&quot;n&quot;:&quot;loadstart&quot;,&quot;s&quot;:9920,&quot;e&quot;:9920,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;loadstart&quot;,&quot;s&quot;:9920,&quot;e&quot;:9920,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;sourceopen&quot;,&quot;s&quot;:9927,&quot;e&quot;:9933,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:9939,&quot;e&quot;:9939,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-v.avp-pos-abs&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:9939,&quot;e&quot;:9939,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-v.avp-pos-abs&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:9939,&quot;e&quot;:9939,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-v.avp-pos-abs&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:9939,&quot;e&quot;:9939,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-v.avp-pos-abs&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:10035,&quot;e&quot;:10036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-s-container&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:10036,&quot;e&quot;:10036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-s-container&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:10036,&quot;e&quot;:10036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-s-container&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:10036,&quot;e&quot;:10036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.avp-p-cn-s-container&quot;},{&quot;n&quot;:&quot;play&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;waiting&quot;,&quot;s&quot;:10615,&quot;e&quot;:10615,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10760,&quot;e&quot;:10760,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10850,&quot;e&quot;:10850,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10891,&quot;e&quot;:10891,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10899,&quot;e&quot;:10899,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10900,&quot;e&quot;:10900,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10901,&quot;e&quot;:10903,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10960,&quot;e&quot;:10960,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10961,&quot;e&quot;:10961,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10961,&quot;e&quot;:10961,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;updateend&quot;,&quot;s&quot;:10962,&quot;e&quot;:10963,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;durationchange&quot;,&quot;s&quot;:10872,&quot;e&quot;:10872,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;durationchange&quot;,&quot;s&quot;:10872,&quot;e&quot;:10873,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;resize&quot;,&quot;s&quot;:10873,&quot;e&quot;:10874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;resize&quot;,&quot;s&quot;:10874,&quot;e&quot;:10874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;loadedmetadata&quot;,&quot;s&quot;:10874,&quot;e&quot;:10874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;loadedmetadata&quot;,&quot;s&quot;:10874,&quot;e&quot;:10875,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;loadedmetadata&quot;,&quot;s&quot;:10875,&quot;e&quot;:10875,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;loadeddata&quot;,&quot;s&quot;:10913,&quot;e&quot;:10913,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;canplay&quot;,&quot;s&quot;:10913,&quot;e&quot;:10913,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;canplay&quot;,&quot;s&quot;:10913,&quot;e&quot;:10913,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;playing&quot;,&quot;s&quot;:10913,&quot;e&quot;:10913,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;playing&quot;,&quot;s&quot;:10913,&quot;e&quot;:10918,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;canplaythrough&quot;,&quot;s&quot;:10920,&quot;e&quot;:10920,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:11053,&quot;e&quot;:11053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:11053,&quot;e&quot;:11053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:11053,&quot;e&quot;:11053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:11053,&quot;e&quot;:11053,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:12552,&quot;e&quot;:12552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:12552,&quot;e&quot;:12552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:12552,&quot;e&quot;:12552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationiteration&quot;,&quot;s&quot;:12552,&quot;e&quot;:12552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;circle&quot;},{&quot;n&quot;:&quot;animationend&quot;,&quot;s&quot;:11135,&quot;e&quot;:11135,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#videoslot.loaded&quot;},{&quot;n&quot;:&quot;animationend&quot;,&quot;s&quot;:11136,&quot;e&quot;:11136,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div#videoslot.loaded&quot;},{&quot;n&quot;:&quot;event-from-overlay&quot;,&quot;s&quot;:11144,&quot;e&quot;:11145,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11146,&quot;e&quot;:11146,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11146,&quot;e&quot;:11147,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11147,&quot;e&quot;:11147,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11405,&quot;e&quot;:11405,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11405,&quot;e&quot;:11405,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11405,&quot;e&quot;:11406,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11676,&quot;e&quot;:11676,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11676,&quot;e&quot;:11677,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11677,&quot;e&quot;:11680,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11968,&quot;e&quot;:11969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11969,&quot;e&quot;:11969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:11970,&quot;e&quot;:11970,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12252,&quot;e&quot;:12252,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12253,&quot;e&quot;:12253,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12253,&quot;e&quot;:12253,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12497,&quot;e&quot;:12497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12497,&quot;e&quot;:12497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12498,&quot;e&quot;:12498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12763,&quot;e&quot;:12763,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12763,&quot;e&quot;:12763,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:12763,&quot;e&quot;:12764,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:13028,&quot;e&quot;:13028,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:13028,&quot;e&quot;:13028,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;},{&quot;n&quot;:&quot;timeupdate&quot;,&quot;s&quot;:13028,&quot;e&quot;:13028,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;video&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">resources/1/NRBR-eebce11a0e47205f1a0?a=1020200822&amp;v=1.236.0&amp;to=ZVcBZUUFWxVWVBYMWlwdNFRVIkcHWlIVCkdZZxFYGCpQHkNdEUpyd2ZMHmwRRgNFWwsLXm8%3D&amp;rst=18834&amp;ck=0&amp;s=693dac23a8bb5440&amp;ref=https://dev.nxconnect.me/chris.chidgey.2155&amp;ptid=4bbcba26-0001-bdd3-d5dd-018977349003&amp;st=1689922186549</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[77]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
