<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MP_VIEW_SOLD_NFTs" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">marketplace.qa.nxlvl.app</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">o733402.ingest.sentry.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">api.gleap.io</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">routers.qa.nxlvl.app</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">data-tr-dev.azureedge.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">api-js.mixpanel.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="access_token" elementType="Argument">
            <stringProp name="Argument.name">access_token</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndGSm1EY0h3ZVludDZLaGlDYmJPZloxNnVnVjJNM044NnRXSFp2RERWQ1EifQ.eyJwZXJtIjoiIiwiaWF0IjoxNjg2MjA1OTM2LCJleHAiOjE2ODg3OTc5MzYsInBybSI6ImE3N2UxYzYxMTc4MTk1YWRmNjI3ZjA2Y2UyZWUxMjRlIiwiamlkIjoiQGxvY2FsaG9zdCIsIm1pbSI6IiIsInVrZXkiOiIiLCJjbGllbnQiOiJtYXJrZXRwbGFjZS13ZWIiLCJqdGkiOiJhNmFjODAzMy1jY2FlLTRjNDktYjlhOS1kMWMxODQ0MjY4NjAifQ.XromNxjPJ_uE-aRSNmzV6XQWrJEdxYP7wP72SK6JN4GTaN5MKHh7f6JHYsUG1S3llfwp9dw5FdWAQMy9JJUpQkXX-2EMmzbTlAt28Nf4jgTFjPJPxmypfifIG-cpP0nM_jXD5_LVWKXpdyrJFpE3hr6ENvu-VX1UTPbdAPdHbXCEr5x_8hcPK-s_6vbEbQDfERtGzo2t-0-m0pbjsO4VDGqq5roFSmq7GXKjRoRJCfd3EW8Nb1NkOxV1Woeh4P1TObp01oj57b72a3aeEX3p_VhFVO_RbNq92xfF_i_GVQSri5QEQMgkRwOZcCUeOdZJkKT7KDzh5KDFuB56s9o5NQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="email" elementType="Argument">
            <stringProp name="Argument.name">email</stringProp>
            <stringProp name="Argument.value">f.m@yopmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">f.m@yopmail.com/QWRtaW5AMTIzNA==</stringProp>
          </elementProp>
          <elementProp name="Password" elementType="Argument">
            <stringProp name="Argument.name">Password</stringProp>
            <stringProp name="Argument.value">QWRtaW5AMTIzNA==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">loadtest1@yopmail.com/QWJjZEAxMjM0</stringProp>
          </elementProp>
          <elementProp name="sParse_userId" elementType="Argument">
            <stringProp name="Argument.name">sParse_userId</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HomePage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.qa.nxlvl.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Purpose" elementType="Header">
                  <stringProp name="Header.name">Sec-Purpose</stringProp>
                  <stringProp name="Header.value">prefetch;prerender</stringProp>
                </elementProp>
                <elementProp name="Purpose" elementType="Header">
                  <stringProp name="Header.name">Purpose</stringProp>
                  <stringProp name="Header.value">prefetch</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sParse_nextData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sParse_nextData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;buildId&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sParse_nextData_NF</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:52:02.929Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;8f269a730a884c91a4ffc7010b699370&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:52:02.928Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:52:02.928Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:20,&quot;activity&quot;:[],&quot;type&quot;:&quot;Trending&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:6,&quot;activity&quot;:[],&quot;type&quot;:&quot;ForYou&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopPick&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;LatestDrop&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFeaturedCreators&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:6,&quot;userId&quot;:0},&quot;query&quot;:&quot;query getFeaturedCreators($cursor: Int!, $take: Int!, $userId: Int!, $activityId: [Int]) {\n  getFeaturedCreators(cursor: $cursor, take: $take, activityId: $activityId) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          backgroundImage\n          backgroundVideoData\n          isFollowing(userId: $userId)\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDashboardNFTs&quot;,&quot;variables&quot;:{&quot;dashboardArgs&quot;:{&quot;cursor&quot;:0,&quot;pageNo&quot;:0,&quot;take&quot;:3,&quot;activity&quot;:[],&quot;type&quot;:&quot;TopSales&quot;}},&quot;query&quot;:&quot;query getDashboardNFTs($dashboardArgs: DashboardArgs!) {\n  getDashboardNFTs(dashboardArgs: $dashboardArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        imageUrl\n        videoData\n        isLiked\n        likeCount\n        isNFTBookmarked\n        associatedTiers(nftStatus: [Listed, Sold])\n        userId\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGroupedUserActivities&quot;,&quot;variables&quot;:{&quot;isUserActivity&quot;:false},&quot;query&quot;:&quot;query getGroupedUserActivities($isUserActivity: Boolean) {\n  getGroupedUserActivities(isUserActivity: $isUserActivity) {\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;searchNFT&quot;,&quot;variables&quot;:{&quot;searchNFTArgs&quot;:{&quot;pageNo&quot;:0,&quot;take&quot;:12,&quot;activity&quot;:[],&quot;editions&quot;:[],&quot;isForSale&quot;:false}},&quot;query&quot;:&quot;query searchNFT($searchNFTArgs: SearchNFTArgs!) {\n  searchNFT(searchNFTArgs: $searchNFTArgs) {\n    pageEdges {\n      node {\n        id\n        name\n        tier\n        userId\n        user {\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        firstname\n        lastname\n        imageURL\n        isNFTBookmarked\n        isLiked\n        likeCount\n        playbackId\n        editions {\n          id\n          tier\n          __typename\n        }\n        activity {\n          id\n          name\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      pageNo\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;categories&quot;,&quot;variables&quot;:{&quot;ids&quot;:[2]},&quot;query&quot;:&quot;query categories($ids: [Int]) {\n  getCategory(ids: $ids) {\n    id\n    name\n    iconURL\n    activities {\n      id\n      name\n      iconURL\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:1,&quot;events&quot;:[{&quot;name&quot;:&quot;sessionStarted&quot;,&quot;date&quot;:&quot;2023-06-08T13:52:03.946Z&quot;},{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:52:03.946Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getTopTraders&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:3},&quot;query&quot;:&quot;query getTopTraders($cursor: Int!, $take: Int!) {\n  getTopTraders(cursor: $cursor, take: $take) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          username\n          firstname\n          lastname\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:52:04.240Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;8f269a730a884c91a4ffc7010b699370&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:52:02.928Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:52:04.240Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;event_id&quot;:&quot;f66af3a00cd6497bbd43a768a811ee56&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:52:04.241Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xd;
{&quot;type&quot;:&quot;event&quot;}&#xd;
{&quot;exception&quot;:{&quot;values&quot;:[{&quot;type&quot;:&quot;SyntaxError&quot;,&quot;value&quot;:&quot;Identifier &apos;originalPrompt&apos; has already been declared&quot;,&quot;stacktrace&quot;:{&quot;frames&quot;:[{&quot;colno&quot;:1,&quot;filename&quot;:&quot;app:///assets/prompt.js&quot;,&quot;function&quot;:&quot;?&quot;,&quot;in_app&quot;:true,&quot;lineno&quot;:1}]},&quot;mechanism&quot;:{&quot;type&quot;:&quot;onerror&quot;,&quot;handled&quot;:false}}]},&quot;level&quot;:&quot;error&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;f66af3a00cd6497bbd43a768a811ee56&quot;,&quot;timestamp&quot;:1686232324.237,&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;tags&quot;:{&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;runtime&quot;:&quot;browser&quot;},&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;},&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;}},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1686232323.075,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.498,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.945,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.qa.nxlvl.app/&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">nftcategorycontainer/Sports.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;adc7268c6270d954&quot;,&quot;start_timestamp&quot;:1686232325.1704001,&quot;timestamp&quot;:1686232325.5241,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:504,&quot;http.response_content_length&quot;:204,&quot;http.decoded_response_content_length&quot;:204,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-dev.azureedge.net/nft-images-qa/1964cd54-3009-4adb-9bf2-90975c88f6e9_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:52:07.424Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.size&quot;:4968,&quot;cls.source.1&quot;:&quot;div.MuiBox-root.css-kh5qhu &gt; div.card &gt; div.card-button.left&quot;,&quot;cls.source.2&quot;:&quot;div.MuiBox-root.css-kh5qhu &gt; div.card &gt; div.card-button.right&quot;,&quot;cls.source.3&quot;:&quot;div.MuiBox-root.css-1hgvo3m&quot;,&quot;cls.source.4&quot;:&quot;div.MuiBox-root.css-qyflw0&quot;},&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a10afa4ad2fb47d6&quot;,&quot;start_timestamp&quot;:1686232323.3452997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1686232323.9457,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9c64a469280b98af&quot;,&quot;start_timestamp&quot;:1686232323.4566998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.0472999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;81a9a232c9336d84&quot;,&quot;start_timestamp&quot;:1686232323.4580998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.6890998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b15058299fa3aeb0&quot;,&quot;start_timestamp&quot;:1686232323.4592,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.9264,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b6962a1db65d28f5&quot;,&quot;start_timestamp&quot;:1686232323.4607,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.2015998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;913ef5de6c42a83c&quot;,&quot;start_timestamp&quot;:1686232323.4627998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.5825,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;95d84bd7c29e5217&quot;,&quot;start_timestamp&quot;:1686232323.4652998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.3372,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;start_timestamp&quot;:1686232323.4675,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.9562,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;start_timestamp&quot;:1686232323.471,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.9564,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9eff175e7c8a8515&quot;,&quot;start_timestamp&quot;:1686232323.4932,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232326.1376998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9479f50219076e68&quot;,&quot;start_timestamp&quot;:1686232316.8397002,&quot;timestamp&quot;:1686232316.9097002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b9b5cb6a7159f975&quot;,&quot;start_timestamp&quot;:1686232317.1727002,&quot;timestamp&quot;:1686232317.2387002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ac55fdf13a3b4d30&quot;,&quot;start_timestamp&quot;:1686232322.8754,&quot;timestamp&quot;:1686232323.6864002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;852dcdccf2a2479d&quot;,&quot;start_timestamp&quot;:1686232323.6872003,&quot;timestamp&quot;:1686232323.8142004,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a78666eaa88d3c94&quot;,&quot;start_timestamp&quot;:1686232323.8794,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.5355,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8e04d81bac67aa5c&quot;,&quot;start_timestamp&quot;:1686232323.8196,&quot;timestamp&quot;:1686232323.8826,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bab65270a47a8ad3&quot;,&quot;start_timestamp&quot;:1686232323.9472997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.8957,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b24198ebb6bb1214&quot;,&quot;start_timestamp&quot;:1686232323.9488,&quot;timestamp&quot;:1686232323.9988,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b2000439dca89b40&quot;,&quot;start_timestamp&quot;:1686232324.0112002,&quot;timestamp&quot;:1686232324.0762002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;start_timestamp&quot;:1686232324.1292,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.5235,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b57cba5aeca8c6ab&quot;,&quot;start_timestamp&quot;:1686232324.7102003,&quot;timestamp&quot;:1686232324.8552003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a646339f01360855&quot;,&quot;start_timestamp&quot;:1686232324.9269001,&quot;timestamp&quot;:1686232325.0049002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;855540aad78fa049&quot;,&quot;start_timestamp&quot;:1686232325.0716002,&quot;timestamp&quot;:1686232325.1426003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ad03d5f3c65769c9&quot;,&quot;start_timestamp&quot;:1686232325.2026,&quot;timestamp&quot;:1686232325.2536001,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b77bf1a3f1f09dc4&quot;,&quot;start_timestamp&quot;:1686232325.5836,&quot;timestamp&quot;:1686232325.6356,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9e0c78d5ffeaba8a&quot;,&quot;start_timestamp&quot;:1686232325.9742002,&quot;timestamp&quot;:1686232326.1182003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:776},&quot;description&quot;:&quot;GET https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;814ad58ca1fb8475&quot;,&quot;start_timestamp&quot;:1686232326.1871,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232326.4092999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b1bcab3e3c35274d&quot;,&quot;start_timestamp&quot;:1686232326.1389,&quot;timestamp&quot;:1686232326.2249,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8c82f70980b5524f&quot;,&quot;start_timestamp&quot;:1686232323.654,&quot;timestamp&quot;:1686232323.6542,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a71de3135d637b48&quot;,&quot;start_timestamp&quot;:1686232324.4441001,&quot;timestamp&quot;:1686232324.4642,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8640a50aafedb789&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;958decf3ee1afebb&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a1f2372a19a50274&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;96a6b3ab1f93cb21&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b4c901636e5b557a&quot;,&quot;start_timestamp&quot;:1686232316.4791,&quot;timestamp&quot;:1686232317.1015,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ba6c2f39f5652cde&quot;,&quot;start_timestamp&quot;:1686232316.8205001,&quot;timestamp&quot;:1686232317.1015,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;88542c8093f036cd&quot;,&quot;start_timestamp&quot;:1686232316.4386,&quot;timestamp&quot;:1686232323.0762,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.dwolla.com/v2.1.8/dwolla-web.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;888a3b65194a0115&quot;,&quot;start_timestamp&quot;:1686232316.8315,&quot;timestamp&quot;:1686232317.1549,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1435,&quot;http.response_content_length&quot;:1135,&quot;http.decoded_response_content_length&quot;:3572,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/css/5674832e1468d24d.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;87b7bcf9e7e5ae7c&quot;,&quot;start_timestamp&quot;:1686232316.832,&quot;timestamp&quot;:1686232317.1259,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2846,&quot;http.response_content_length&quot;:2546,&quot;http.decoded_response_content_length&quot;:6548,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9247.2c3cd44cab30b07b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a62f278be5ef5e53&quot;,&quot;start_timestamp&quot;:1686232316.8324,&quot;timestamp&quot;:1686232317.424,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1883,&quot;http.response_content_length&quot;:1583,&quot;http.decoded_response_content_length&quot;:3521,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/7805.122aa77f6b07b818.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9eee20e99034d0c6&quot;,&quot;start_timestamp&quot;:1686232316.8325,&quot;timestamp&quot;:1686232317.4805999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1901,&quot;http.response_content_length&quot;:1601,&quot;http.decoded_response_content_length&quot;:5078,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2206.6400f4419974d8d6.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;87dfc7553ac60f06&quot;,&quot;start_timestamp&quot;:1686232316.8326,&quot;timestamp&quot;:1686232317.4387002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2789,&quot;http.response_content_length&quot;:2489,&quot;http.decoded_response_content_length&quot;:5137,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/webpack-6996a969f3a61739.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ac3053e49eb53949&quot;,&quot;start_timestamp&quot;:1686232316.8327,&quot;timestamp&quot;:1686232317.4392,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:42470,&quot;http.response_content_length&quot;:42170,&quot;http.decoded_response_content_length&quot;:130002,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/framework-79bce4a3a540b080.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a8d6188f7133d22f&quot;,&quot;start_timestamp&quot;:1686232316.8327,&quot;timestamp&quot;:1686232318.0469,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36132,&quot;http.response_content_length&quot;:35832,&quot;http.decoded_response_content_length&quot;:120654,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/main-0aec5a71f8114457.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bfb7d018cbc8246f&quot;,&quot;start_timestamp&quot;:1686232316.8328001,&quot;timestamp&quot;:1686232318.0765002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2645,&quot;http.response_content_length&quot;:2345,&quot;http.decoded_response_content_length&quot;:6470,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3824-d8743146c025c3d8.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a5c8aad58d9d853e&quot;,&quot;start_timestamp&quot;:1686232316.8329,&quot;timestamp&quot;:1686232317.7577,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:829825,&quot;http.response_content_length&quot;:829525,&quot;http.decoded_response_content_length&quot;:2983837,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/_app-3a119e5fcba95c88.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a1c261b3d376b56c&quot;,&quot;start_timestamp&quot;:1686232316.8329,&quot;timestamp&quot;:1686232322.8655,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7588,&quot;http.response_content_length&quot;:7288,&quot;http.decoded_response_content_length&quot;:20238,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2873-d416bd9bffe62a04.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;aa5684dcb34996e2&quot;,&quot;start_timestamp&quot;:1686232316.833,&quot;timestamp&quot;:1686232318.0822,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5669,&quot;http.response_content_length&quot;:5369,&quot;http.decoded_response_content_length&quot;:19443,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/5365-f4ee07af087271df.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b00247d23ad75b3c&quot;,&quot;start_timestamp&quot;:1686232316.8331,&quot;timestamp&quot;:1686232318.1224,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6773,&quot;http.response_content_length&quot;:6473,&quot;http.decoded_response_content_length&quot;:25496,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/1204-711552c38632d109.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b7c90cb694627218&quot;,&quot;start_timestamp&quot;:1686232316.8331,&quot;timestamp&quot;:1686232318.1386,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1147,&quot;http.response_content_length&quot;:847,&quot;http.decoded_response_content_length&quot;:2132,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard-a237d78e51a3c977.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;813dfda998d66e07&quot;,&quot;start_timestamp&quot;:1686232316.8332,&quot;timestamp&quot;:1686232318.3621,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1781,&quot;http.response_content_length&quot;:1481,&quot;http.decoded_response_content_length&quot;:4326,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/V1IsfSNCCLYMLjAH3rQ2-/_buildManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bf4d5ce48abd3b09&quot;,&quot;start_timestamp&quot;:1686232316.8333,&quot;timestamp&quot;:1686232318.3627002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:6714,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://fonts.googleapis.com/css2?family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:52:07.424Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;pageload&quot;,&quot;span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;,&quot;lcp.size&quot;:4968,&quot;cls.source.1&quot;:&quot;div.MuiBox-root.css-kh5qhu &gt; div.card &gt; div.card-button.left&quot;,&quot;cls.source.2&quot;:&quot;div.MuiBox-root.css-kh5qhu &gt; div.card &gt; div.card-button.right&quot;,&quot;cls.source.3&quot;:&quot;div.MuiBox-root.css-1hgvo3m&quot;,&quot;cls.source.4&quot;:&quot;div.MuiBox-root.css-qyflw0&quot;},&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;}},&quot;spans&quot;:[{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a10afa4ad2fb47d6&quot;,&quot;start_timestamp&quot;:1686232323.3452997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;201&quot;},&quot;timestamp&quot;:1686232323.9457,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9c64a469280b98af&quot;,&quot;start_timestamp&quot;:1686232323.4566998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.0472999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;81a9a232c9336d84&quot;,&quot;start_timestamp&quot;:1686232323.4580998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.6890998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b15058299fa3aeb0&quot;,&quot;start_timestamp&quot;:1686232323.4592,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.9264,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b6962a1db65d28f5&quot;,&quot;start_timestamp&quot;:1686232323.4607,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.2015998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;913ef5de6c42a83c&quot;,&quot;start_timestamp&quot;:1686232323.4627998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.5825,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;95d84bd7c29e5217&quot;,&quot;start_timestamp&quot;:1686232323.4652998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.3372,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;start_timestamp&quot;:1686232323.4675,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.9562,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;start_timestamp&quot;:1686232323.471,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.9564,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9eff175e7c8a8515&quot;,&quot;start_timestamp&quot;:1686232323.4932,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232326.1376998,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9479f50219076e68&quot;,&quot;start_timestamp&quot;:1686232316.8397002,&quot;timestamp&quot;:1686232316.9097002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b9b5cb6a7159f975&quot;,&quot;start_timestamp&quot;:1686232317.1727002,&quot;timestamp&quot;:1686232317.2387002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ac55fdf13a3b4d30&quot;,&quot;start_timestamp&quot;:1686232322.8754,&quot;timestamp&quot;:1686232323.6864002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;852dcdccf2a2479d&quot;,&quot;start_timestamp&quot;:1686232323.6872003,&quot;timestamp&quot;:1686232323.8142004,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;},&quot;description&quot;:&quot;GET https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a78666eaa88d3c94&quot;,&quot;start_timestamp&quot;:1686232323.8794,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.5355,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8e04d81bac67aa5c&quot;,&quot;start_timestamp&quot;:1686232323.8196,&quot;timestamp&quot;:1686232323.8826,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bab65270a47a8ad3&quot;,&quot;start_timestamp&quot;:1686232323.9472997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232324.8957,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b24198ebb6bb1214&quot;,&quot;start_timestamp&quot;:1686232323.9488,&quot;timestamp&quot;:1686232323.9988,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b2000439dca89b40&quot;,&quot;start_timestamp&quot;:1686232324.0112002,&quot;timestamp&quot;:1686232324.0762002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;start_timestamp&quot;:1686232324.1292,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232325.5235,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b57cba5aeca8c6ab&quot;,&quot;start_timestamp&quot;:1686232324.7102003,&quot;timestamp&quot;:1686232324.8552003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a646339f01360855&quot;,&quot;start_timestamp&quot;:1686232324.9269001,&quot;timestamp&quot;:1686232325.0049002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;855540aad78fa049&quot;,&quot;start_timestamp&quot;:1686232325.0716002,&quot;timestamp&quot;:1686232325.1426003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ad03d5f3c65769c9&quot;,&quot;start_timestamp&quot;:1686232325.2026,&quot;timestamp&quot;:1686232325.2536001,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b77bf1a3f1f09dc4&quot;,&quot;start_timestamp&quot;:1686232325.5836,&quot;timestamp&quot;:1686232325.6356,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9e0c78d5ffeaba8a&quot;,&quot;start_timestamp&quot;:1686232325.9742002,&quot;timestamp&quot;:1686232326.1182003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:776},&quot;description&quot;:&quot;GET https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;814ad58ca1fb8475&quot;,&quot;start_timestamp&quot;:1686232326.1871,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232326.4092999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b1bcab3e3c35274d&quot;,&quot;start_timestamp&quot;:1686232326.1389,&quot;timestamp&quot;:1686232326.2249,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;domContentLoadedEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8c82f70980b5524f&quot;,&quot;start_timestamp&quot;:1686232323.654,&quot;timestamp&quot;:1686232323.6542,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;loadEvent&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a71de3135d637b48&quot;,&quot;start_timestamp&quot;:1686232324.4441001,&quot;timestamp&quot;:1686232324.4642,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;connect&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8640a50aafedb789&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;TLS/SSL&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;958decf3ee1afebb&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;cache&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a1f2372a19a50274&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;DNS&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;96a6b3ab1f93cb21&quot;,&quot;start_timestamp&quot;:1686232316.451,&quot;timestamp&quot;:1686232316.451,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;request&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b4c901636e5b557a&quot;,&quot;start_timestamp&quot;:1686232316.4791,&quot;timestamp&quot;:1686232317.1015,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;response&quot;,&quot;op&quot;:&quot;browser&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ba6c2f39f5652cde&quot;,&quot;start_timestamp&quot;:1686232316.8205001,&quot;timestamp&quot;:1686232317.1015,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Next.js-before-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;88542c8093f036cd&quot;,&quot;start_timestamp&quot;:1686232316.4386,&quot;timestamp&quot;:1686232323.0762,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.dwolla.com/v2.1.8/dwolla-web.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;888a3b65194a0115&quot;,&quot;start_timestamp&quot;:1686232316.8315,&quot;timestamp&quot;:1686232317.1549,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1435,&quot;http.response_content_length&quot;:1135,&quot;http.decoded_response_content_length&quot;:3572,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/css/5674832e1468d24d.css&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;87b7bcf9e7e5ae7c&quot;,&quot;start_timestamp&quot;:1686232316.832,&quot;timestamp&quot;:1686232317.1259,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2846,&quot;http.response_content_length&quot;:2546,&quot;http.decoded_response_content_length&quot;:6548,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/9247.2c3cd44cab30b07b.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a62f278be5ef5e53&quot;,&quot;start_timestamp&quot;:1686232316.8324,&quot;timestamp&quot;:1686232317.424,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1883,&quot;http.response_content_length&quot;:1583,&quot;http.decoded_response_content_length&quot;:3521,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/7805.122aa77f6b07b818.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9eee20e99034d0c6&quot;,&quot;start_timestamp&quot;:1686232316.8325,&quot;timestamp&quot;:1686232317.4805999,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1901,&quot;http.response_content_length&quot;:1601,&quot;http.decoded_response_content_length&quot;:5078,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2206.6400f4419974d8d6.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;87dfc7553ac60f06&quot;,&quot;start_timestamp&quot;:1686232316.8326,&quot;timestamp&quot;:1686232317.4387002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2789,&quot;http.response_content_length&quot;:2489,&quot;http.decoded_response_content_length&quot;:5137,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/webpack-6996a969f3a61739.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ac3053e49eb53949&quot;,&quot;start_timestamp&quot;:1686232316.8327,&quot;timestamp&quot;:1686232317.4392,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:42470,&quot;http.response_content_length&quot;:42170,&quot;http.decoded_response_content_length&quot;:130002,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/framework-79bce4a3a540b080.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a8d6188f7133d22f&quot;,&quot;start_timestamp&quot;:1686232316.8327,&quot;timestamp&quot;:1686232318.0469,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:36132,&quot;http.response_content_length&quot;:35832,&quot;http.decoded_response_content_length&quot;:120654,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/main-0aec5a71f8114457.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bfb7d018cbc8246f&quot;,&quot;start_timestamp&quot;:1686232316.8328001,&quot;timestamp&quot;:1686232318.0765002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2645,&quot;http.response_content_length&quot;:2345,&quot;http.decoded_response_content_length&quot;:6470,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/3824-d8743146c025c3d8.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a5c8aad58d9d853e&quot;,&quot;start_timestamp&quot;:1686232316.8329,&quot;timestamp&quot;:1686232317.7577,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:829825,&quot;http.response_content_length&quot;:829525,&quot;http.decoded_response_content_length&quot;:2983837,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/_app-3a119e5fcba95c88.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a1c261b3d376b56c&quot;,&quot;start_timestamp&quot;:1686232316.8329,&quot;timestamp&quot;:1686232322.8655,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:7588,&quot;http.response_content_length&quot;:7288,&quot;http.decoded_response_content_length&quot;:20238,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2873-d416bd9bffe62a04.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;aa5684dcb34996e2&quot;,&quot;start_timestamp&quot;:1686232316.833,&quot;timestamp&quot;:1686232318.0822,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5669,&quot;http.response_content_length&quot;:5369,&quot;http.decoded_response_content_length&quot;:19443,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/5365-f4ee07af087271df.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b00247d23ad75b3c&quot;,&quot;start_timestamp&quot;:1686232316.8331,&quot;timestamp&quot;:1686232318.1224,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:6773,&quot;http.response_content_length&quot;:6473,&quot;http.decoded_response_content_length&quot;:25496,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/1204-711552c38632d109.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b7c90cb694627218&quot;,&quot;start_timestamp&quot;:1686232316.8331,&quot;timestamp&quot;:1686232318.1386,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1147,&quot;http.response_content_length&quot;:847,&quot;http.decoded_response_content_length&quot;:2132,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard-a237d78e51a3c977.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;813dfda998d66e07&quot;,&quot;start_timestamp&quot;:1686232316.8332,&quot;timestamp&quot;:1686232318.3621,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1781,&quot;http.response_content_length&quot;:1481,&quot;http.decoded_response_content_length&quot;:4326,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/V1IsfSNCCLYMLjAH3rQ2-/_buildManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bf4d5ce48abd3b09&quot;,&quot;start_timestamp&quot;:1686232316.8333,&quot;timestamp&quot;:1686232318.3627002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:854,&quot;http.response_content_length&quot;:554,&quot;http.decoded_response_content_length&quot;:6714,&quot;resource.render_blocking_status&quot;:&quot;blocking&quot;},&quot;description&quot;:&quot;https://fonts.googleapis.com/css2?family</stringProp>
                  <stringProp name="Argument.value">Poppins:wght@300;400;500;600;700;800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">swap&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bdcd489f80520867&quot;,&quot;start_timestamp&quot;:1686232316.8334,&quot;timestamp&quot;:1686232317.1985,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:377,&quot;http.response_content_length&quot;:77,&quot;http.decoded_response_content_length&quot;:77,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/V1IsfSNCCLYMLjAH3rQ2-/_ssgManifest.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a9f69c9ce4945e8a&quot;,&quot;start_timestamp&quot;:1686232316.8334,&quot;timestamp&quot;:1686232318.365,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;first-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;b9428a66d897fffa&quot;,&quot;start_timestamp&quot;:1686232317.3662,&quot;timestamp&quot;:1686232317.3662,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;first-contentful-paint&quot;,&quot;op&quot;:&quot;paint&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ae807426618ed720&quot;,&quot;start_timestamp&quot;:1686232317.3662,&quot;timestamp&quot;:1686232317.3662,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;sentry-tracing-init&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;80609abb41f954f6&quot;,&quot;start_timestamp&quot;:1686232322.8792,&quot;timestamp&quot;:1686232322.8792,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;Next.js-hydration&quot;,&quot;op&quot;:&quot;measure&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bed153a7a23250d0&quot;,&quot;start_timestamp&quot;:1686232323.0762,&quot;timestamp&quot;:1686232323.325,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2204,&quot;http.response_content_length&quot;:1904,&quot;http.decoded_response_content_length&quot;:5326,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/2626.41b074bb0df63da9.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a9c181b43d6ed35e&quot;,&quot;start_timestamp&quot;:1686232323.1373,&quot;timestamp&quot;:1686232323.4294,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://accounts.google.com/gsi/client&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9ea47bab06c2d47a&quot;,&quot;start_timestamp&quot;:1686232323.3331,&quot;timestamp&quot;:1686232323.7414,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:1989,&quot;http.response_content_length&quot;:1689,&quot;http.decoded_response_content_length&quot;:3093,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8959c964c6976755&quot;,&quot;start_timestamp&quot;:1686232323.3344002,&quot;timestamp&quot;:1686232323.4110003,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://www.googletagmanager.com/gtag/js?id=G-S1J112KFF8&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a6a8de2dd2f5c206&quot;,&quot;start_timestamp&quot;:1686232323.335,&quot;timestamp&quot;:1686232323.5699,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a4c312371ac25f3a&quot;,&quot;start_timestamp&quot;:1686232323.3371,&quot;timestamp&quot;:1686232323.6956,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;beforeRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;83721b0df0049c37&quot;,&quot;start_timestamp&quot;:1686232323.4995,&quot;timestamp&quot;:1686232323.4995,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;description&quot;:&quot;afterRender&quot;,&quot;op&quot;:&quot;mark&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;871254729dc4bdb3&quot;,&quot;start_timestamp&quot;:1686232323.6538,&quot;timestamp&quot;:1686232323.6538,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:928,&quot;http.response_content_length&quot;:628,&quot;http.decoded_response_content_length&quot;:1226,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard/[section]-a46a26b1c2883362.js&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;bca4f0c1cbbe6847&quot;,&quot;start_timestamp&quot;:1686232323.9290001,&quot;timestamp&quot;:1686232324.4981,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:87485,&quot;http.response_content_length&quot;:87185,&quot;http.decoded_response_content_length&quot;:308265,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://connect.facebook.net/en_US/sdk.js?hash=886e50185a609b30835692861c94fa5f&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a934adcca4bce414&quot;,&quot;start_timestamp&quot;:1686232324.1187,&quot;timestamp&quot;:1686232324.4219,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;8518ed94f578f1ce&quot;,&quot;start_timestamp&quot;:1686232324.5924,&quot;timestamp&quot;:1686232324.8747,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://data-tr-dev.azureedge.net/profile-images-qa/1f97785a-01c8-4597-8d85-5ebd491f371b.webp&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;a3099188bcbd10e4&quot;,&quot;start_timestamp&quot;:1686232324.8155,&quot;timestamp&quot;:1686232325.1042001,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:928,&quot;http.response_content_length&quot;:628,&quot;http.decoded_response_content_length&quot;:1226,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/dashboard/[section]-a46a26b1c2883362.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;ab2e3dae2eee3a5e&quot;,&quot;start_timestamp&quot;:1686232324.9220002,&quot;timestamp&quot;:1686232325.2131002,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://data-tr-dev.azureedge.net/profile-images-qa/f7554cad-2573-4511-b8db-9af41b8d9bf3.webp&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;85073fbac9ab04f5&quot;,&quot;span_id&quot;:&quot;9c1ccac68cee9704&quot;,&quot;start_timestamp&quot;:1686232325.1266,&quot;timestamp&quot;:1686232325.1769,&quot;trace_id&quot;:&quot;eae4d9f9bf4e410983247cc621df2572&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:2632,&quot;http.response_content_length&quot;:2332,&quot;http.decoded_response_content_length&quot;:2332,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-dev.azureedge.net/nft-images-qa/15d13326-5013-4c66-aebb-89984643171e_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:11,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_On_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.qa.nxlvl.app/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_next/data/${sParse_nextData}/login.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-nextjs-data" elementType="Header">
                  <stringProp name="Header.name">x-nextjs-data</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="baggage" elementType="Header">
                  <stringProp name="Header.name">baggage</stringProp>
                  <stringProp name="Header.value">sentry-environment=qa,sentry-release=V1IsfSNCCLYMLjAH3rQ2-,sentry-transaction=%2Flogin,sentry-public_key=2de207a5cb914c89a4097441301dbb57,sentry-trace_id=ea108f82a6534ec59303d3153ad1f7f0,sentry-sample_rate=1</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">ea108f82a6534ec59303d3153ad1f7f0-98268c07b8d571b0-1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:52:22.831Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;8f269a730a884c91a4ffc7010b699370&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:52:02.928Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:52:22.830Z&quot;,&quot;status&quot;:&quot;crashed&quot;,&quot;errors&quot;:1,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:52:22.831Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;a9bbd8a53d4d459e9403a1b20a9cb822&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:52:22.830Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:52:22.830Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:21,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:52:22.992Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/login&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:52:25.574Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/login&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;823e22a1f7c7734f&quot;,&quot;start_timestamp&quot;:1686232342.0405,&quot;timestamp&quot;:1686232342.986,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:330},&quot;description&quot;:&quot;GET /_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;98268c07b8d571b0&quot;,&quot;start_timestamp&quot;:1686232342.5280998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232342.83,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;abe2ab43df05298b&quot;,&quot;start_timestamp&quot;:1686232342.8305,&quot;timestamp&quot;:1686232342.9864998,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;8291e0100f0cf2fb&quot;,&quot;start_timestamp&quot;:1686232343.967,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232344.5714,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/login-bg.webp&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a33adaac579c5f2e&quot;,&quot;start_timestamp&quot;:1686232342.9455001,&quot;timestamp&quot;:1686232343.239,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;b945f09eedb58454&quot;,&quot;start_timestamp&quot;:1686232342.9595,&quot;timestamp&quot;:1686232343.1256,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;876d281a1e401136&quot;,&quot;start_timestamp&quot;:1686232342.9907,&quot;timestamp&quot;:1686232343.5189,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3074,&quot;http.response_content_length&quot;:2774,&quot;http.decoded_response_content_length&quot;:7484,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/forgot-password-632df6c87b343d26.js&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a994499de6ecb730&quot;,&quot;start_timestamp&quot;:1686232342.9943001,&quot;timestamp&quot;:1686232343.3593001,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:11084,&quot;http.response_content_length&quot;:10784,&quot;http.decoded_response_content_length&quot;:36694,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/signup-7de7e61bb834f32c.js&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;9703bc789db71b3b&quot;,&quot;start_timestamp&quot;:1686232342.9957001,&quot;timestamp&quot;:1686232343.8526,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:2774,&quot;http.decoded_response_content_length&quot;:7484,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/forgot-password-632df6c87b343d26.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a955355e0992cde0&quot;,&quot;start_timestamp&quot;:1686232343.3616002,&quot;timestamp&quot;:1686232343.3652,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:10784,&quot;http.decoded_response_content_length&quot;:36694,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/signup-7de7e61bb834f32c.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;8b9d822d08e51a13&quot;,&quot;start_timestamp&quot;:1686232343.8548,&quot;timestamp&quot;:1686232343.8582,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;}],&quot;start_timestamp&quot;:1686232342.0403,&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;timestamp&quot;:1686232344.5714,&quot;transaction&quot;:&quot;/login&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;route&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1686232323.075,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.498,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.945,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.241,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;f66af3a00cd6497bbd43a768a811ee56&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1686232324.535,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.688,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232324.689,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;81a9a232c9336d84&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.895,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.926,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232324.926,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b15058299fa3aeb0&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.047,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.047,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9c64a469280b98af&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b6962a1db65d28f5&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;95d84bd7c29e5217&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;913ef5de6c42a83c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eff175e7c8a8515&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;__span&quot;:&quot;814ad58ca1fb8475&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232327.424,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;message&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;},{&quot;timestamp&quot;:1686232334.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.039,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#header-main-login-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.css-1x91bqx[type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:52:25.574Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/login&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;823e22a1f7c7734f&quot;,&quot;start_timestamp&quot;:1686232342.0405,&quot;timestamp&quot;:1686232342.986,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:330},&quot;description&quot;:&quot;GET /_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;98268c07b8d571b0&quot;,&quot;start_timestamp&quot;:1686232342.5280998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232342.83,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;abe2ab43df05298b&quot;,&quot;start_timestamp&quot;:1686232342.8305,&quot;timestamp&quot;:1686232342.9864998,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;8291e0100f0cf2fb&quot;,&quot;start_timestamp&quot;:1686232343.967,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232344.5714,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/login-bg.webp&quot;,&quot;op&quot;:&quot;resource.css&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a33adaac579c5f2e&quot;,&quot;start_timestamp&quot;:1686232342.9455001,&quot;timestamp&quot;:1686232343.239,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;b945f09eedb58454&quot;,&quot;start_timestamp&quot;:1686232342.9595,&quot;timestamp&quot;:1686232343.1256,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;876d281a1e401136&quot;,&quot;start_timestamp&quot;:1686232342.9907,&quot;timestamp&quot;:1686232343.5189,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:3074,&quot;http.response_content_length&quot;:2774,&quot;http.decoded_response_content_length&quot;:7484,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/forgot-password-632df6c87b343d26.js&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a994499de6ecb730&quot;,&quot;start_timestamp&quot;:1686232342.9943001,&quot;timestamp&quot;:1686232343.3593001,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:11084,&quot;http.response_content_length&quot;:10784,&quot;http.decoded_response_content_length&quot;:36694,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/signup-7de7e61bb834f32c.js&quot;,&quot;op&quot;:&quot;resource.link&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;9703bc789db71b3b&quot;,&quot;start_timestamp&quot;:1686232342.9957001,&quot;timestamp&quot;:1686232343.8526,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:2774,&quot;http.decoded_response_content_length&quot;:7484,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/forgot-password-632df6c87b343d26.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;a955355e0992cde0&quot;,&quot;start_timestamp&quot;:1686232343.3616002,&quot;timestamp&quot;:1686232343.3652,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:10784,&quot;http.decoded_response_content_length&quot;:36694,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/static/chunks/pages/signup-7de7e61bb834f32c.js&quot;,&quot;op&quot;:&quot;resource.script&quot;,&quot;parent_span_id&quot;:&quot;aa4b6bfee61b8b81&quot;,&quot;span_id&quot;:&quot;8b9d822d08e51a13&quot;,&quot;start_timestamp&quot;:1686232343.8548,&quot;timestamp&quot;:1686232343.8582,&quot;trace_id&quot;:&quot;ea108f82a6534ec59303d3153ad1f7f0&quot;}],&quot;start_timestamp&quot;:1686232342.0403,&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;timestamp&quot;:1686232344.5714,&quot;transaction&quot;:&quot;/login&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;route&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1686232323.075,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.498,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/&quot;}},{&quot;timestamp&quot;:1686232323.945,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions&quot;,&quot;status_code&quot;:201},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.241,&quot;category&quot;:&quot;sentry.event&quot;,&quot;event_id&quot;:&quot;f66af3a00cd6497bbd43a768a811ee56&quot;,&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;SyntaxError: Identifier &apos;originalPrompt&apos; has already been declared&quot;},{&quot;timestamp&quot;:1686232324.535,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://api.gleap.io/config/aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.688,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232324.689,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;81a9a232c9336d84&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.895,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232324.926,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232324.926,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b15058299fa3aeb0&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.047,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.047,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9c64a469280b98af&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b6962a1db65d28f5&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;95d84bd7c29e5217&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;913ef5de6c42a83c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eff175e7c8a8515&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;__span&quot;:&quot;814ad58ca1fb8475&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232327.424,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;message&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;},{&quot;timestamp&quot;:1686232334.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.039,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#header-main-login-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.css-1x91bqx[type</stringProp>
                  <stringProp name="Argument.value">\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1686232342.829,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232342.83,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;__span&quot;:&quot;98268c07b8d571b0&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.83,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/login&quot;}},{&quot;timestamp&quot;:1686232344.571,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.qa.nxlvl.app/login&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:31,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_On_Submit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:41,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:51,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:61,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;login&quot;,&quot;variables&quot;:{&quot;loginInput&quot;:{&quot;email&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;${Password}&quot;,&quot;loginVia&quot;:&quot;Marketplace&quot;,&quot;checkEmailVerified&quot;:true}},&quot;query&quot;:&quot;mutation login($loginInput: LoginInput) {\n  login(loginInput: $loginInput) {\n    accessToken\n    userId\n    refreshToken\n    isOTPRequired\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sParse_userId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sParse_userId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;userId&quot;:(.*?),&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sParse_userId_NF</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-596509617">${sParse_userId}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:71,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:81,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Enter_OTP_and_Click_On_Submit" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:101,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ConfirmOTP&quot;,&quot;variables&quot;:{&quot;otpInput&quot;:{&quot;otp&quot;:373659,&quot;email&quot;:&quot;${email}&quot;}},&quot;query&quot;:&quot;mutation ConfirmOTP($otpInput: OTPInput) {\n  confirmOTP(otpInput: $otpInput) {\n    accessToken\n    userId\n    refreshToken\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sParse_accessToken" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sParse_accessToken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;accessToken&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sParse_accessToken_NF</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1780533190">{&quot;data&quot;:{&quot;confirmOTP&quot;:{&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUserById&quot;,&quot;variables&quot;:{&quot;id&quot;:${sParse_userId}},&quot;query&quot;:&quot;query getUserById($id: Int!) {\n  getUserById(id: $id) {\n    id\n    firstname\n    lastname\n    userType\n    email\n    birthDate\n    profileImage\n    dwollaCustomer {\n      status\n      url\n      __typename\n    }\n    username\n    createdAt\n    provider\n    preferences {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:53:47.631Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;a9bbd8a53d4d459e9403a1b20a9cb822&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:52:22.830Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:53:47.630Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:53:47.632Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;84e49d67d8a5429f99c894473f80455a&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:53:47.630Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:53:47.630Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGroupedUserActivities&quot;,&quot;variables&quot;:{&quot;isUserActivity&quot;:false},&quot;query&quot;:&quot;query getGroupedUserActivities($isUserActivity: Boolean) {\n  getGroupedUserActivities(isUserActivity: $isUserActivity) {\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFeaturedCreators&quot;,&quot;variables&quot;:{&quot;cursor&quot;:0,&quot;take&quot;:6,&quot;userId&quot;:${sParse_userId}},&quot;query&quot;:&quot;query getFeaturedCreators($cursor: Int!, $take: Int!, $userId: Int!, $activityId: [Int]) {\n  getFeaturedCreators(cursor: $cursor, take: $take, activityId: $activityId) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          profileImage\n          backgroundImage\n          backgroundVideoData\n          isFollowing(userId: $userId)\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUserStatistic&quot;,&quot;variables&quot;:{&quot;userId&quot;:${sParse_userId}},&quot;query&quot;:&quot;query getUserStatistic($userId: Int!) {\n  getUserStatistic(userId: $userId) {\n    id\n    userId\n    firebaseNotificationCount\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFirebaseNotificationCount&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getFirebaseNotificationCount {\n  getFirebaseNotificationCount\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDwollaWalletBalance&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getDwollaWalletBalance {\n  getDwollaWalletBalance {\n    balance\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;bookmarkedUsers&quot;,&quot;variables&quot;:{&quot;userId&quot;:${sParse_userId},&quot;cursor&quot;:0,&quot;take&quot;:3},&quot;query&quot;:&quot;query bookmarkedUsers($cursor: Int!, $take: Int!, $userId: Int!) {\n  getBookmarkedUsers(userId: $userId, cursor: $cursor, take: $take) {\n    pageEdges {\n      node {\n        id\n        user {\n          id\n          firstname\n          lastname\n          username\n          profileImage\n          dwollaCustomer {\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      totalCount\n      hasNextPage\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1686232429257" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232429257</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;$identify&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.qa.nxlvl.app/login&quot;,&quot;$browser_version&quot;: 113,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;zilj9rkgpdsoxf6k&quot;,&quot;time&quot;: 1686232427.624,&quot;distinct_id&quot;: 10,&quot;$device_id&quot;: &quot;1889b4664213ab8-0182ba1d8cfd59-26031a51-100200-1889b4664213ab8&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 10,&quot;First Name&quot;: &quot;Frank&quot;,&quot;Last Name&quot;: &quot;Marshall&quot;,&quot;User Name&quot;: &quot;fm&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Thursday, June 8, 2023 07:23 PM&quot;,&quot;Signup Date&quot;: &quot;Friday, September 17, 2021 01:27 PM&quot;,&quot;List of Interests&quot;: &quot;Baseball,Basketball,Cycling,Lacrosse,Modern Pentathlon,Roller Derby,Rugby (League),Skateboarding,Skiing,Slap Boxing,Softball,Sumo Wrestling,Ultimate Frisbee,Volleyball&quot;,&quot;$user_id&quot;: 10,&quot;$anon_distinct_id&quot;: &quot;$device:1889b4664213ab8-0182ba1d8cfd59-26031a51-100200-1889b4664213ab8&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}},
    {&quot;event&quot;: &quot;Login&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.qa.nxlvl.app/login&quot;,&quot;$browser_version&quot;: 113,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;pf7s9ijtta4vg8dt&quot;,&quot;time&quot;: 1686232427.626,&quot;distinct_id&quot;: 10,&quot;$device_id&quot;: &quot;1889b4664213ab8-0182ba1d8cfd59-26031a51-100200-1889b4664213ab8&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 10,&quot;First Name&quot;: &quot;Frank&quot;,&quot;Last Name&quot;: &quot;Marshall&quot;,&quot;User Name&quot;: &quot;fm&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Thursday, June 8, 2023 07:23 PM&quot;,&quot;Signup Date&quot;: &quot;Friday, September 17, 2021 01:27 PM&quot;,&quot;List of Interests&quot;: &quot;Baseball,Basketball,Cycling,Lacrosse,Modern Pentathlon,Roller Derby,Rugby (League),Skateboarding,Skiing,Slap Boxing,Softball,Sumo Wrestling,Ultimate Frisbee,Volleyball&quot;,&quot;$user_id&quot;: 10,&quot;Date&quot;: &quot;Thursday, June 8, 2023 07:23 PM&quot;,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFirebaseNotifications&quot;,&quot;variables&quot;:{&quot;userId&quot;:${sParse_userId},&quot;cursor&quot;:0,&quot;take&quot;:15},&quot;query&quot;:&quot;query getFirebaseNotifications($userId: Int!, $take: Int!, $cursor: Int!) {\n  getFirebaseNotifications(\n    notificationArgs: {userId: $userId, take: $take, cursor: $cursor}\n  ) {\n    pageEdges {\n      node {\n        id\n        isActionRequired\n        extraParameters\n        title\n        type\n        isRead\n        isViewed\n        receiverId\n        senderId\n        nftId\n        nftEditionId\n        nftEdition {\n          tier\n          price\n          seriesNumber\n          __typename\n        }\n        nft {\n          name\n          imageUrl\n          videoData\n          __typename\n        }\n        receiver {\n          firstname\n          lastname\n          profileImage\n          __typename\n        }\n        sender {\n          firstname\n          lastname\n          profileImage\n          __typename\n        }\n        createdAt\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;8b2a37169308c5ce&quot;,&quot;start_timestamp&quot;:1686232428.1291,&quot;timestamp&quot;:1686232429.6167002,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://data-tr-dev.azureedge.net/profile-images-qa/f7554cad-2573-4511-b8db-9af41b8d9bf3.webp&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;abf75fbaaeaff42b&quot;,&quot;start_timestamp&quot;:1686232428.1295002,&quot;timestamp&quot;:1686232428.4930003,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15114,&quot;http.response_content_length&quot;:14814,&quot;http.decoded_response_content_length&quot;:14814,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-dev.azureedge.net/nft-images-qa/ec627674-76fb-4bb7-bbda-5e21f2c2b8fd_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:53:50.937Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/login&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;ab47b9462e158846&quot;,&quot;start_timestamp&quot;:1686232427.6282,&quot;timestamp&quot;:1686232428.2591999,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;87eed82c597b0aee&quot;,&quot;start_timestamp&quot;:1686232428.2601,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.0393999,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;83413e0773b403db&quot;,&quot;start_timestamp&quot;:1686232428.2766,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.2772,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9346321c1b2408db&quot;,&quot;start_timestamp&quot;:1686232428.2775998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.239,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;bb65ba7c12283b98&quot;,&quot;start_timestamp&quot;:1686232428.2792997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.37,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9ee9c1e5961f8a7a&quot;,&quot;start_timestamp&quot;:1686232428.2803998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.8723998,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;947154679fabc147&quot;,&quot;start_timestamp&quot;:1686232428.3270998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.3702,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9e37e16d3ab2e78e&quot;,&quot;start_timestamp&quot;:1686232427.6063,&quot;timestamp&quot;:1686232428.3273,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;86aeecef3deea293&quot;,&quot;start_timestamp&quot;:1686232428.3281002,&quot;timestamp&quot;:1686232428.4111001,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:53:50.937Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/dashboard&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;status&quot;:&quot;internal_error&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/login&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;ab47b9462e158846&quot;,&quot;start_timestamp&quot;:1686232427.6282,&quot;timestamp&quot;:1686232428.2591999,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;87eed82c597b0aee&quot;,&quot;start_timestamp&quot;:1686232428.2601,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.0393999,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;83413e0773b403db&quot;,&quot;start_timestamp&quot;:1686232428.2766,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.2772,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9346321c1b2408db&quot;,&quot;start_timestamp&quot;:1686232428.2775998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.239,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;bb65ba7c12283b98&quot;,&quot;start_timestamp&quot;:1686232428.2792997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.37,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9ee9c1e5961f8a7a&quot;,&quot;start_timestamp&quot;:1686232428.2803998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.8723998,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;947154679fabc147&quot;,&quot;start_timestamp&quot;:1686232428.3270998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232429.3702,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;9e37e16d3ab2e78e&quot;,&quot;start_timestamp&quot;:1686232427.6063,&quot;timestamp&quot;:1686232428.3273,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;aed431cb8b93b13b&quot;,&quot;span_id&quot;:&quot;86aeecef3deea293&quot;,&quot;start_timestamp&quot;:1686232428.3281002,&quot;timestamp&quot;:1686232428.4111001,&quot;trace_id&quot;:&quot;11430b882e1f4af287939a5c97628320&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232429257&quot;},&quot;description&quot;:&quot;POST https://api-js.mixpanel.com/track/?verbose=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:111,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:53:48.423Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/dashboard&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:121,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_On_MyNFTs" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:54:12.135Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;84e49d67d8a5429f99c894473f80455a&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:53:47.630Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:54:12.134Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:54:12.136Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;523bcd105c0349deabc51b35bd2db9b5&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:54:12.134Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:54:12.134Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGroupedUserActivities&quot;,&quot;variables&quot;:{&quot;isUserActivity&quot;:false},&quot;query&quot;:&quot;query getGroupedUserActivities($isUserActivity: Boolean) {\n  getGroupedUserActivities(isUserActivity: $isUserActivity) {\n    groupedUserActivities {\n      name\n      activities {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getNFTEdition&quot;,&quot;variables&quot;:{&quot;nftEditionStatus&quot;:&quot;Listed&quot;,&quot;tiers&quot;:[],&quot;isForSale&quot;:false,&quot;activityIds&quot;:[],&quot;cursor&quot;:0,&quot;take&quot;:10,&quot;pageNo&quot;:0},&quot;query&quot;:&quot;query getNFTEdition($nftEditionStatus: NFTEditionStatus, $activityIds: [Int], $sortBy: NFTSortBy, $tiers: [NFTEditionTier], $userId: Int, $take: Int, $cursor: Int, $pageNo: Int, $priceRange: PriceRange, $isForSale: Boolean) {\n  getNFTEdition(\n    getNFTEditionsArgs: {nftEditionStatus: $nftEditionStatus, activityIds: $activityIds, sortBy: $sortBy, tiers: $tiers, userId: $userId, take: $take, cursor: $cursor, pageNo: $pageNo, priceRange: $priceRange, isForSale: $isForSale}\n  ) {\n    __typename\n    pageEdges {\n      node {\n        id\n        associatedTiers(nftEditionStatus: $nftEditionStatus, userId: $userId)\n        tier\n        status\n        createdAt\n        isRelisted\n        isBookmarked\n        seriesNumber\n        nftId\n        price\n        left\n        size\n        tier\n        autoGenerated\n        nft {\n          id\n          description\n          name\n          isNFTBookmarked\n          isLiked\n          likeCount\n          imageUrl\n          videoData\n          viewCount\n          user {\n            id\n            firstname\n            lastname\n            username\n            profileImage\n            dwollaCustomer {\n              status\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      pageNo\n      __typename\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUserDetailsById&quot;,&quot;variables&quot;:{&quot;id&quot;:${sParse_userId},&quot;userId&quot;:${sParse_userId}},&quot;query&quot;:&quot;query getUserDetailsById($id: Int!, $userId: Int!) {\n  getUserDetailsById(id: $id) {\n    id\n    username\n    firstname\n    lastname\n    userType\n    userInstitutions {\n      College {\n        institution {\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    preferences {\n      id\n      name\n      __typename\n    }\n    dwollaCustomer {\n      status\n      __typename\n    }\n    isPeopleBookmarked\n    backgroundVideoData\n    backgroundImage\n    backgroundImageThumbnail\n    profileImage\n    email\n    isFollowing(userId: $userId)\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;nftStatistics&quot;,&quot;variables&quot;:{&quot;userId&quot;:null},&quot;query&quot;:&quot;query nftStatistics($userId: Int) {\n  getNFTStatistics(userId: $userId) {\n    userId\n    listedCount\n    createdCount\n    soldCount\n    purchaseCount\n    bookmarkCount\n    draftCount\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:131,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:54:12.881Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/my-nft/listed&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;9f15e957e5831735&quot;,&quot;start_timestamp&quot;:1686232452.4079,&quot;timestamp&quot;:1686232453.1475,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15114,&quot;http.response_content_length&quot;:14814,&quot;http.decoded_response_content_length&quot;:14814,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-dev.azureedge.net/nft-images-qa/ec627674-76fb-4bb7-bbda-5e21f2c2b8fd_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:54:16.065Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/my-nft/[category]&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;842749db1a1694cd&quot;,&quot;start_timestamp&quot;:1686232452.1225998,&quot;timestamp&quot;:1686232452.323,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;ad64ed41df8e6cf1&quot;,&quot;start_timestamp&quot;:1686232452.3267999,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.8328,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;bad993411fa9fb94&quot;,&quot;start_timestamp&quot;:1686232452.3277,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.1653998,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;99799ad4e870759b&quot;,&quot;start_timestamp&quot;:1686232452.3567998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.8586,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;9aa602de6e683071&quot;,&quot;start_timestamp&quot;:1686232452.1092002,&quot;timestamp&quot;:1686232452.3622003,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;afa843c61d07865b&quot;,&quot;start_timestamp&quot;:1686232453.1779,&quot;timestamp&quot;:1686232453.3259,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;9eda62ffb4a24c0e&quot;,&quot;start_timestamp&quot;:1686232453.9035997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232454.4796,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;982381309a1f87de&quot;,&quot;start_timestamp&quot;:1686232454.4267998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232455.0609,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;8184273b860e4855&quot;,&quot;start_timestamp&quot;:1686232452.3792,&quot;timestamp&quot;:1686232452.7735999,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5536,&quot;http.response_content_length&quot;:5236,&quot;http.decoded_response_content_length&quot;:5236,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:54:16.065Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/my-nft/[category]&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/dashboard&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;842749db1a1694cd&quot;,&quot;start_timestamp&quot;:1686232452.1225998,&quot;timestamp&quot;:1686232452.323,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;ad64ed41df8e6cf1&quot;,&quot;start_timestamp&quot;:1686232452.3267999,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.8328,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;bad993411fa9fb94&quot;,&quot;start_timestamp&quot;:1686232452.3277,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.1653998,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;99799ad4e870759b&quot;,&quot;start_timestamp&quot;:1686232452.3567998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232453.8586,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;9aa602de6e683071&quot;,&quot;start_timestamp&quot;:1686232452.1092002,&quot;timestamp&quot;:1686232452.3622003,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;afa843c61d07865b&quot;,&quot;start_timestamp&quot;:1686232453.1779,&quot;timestamp&quot;:1686232453.3259,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;9eda62ffb4a24c0e&quot;,&quot;start_timestamp&quot;:1686232453.9035997,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232454.4796,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;type&quot;:&quot;xhr&quot;,&quot;http.method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;},&quot;description&quot;:&quot;POST https://api.gleap.io/sessions/ping&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;982381309a1f87de&quot;,&quot;start_timestamp&quot;:1686232454.4267998,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232455.0609,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;ab9194fb2351d0fa&quot;,&quot;span_id&quot;:&quot;8184273b860e4855&quot;,&quot;start_timestamp&quot;:1686232452.3792,&quot;timestamp&quot;:1686232452.7735999,&quot;trace_id&quot;:&quot;340cd0422dbc46119aedb6c140b04d05&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:5536,&quot;http.response_content_length&quot;:5236,&quot;http.decoded_response_content_length&quot;:5236,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url</stringProp>
                  <stringProp name="Argument.value">https://datatrdev.blob.core.windows.net/marketplace-static-images/nxConnect-Banner.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232429257&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9ee9c1e5961f8a7a&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;96468e883e71ba34&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232430.937,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;,&quot;message&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;},{&quot;timestamp&quot;:1686232434.99,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232445.23,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232452.118,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#sidebar-discover-button-my-nft.MuiButtonBase-root.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.nx-discover-btn.css-z8l1cg[type=\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1686232452.134,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/dashboard&quot;,&quot;to&quot;:&quot;/my-nft/listed&quot;}},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bad993411fa9fb94&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.832,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.833,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;ad64ed41df8e6cf1&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.858,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.859,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;99799ad4e870759b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eda62ffb4a24c0e&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232455.061,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.qa.nxlvl.app/my-nft/listed&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:141,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_On_Sold_NFTs" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:151,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:54:36.782Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;523bcd105c0349deabc51b35bd2db9b5&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:54:12.134Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:54:36.782Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:54:36.783Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;1c2715e0d327416399bf52a39931c549&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:54:36.782Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:54:36.782Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;nftStatistics&quot;,&quot;variables&quot;:{&quot;userId&quot;:null},&quot;query&quot;:&quot;query nftStatistics($userId: Int) {\n  getNFTStatistics(userId: $userId) {\n    userId\n    listedCount\n    createdCount\n    soldCount\n    purchaseCount\n    bookmarkCount\n    draftCount\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getNFTEdition&quot;,&quot;variables&quot;:{&quot;nftEditionStatus&quot;:&quot;Sold&quot;,&quot;tiers&quot;:[],&quot;isForSale&quot;:false,&quot;activityIds&quot;:[],&quot;cursor&quot;:0,&quot;take&quot;:10,&quot;pageNo&quot;:0},&quot;query&quot;:&quot;query getNFTEdition($nftEditionStatus: NFTEditionStatus, $activityIds: [Int], $sortBy: NFTSortBy, $tiers: [NFTEditionTier], $userId: Int, $take: Int, $cursor: Int, $pageNo: Int, $priceRange: PriceRange, $isForSale: Boolean) {\n  getNFTEdition(\n    getNFTEditionsArgs: {nftEditionStatus: $nftEditionStatus, activityIds: $activityIds, sortBy: $sortBy, tiers: $tiers, userId: $userId, take: $take, cursor: $cursor, pageNo: $pageNo, priceRange: $priceRange, isForSale: $isForSale}\n  ) {\n    __typename\n    pageEdges {\n      node {\n        id\n        associatedTiers(nftEditionStatus: $nftEditionStatus, userId: $userId)\n        tier\n        status\n        createdAt\n        isRelisted\n        isBookmarked\n        seriesNumber\n        nftId\n        price\n        left\n        size\n        tier\n        autoGenerated\n        nft {\n          id\n          description\n          name\n          isNFTBookmarked\n          isLiked\n          likeCount\n          imageUrl\n          videoData\n          viewCount\n          user {\n            id\n            firstname\n            lastname\n            username\n            profileImage\n            dwollaCustomer {\n              status\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      totalCount\n      pageNo\n      __typename\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">75&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;8684fecd21d493d7&quot;,&quot;start_timestamp&quot;:1686232477.0564,&quot;timestamp&quot;:1686232477.6229,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://data-tr-dev.azureedge.net/profile-images-qa/f7554cad-2573-4511-b8db-9af41b8d9bf3.webp&quot;,&quot;op&quot;:&quot;resource.img&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;a073adc2d404df3f&quot;,&quot;start_timestamp&quot;:1686232477.0567,&quot;timestamp&quot;:1686232477.164,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:10072,&quot;http.response_content_length&quot;:9772,&quot;http.decoded_response_content_length&quot;:9772,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url=https://data-tr-dev.azureedge.net/nft-images-qa/0003be61-9cfb-4942-a6ee-c2a2ed4dea8b_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">w</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;38601a9fe94b46a0b453c7532b1456b9&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:54:39.222Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/my-nft/[category]&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;bb726a51de1b5375&quot;,&quot;start_timestamp&quot;:1686232476.721,&quot;timestamp&quot;:1686232477.1139,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;ab3f82d095c642d2&quot;,&quot;start_timestamp&quot;:1686232477.1145,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232478.2187998,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;bba9a8efe4828bdf&quot;,&quot;start_timestamp&quot;:1686232477.1158,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232477.9771,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;9b11b1ed1e0fbea9&quot;,&quot;start_timestamp&quot;:1686232476.7062001,&quot;timestamp&quot;:1686232477.1202002,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;9f78c3cfb5429896&quot;,&quot;start_timestamp&quot;:1686232477.9782002,&quot;timestamp&quot;:1686232478.0792003,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15114,&quot;http.response_content_length&quot;:14814,&quot;http.decoded_response_content_length&quot;:14814,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;38601a9fe94b46a0b453c7532b1456b9&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:54:39.222Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/my-nft/[category]&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;bb726a51de1b5375&quot;,&quot;start_timestamp&quot;:1686232476.721,&quot;timestamp&quot;:1686232477.1139,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;ab3f82d095c642d2&quot;,&quot;start_timestamp&quot;:1686232477.1145,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232478.2187998,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;POST&quot;},&quot;description&quot;:&quot;POST https://routers.qa.nxlvl.app&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;bba9a8efe4828bdf&quot;,&quot;start_timestamp&quot;:1686232477.1158,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232477.9771,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;9b11b1ed1e0fbea9&quot;,&quot;start_timestamp&quot;:1686232476.7062001,&quot;timestamp&quot;:1686232477.1202002,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;995367a9e177dd92&quot;,&quot;span_id&quot;:&quot;9f78c3cfb5429896&quot;,&quot;start_timestamp&quot;:1686232477.9782002,&quot;timestamp&quot;:1686232478.0792003,&quot;trace_id&quot;:&quot;3e32a9d84fdb40a7afab570b6e2689e4&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:15114,&quot;http.response_content_length&quot;:14814,&quot;http.decoded_response_content_length&quot;:14814,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;/_next/image?url</stringProp>
                  <stringProp name="Argument.value">https://data-tr-dev.azureedge.net/nft-images-qa/ec627674-76fb-4bb7-bbda-5e21f2c2b8fd_thumbnail.webp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232429257&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9ee9c1e5961f8a7a&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;96468e883e71ba34&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232430.937,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;,&quot;message&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;},{&quot;timestamp&quot;:1686232434.99,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232445.23,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232452.118,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#sidebar-discover-button-my-nft.MuiButtonBase-root.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.nx-discover-btn.css-z8l1cg[type=\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1686232452.134,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/dashboard&quot;,&quot;to&quot;:&quot;/my-nft/listed&quot;}},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bad993411fa9fb94&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.832,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.833,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;ad64ed41df8e6cf1&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.858,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.859,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;99799ad4e870759b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eda62ffb4a24c0e&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232455.061,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232456.065,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;,&quot;message&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;},{&quot;timestamp&quot;:1686232465.301,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232475.233,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232476.712,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;span.MuiTypography-root.MuiTypography-body1.MuiListItemText-primary.css-17u1vbt&quot;},{&quot;timestamp&quot;:1686232476.782,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/my-nft/listed&quot;,&quot;to&quot;:&quot;/my-nft/sold&quot;}},{&quot;timestamp&quot;:1686232477.977,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232477.977,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bba9a8efe4828bdf&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232478.218,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232478.219,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;ab3f82d095c642d2&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;https://marketplace.qa.nxlvl.app/my-nft/sold&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api-js.mixpanel.com/track/?verbose=1&amp;ip=1&amp;_=1686232479518" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="verbose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">verbose</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232479518</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">[
    {&quot;event&quot;: &quot;Sold User&apos;s NFT&quot;,&quot;properties&quot;: {&quot;$os&quot;: &quot;Windows&quot;,&quot;$browser&quot;: &quot;Chrome&quot;,&quot;$current_url&quot;: &quot;https://marketplace.qa.nxlvl.app/my-nft/listed&quot;,&quot;$browser_version&quot;: 113,&quot;$screen_height&quot;: 768,&quot;$screen_width&quot;: 1366,&quot;mp_lib&quot;: &quot;web&quot;,&quot;$lib_version&quot;: &quot;2.47.0&quot;,&quot;$insert_id&quot;: &quot;y2j4z05iur3q6qap&quot;,&quot;time&quot;: 1686232476.717,&quot;distinct_id&quot;: 10,&quot;$device_id&quot;: &quot;1889b4664213ab8-0182ba1d8cfd59-26031a51-100200-1889b4664213ab8&quot;,&quot;$initial_referrer&quot;: &quot;$direct&quot;,&quot;$initial_referring_domain&quot;: &quot;$direct&quot;,&quot;ID&quot;: 10,&quot;First Name&quot;: &quot;Frank&quot;,&quot;Last Name&quot;: &quot;Marshall&quot;,&quot;User Name&quot;: &quot;fm&quot;,&quot;Login Type&quot;: &quot;Email&quot;,&quot;Last Login Date&quot;: &quot;Thursday, June 8, 2023 07:23 PM&quot;,&quot;Signup Date&quot;: &quot;Friday, September 17, 2021 01:27 PM&quot;,&quot;List of Interests&quot;: &quot;Baseball,Basketball,Cycling,Lacrosse,Modern Pentathlon,Roller Derby,Rugby (League),Skateboarding,Skiing,Slap Boxing,Softball,Sumo Wrestling,Ultimate Frisbee,Volleyball&quot;,&quot;$user_id&quot;: 10,&quot;token&quot;: &quot;c22021ac4b5979e50969e6360db8896d&quot;,&quot;mp_sent_by_lib_version&quot;: &quot;2.47.0&quot;}}
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">track/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:161,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:54:37.155Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/my-nft/sold&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:171,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_On_Logout" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:181,&quot;events&quot;:[],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://routers.qa.nxlvl.app/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;Logout&quot;,&quot;variables&quot;:{&quot;deviceId&quot;:&quot;&quot;,&quot;logOutVia&quot;:&quot;Marketplace&quot;},&quot;query&quot;:&quot;mutation Logout($deviceId: String, $logOutVia: SignUpORLogoutType) {\n  logout(deviceId: $deviceId, logOutVia: $logOutVia)\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${sParse_accessToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://marketplace.qa.nxlvl.app/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-nextjs-data" elementType="Header">
                  <stringProp name="Header.name">x-nextjs-data</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="baggage" elementType="Header">
                  <stringProp name="Header.name">baggage</stringProp>
                  <stringProp name="Header.value">sentry-environment=qa,sentry-release=V1IsfSNCCLYMLjAH3rQ2-,sentry-transaction=%2Flogin,sentry-public_key=2de207a5cb914c89a4097441301dbb57,sentry-trace_id=5dd4a8b370594b5394866626faf0e038,sentry-sample_rate=1</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">5dd4a8b370594b5394866626faf0e038-8a8eed7f93592415-1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:55:13.327Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;1c2715e0d327416399bf52a39931c549&quot;,&quot;init&quot;:false,&quot;started&quot;:&quot;2023-06-08T13:54:36.782Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:55:13.327Z&quot;,&quot;status&quot;:&quot;exited&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2023-06-08T13:55:13.328Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;c0fd31ac8dbf46c2a1ff6374afe71718&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2023-06-08T13:55:13.326Z&quot;,&quot;timestamp&quot;:&quot;2023-06-08T13:55:13.327Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://o733402.ingest.sentry.io/api/4504926323277824/envelope/?sentry_key=2de207a5cb914c89a4097441301dbb57&amp;sentry_version=7&amp;sentry_client=sentry.javascript.nextjs%2F7.54.0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sentry_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_version</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sentry_client</stringProp>
                  <stringProp name="Argument.value">sentry.javascript.nextjs/7.54.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sentry_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sentry_key</stringProp>
                  <stringProp name="Argument.value">2de207a5cb914c89a4097441301dbb57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="{&quot;event_id&quot;:&quot;f4cab274f94344ed902504cb0a294e2a&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:55:14.452Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/login&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}&#xa;{&quot;type&quot;:&quot;transaction&quot;}&#xa;{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;89e453d3cc246778&quot;,&quot;start_timestamp&quot;:1686232512.7290998,&quot;timestamp&quot;:1686232513.4436,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:330},&quot;description&quot;:&quot;GET /_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;8a8eed7f93592415&quot;,&quot;start_timestamp&quot;:1686232512.7609,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232513.326,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;a4302c1993390c9a&quot;,&quot;start_timestamp&quot;:1686232512.712,&quot;timestamp&quot;:1686232512.7619998,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;84ca12a243de677a&quot;,&quot;start_timestamp&quot;:1686232513.3268,&quot;timestamp&quot;:1686232513.4438002,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;8e3c12c3fdf3469c&quot;,&quot;start_timestamp&quot;:1686232513.4474,&quot;timestamp&quot;:1686232513.8377001,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;}],&quot;start_timestamp&quot;:1686232512.729,&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;timestamp&quot;:1686232513.8377001,&quot;transaction&quot;:&quot;/login&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;route&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;f4cab274f94344ed902504cb0a294e2a&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b6962a1db65d28f5&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;95d84bd7c29e5217&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;913ef5de6c42a83c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eff175e7c8a8515&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;__span&quot;:&quot;814ad58ca1fb8475&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232327.424,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;message&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;},{&quot;timestamp&quot;:1686232334.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.039,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#header-main-login-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.css-1x91bqx[type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;event_id&quot;:&quot;f4cab274f94344ed902504cb0a294e2a&quot;,&quot;sent_at&quot;:&quot;2023-06-08T13:55:14.452Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},&quot;trace&quot;:{&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;transaction&quot;:&quot;/login&quot;,&quot;public_key&quot;:&quot;2de207a5cb914c89a4097441301dbb57&quot;,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;,&quot;sample_rate&quot;:&quot;1&quot;}}
{&quot;type&quot;:&quot;transaction&quot;}
{&quot;contexts&quot;:{&quot;trace&quot;:{&quot;op&quot;:&quot;navigation&quot;,&quot;span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;tags&quot;:{&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;}},&quot;spans&quot;:[{&quot;description&quot;:&quot;Next.js Route Change&quot;,&quot;op&quot;:&quot;ui.nextjs.route-change&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;89e453d3cc246778&quot;,&quot;start_timestamp&quot;:1686232512.7290998,&quot;timestamp&quot;:1686232513.4436,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;data&quot;:{&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;type&quot;:&quot;fetch&quot;,&quot;http.method&quot;:&quot;GET&quot;,&quot;http.response_content_length&quot;:330},&quot;description&quot;:&quot;GET /_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;op&quot;:&quot;http.client&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;8a8eed7f93592415&quot;,&quot;start_timestamp&quot;:1686232512.7609,&quot;status&quot;:&quot;ok&quot;,&quot;tags&quot;:{&quot;http.status_code&quot;:&quot;200&quot;},&quot;timestamp&quot;:1686232513.326,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;a4302c1993390c9a&quot;,&quot;start_timestamp&quot;:1686232512.712,&quot;timestamp&quot;:1686232512.7619998,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;description&quot;:&quot;Main UI thread blocked&quot;,&quot;op&quot;:&quot;ui.long-task&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;84ca12a243de677a&quot;,&quot;start_timestamp&quot;:1686232513.3268,&quot;timestamp&quot;:1686232513.4438002,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;},{&quot;data&quot;:{&quot;http.response_transfer_size&quot;:0,&quot;http.response_content_length&quot;:0,&quot;http.decoded_response_content_length&quot;:0,&quot;resource.render_blocking_status&quot;:&quot;non-blocking&quot;},&quot;description&quot;:&quot;https://datatrdev.blob.core.windows.net/marketplace-static-images/nxlvl_logo.webp&quot;,&quot;op&quot;:&quot;resource.other&quot;,&quot;parent_span_id&quot;:&quot;83238f910a8e4726&quot;,&quot;span_id&quot;:&quot;8e3c12c3fdf3469c&quot;,&quot;start_timestamp&quot;:1686232513.4474,&quot;timestamp&quot;:1686232513.8377001,&quot;trace_id&quot;:&quot;5dd4a8b370594b5394866626faf0e038&quot;}],&quot;start_timestamp&quot;:1686232512.729,&quot;tags&quot;:{&quot;runtime&quot;:&quot;browser&quot;,&quot;routing.instrumentation&quot;:&quot;next-router&quot;,&quot;from&quot;:&quot;/my-nft/[category]&quot;,&quot;effectiveConnectionType&quot;:&quot;3g&quot;,&quot;deviceMemory&quot;:&quot;8 GB&quot;,&quot;hardwareConcurrency&quot;:&quot;8&quot;},&quot;timestamp&quot;:1686232513.8377001,&quot;transaction&quot;:&quot;/login&quot;,&quot;type&quot;:&quot;transaction&quot;,&quot;transaction_info&quot;:{&quot;source&quot;:&quot;route&quot;},&quot;platform&quot;:&quot;javascript&quot;,&quot;event_id&quot;:&quot;f4cab274f94344ed902504cb0a294e2a&quot;,&quot;environment&quot;:&quot;qa&quot;,&quot;release&quot;:&quot;V1IsfSNCCLYMLjAH3rQ2-&quot;,&quot;sdk&quot;:{&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;Dedupe&quot;,&quot;HttpContext&quot;,&quot;RewriteFrames&quot;,&quot;BrowserTracing&quot;],&quot;name&quot;:&quot;sentry.javascript.nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/nextjs&quot;,&quot;version&quot;:&quot;7.54.0&quot;},{&quot;name&quot;:&quot;npm:@sentry/react&quot;,&quot;version&quot;:&quot;7.54.0&quot;}]},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1686232325.201,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;b6962a1db65d28f5&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.337,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;95d84bd7c29e5217&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.523,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;964fd7dc43ae30fb&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.582,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;913ef5de6c42a83c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;a5f2e77bfcfc736b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232325.956,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bcaa04a8ef5f9b7c&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.137,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eff175e7c8a8515&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232326.409,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;https://data-tr-dev.azureedge.net/nftcategorycontainer/Sports.svg&quot;,&quot;__span&quot;:&quot;814ad58ca1fb8475&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232327.424,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;,&quot;message&quot;:&quot;d54a8c9e331e40ecbaaa0737aded696d&quot;},{&quot;timestamp&quot;:1686232334.448,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.039,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#header-main-login-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeXsmall.MuiButton-containedSizeXsmall.MuiButton-disableElevation.css-1x91bqx[type</stringProp>
                  <stringProp name="Argument.value">\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1686232342.829,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232342.83,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/_next/data/V1IsfSNCCLYMLjAH3rQ2-/login.json&quot;,&quot;__span&quot;:&quot;98268c07b8d571b0&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232342.83,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/&quot;,&quot;to&quot;:&quot;/login&quot;}},{&quot;timestamp&quot;:1686232344.571,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232345.573,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;,&quot;message&quot;:&quot;d38167a18dbc4a5aa65d1f438a6a3244&quot;},{&quot;timestamp&quot;:1686232354.606,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232357.151,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;input#login-form-email.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;text\&quot;][name=\&quot;email\&quot;]&quot;},{&quot;timestamp&quot;:1686232358.393,&quot;category&quot;:&quot;ui.input&quot;,&quot;message&quot;:&quot;input#login-form-email.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;text\&quot;][name=\&quot;email\&quot;]&quot;},{&quot;timestamp&quot;:1686232361.877,&quot;category&quot;:&quot;ui.input&quot;,&quot;message&quot;:&quot;input#login-form-email.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;text\&quot;][name=\&quot;email\&quot;]&quot;},{&quot;timestamp&quot;:1686232363.281,&quot;category&quot;:&quot;ui.input&quot;,&quot;message&quot;:&quot;input#login-form-email.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;text\&quot;][name=\&quot;email\&quot;]&quot;},{&quot;timestamp&quot;:1686232364.539,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232368.703,&quot;category&quot;:&quot;ui.input&quot;,&quot;message&quot;:&quot;input#login-form-password.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;password\&quot;][name=\&quot;password\&quot;]&quot;},{&quot;timestamp&quot;:1686232374.659,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232375.374,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;svg&quot;},{&quot;timestamp&quot;:1686232378.566,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;input#login-form-password.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-mnn31[type=\&quot;text\&quot;][name=\&quot;password\&quot;]&quot;},{&quot;timestamp&quot;:1686232381.955,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;svg&quot;},{&quot;timestamp&quot;:1686232384.817,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232385.568,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#login-form-sign-in-button.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeMedium.MuiButton-containedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeMedium.MuiButton-containedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.btn-login-submit.css-1220r71[type=\&quot;submit\&quot;]&quot;},{&quot;timestamp&quot;:1686232387.381,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232387.381,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232394.756,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232404.679,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232414.919,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232420.888,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;input#mui-198.MuiInputBase-input.MuiInput-input.css-mnn31[type=\&quot;tel\&quot;]&quot;},{&quot;timestamp&quot;:1686232425.057,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232425.771,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#submit-otp.MuiButtonBase-root.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeMedium.MuiButton-containedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.MuiButton-root.MuiButton-contained.MuiButton-containedPrimary.MuiButton-sizeMedium.MuiButton-containedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.css-1220r71[type=\&quot;submit\&quot;]&quot;},{&quot;timestamp&quot;:1686232426.799,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232426.8,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232427.605,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232427.606,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232427.631,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/login&quot;,&quot;to&quot;:&quot;/dashboard&quot;}},{&quot;timestamp&quot;:1686232428.252,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;An error occurred while retrieving token.&quot;,{&quot;message&quot;:&quot;Messaging: The notification permission was not granted and blocked instead. (messaging/permission-blocked).&quot;,&quot;name&quot;:&quot;FirebaseError&quot;,&quot;stack&quot;:&quot;FirebaseError: Messaging: The notification permission was not granted and blocked instead. (messaging/permission-blocked).\n    at e.&lt;anonymous&gt; (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:326238)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116053\n    at Object.next (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116158)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:115073\n    at new Promise (&lt;anonymous&gt;)\n    at h (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:114818)\n    at e.getToken (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:325975)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:332018\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116053\n    at Object.next (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116158)\n    at r (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1211907)\n    at s (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212110)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212169\n    at new Promise (&lt;anonymous&gt;)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212050\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:332216\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:337067\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116053\n    at Object.next (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116158)\n    at r (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1211907)\n    at s (https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212110)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212169\n    at new Promise (&lt;anonymous&gt;)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:1212050\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:337628\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/pages/_app-3a119e5fcba95c88.js:151:337691\n    at Ui (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:104667)\n    at t.unstable_runWithPriority (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:129355)\n    at Ql (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:44986)\n    at Fi (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:104128)\n    at bi (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:95618)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:45209\n    at t.unstable_runWithPriority (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:129355)\n    at Ql (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:44986)\n    at Yl (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:45154)\n    at Kl (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:45089)\n    at hi (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:93092)\n    at es (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:109202)\n    at os (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:110218)\n    at t.render (https://marketplace.qa.nxlvl.app/_next/static/chunks/framework-79bce4a3a540b080.js:1:118054)\n    at h.default.createElement.callbacks (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:21172)\n    at oe (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:21184)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:21549\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116053\n    at Object.next (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:116158)\n    at r (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:882)\n    at u (https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:1087)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:1146\n    at new Promise (&lt;anonymous&gt;)\n    at https://marketplace.qa.nxlvl.app/_next/static/chunks/main-0aec5a71f8114457.js:1:1027&quot;,&quot;code&quot;:&quot;messaging/permission-blocked&quot;,&quot;customData&quot;:&quot;[Object]&quot;}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;An error occurred while retrieving token. FirebaseError: Messaging: The notification permission was not granted and blocked instead. (messaging/permission-blocked).&quot;},{&quot;timestamp&quot;:1686232429.039,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.039,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;87eed82c597b0aee&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.239,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.239,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9346321c1b2408db&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.277,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.277,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;83413e0773b403db&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.37,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.37,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bb65ba7c12283b98&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.37,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.37,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;947154679fabc147&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.439,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1686232429257&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.872,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9ee9c1e5961f8a7a&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232429.928,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;96468e883e71ba34&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232430.937,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;,&quot;message&quot;:&quot;3c6850b6d709477c9b7418e818baec8a&quot;},{&quot;timestamp&quot;:1686232434.99,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232445.23,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232452.118,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;button#sidebar-discover-button-my-nft.MuiButtonBase-root.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.MuiButton-root.MuiButton-outlined.MuiButton-outlinedSecondary.MuiButton-sizeMedium.MuiButton-outlinedSizeMedium.MuiButton-disableElevation.MuiButton-fullWidth.nx-discover-btn.css-z8l1cg[type=\&quot;button\&quot;]&quot;},{&quot;timestamp&quot;:1686232452.134,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/dashboard&quot;,&quot;to&quot;:&quot;/my-nft/listed&quot;}},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.165,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bad993411fa9fb94&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.832,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.833,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;ad64ed41df8e6cf1&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232453.858,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232453.859,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;99799ad4e870759b&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232454.479,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;9eda62ffb4a24c0e&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232455.061,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232456.065,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;,&quot;message&quot;:&quot;51006cd156e146df9d4f1ad0f7ed59ab&quot;},{&quot;timestamp&quot;:1686232465.301,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232475.233,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api.gleap.io/sessions/ping&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232476.712,&quot;category&quot;:&quot;ui.click&quot;,&quot;message&quot;:&quot;span.MuiTypography-root.MuiTypography-body1.MuiListItemText-primary.css-17u1vbt&quot;},{&quot;timestamp&quot;:1686232476.782,&quot;category&quot;:&quot;navigation&quot;,&quot;data&quot;:{&quot;from&quot;:&quot;/my-nft/listed&quot;,&quot;to&quot;:&quot;/my-nft/sold&quot;}},{&quot;timestamp&quot;:1686232477.977,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232477.977,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;bba9a8efe4828bdf&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232478.218,&quot;category&quot;:&quot;console&quot;,&quot;data&quot;:{&quot;arguments&quot;:[&quot;prpr&quot;,{}],&quot;logger&quot;:&quot;console&quot;},&quot;level&quot;:&quot;log&quot;,&quot;message&quot;:&quot;prpr [object Response]&quot;},{&quot;timestamp&quot;:1686232478.219,&quot;category&quot;:&quot;fetch&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://routers.qa.nxlvl.app&quot;,&quot;__span&quot;:&quot;ab3f82d095c642d2&quot;,&quot;status_code&quot;:200},&quot;type&quot;:&quot;http&quot;},{&quot;timestamp&quot;:1686232479.222,&quot;category&quot;:&quot;sentry.transaction&quot;,&quot;event_id&quot;:&quot;38601a9fe94b46a0b453c7532b1456b9&quot;,&quot;message&quot;:&quot;38601a9fe94b46a0b453c7532b1456b9&quot;},{&quot;timestamp&quot;:1686232479.644,&quot;category&quot;:&quot;xhr&quot;,&quot;data&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;url&quot;:&quot;https://api-js.mixpanel.com/track/?verbose=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/4504926323277824/envelope/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://api.gleap.io/sessions/ping" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;time&quot;:191,&quot;events&quot;:[{&quot;name&quot;:&quot;pageView&quot;,&quot;date&quot;:&quot;2023-06-08T13:55:13.887Z&quot;,&quot;data&quot;:{&quot;page&quot;:&quot;https://marketplace.qa.nxlvl.app/login&quot;}}],&quot;opened&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Gleap-Id" elementType="Header">
                  <stringProp name="Header.name">Gleap-Id</stringProp>
                  <stringProp name="Header.value">7466aa33-c757-44ab-8739-7a89926a5d6f</stringProp>
                </elementProp>
                <elementProp name="Gleap-Hash" elementType="Header">
                  <stringProp name="Header.name">Gleap-Hash</stringProp>
                  <stringProp name="Header.value">4d736d20729823aba19973ccb28faec78afc8c97977e04aab40502d3603cd33f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Api-Token" elementType="Header">
                  <stringProp name="Header.name">Api-Token</stringProp>
                  <stringProp name="Header.value">aTlWdq3itePMf8N8MC0ZMi7rYKOf5nQ3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
